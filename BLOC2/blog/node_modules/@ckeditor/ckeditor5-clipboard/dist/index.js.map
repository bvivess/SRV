{"version":3,"sources":["index.js","../src/clipboardobserver.ts","../src/utils/plaintexttohtml.ts","../src/utils/normalizeclipboarddata.ts","../src/utils/viewtoplaintext.ts","../src/clipboardmarkersutils.ts","../src/clipboardpipeline.ts","../src/lineview.ts","../src/dragdroptarget.ts","../src/dragdropblocktoolbar.ts","../src/dragdrop.ts","../src/pasteplaintext.ts","../src/clipboard.ts"],"names":["ClipboardObserver","DomEventObserver","domEventType","constructor","view","viewDocument","document","listenTo","handleInput","priority","type","evt","data","preventDefault","targetRanges","dropRange","eventInfo","EventInfo","fire","dataTransfer","method","name","target","domEvent","stop","called","stopPropagation","onDomEvent","nativeDataTransfer","clipboardData","cacheFiles","evtData","DataTransfer","domRange","getRangeFromMouseEvent","domConverter","domRangeToView","plainTextToHtml","text","replace","includes","normalizeClipboardData","fullMatch","spaces","length","smallPaddingElements","listElements","viewToPlainText","viewItem","is","hasAttribute","getAttribute","prev","child","getChildren","newLinePadding","element","previous","isEmpty","getChild","getCustomProperty","ClipboardMarkersUtils","Plugin","_markersToCopy","Map","pluginName","_registerMarkerToCopy","markerName","config","set","_copySelectedFragmentWithMarkers","action","selection","getCopiedFragment","writer","model","getSelectedContent","editor","change","oldSelection","setSelection","sourceSelectionInsertedMarkers","_insertFakeMarkersIntoSelection","fragment","fakeMarkersRangesInsideRange","_removeFakeMarkersInsideElement","elements","Object","entries","createRangeIn","remove","markers","clear","range","_pasteMarkersIntoTransformedElement","getPastedDocumentElement","pasteMarkers","_getPasteMarkersFromRangeMap","sourceFragmentFakeMarkers","_insertFakeMarkersElements","transformedElement","removedFakeMarkers","values","flat","has","addMarker","usingOperation","affectsData","_pasteFragmentWithMarkers","copyableMarker","insertContent","executor","allowedActions","copyPartiallySelected","duplicateOnPaste","before","get","delete","_isMarkerCopyable","_getMarkerClipboardConfig","_hasMarkerConfiguration","markerNamePrefix","split","copyableMarkers","_getCopyableMarkersFromSelection","selectionRanges","Array","from","getRanges","markersInRanges","Set","flatMap","selectionRange","getMarkersIntersectingRange","isSelectionMarkerCopyable","marker","isCopyable","markerRange","getRange","some","containsRange","filter","map","_getUniqueMarkerName","copyMarkerConfig","isInGraveyard","root","rootName","mappedMarkers","sortedMarkers","start","end","position","sort","posA","posB","isBefore","fakeMarker","createElement","push","insert","rootElement","fakeMarkersElements","_getAllFakeMarkersFromElement","fakeMarkersRanges","reduce","acc","markerElement","createPositionBefore","prevFakeMarker","skipAssign","mapValues","Range","createPositionFromPath","createPositionAt","foundFakeMarkers","item","prependFakeMarkers","appendFakeMarkers","hasMatchingStartMarker","otherFakeMarker","hasMatchingEndMarker","unshift","parts","newId","uid","substring","slice","join","ClipboardPipeline","requires","editing","addObserver","_setupPasteDrop","_setupCopyCut","clipboardMarkersUtils","plugins","enqueueChange","isUndoable","documentFragment","content","canEditAt","contentData","getData","normalizeClipboardHtml","htmlProcessor","toView","scrollToTheSelection","dataController","modelFragment","toModel","childCount","resultRange","modelDocument","onCopyCut","_fireOutputTransformationEvent","setData","toData","deleteContent","toPx","toUnit","LineView","View","bind","bindTemplate","isVisible","left","top","width","setTemplate","tag","attributes","class","if","value","style","to","DragDropTarget","removeDropMarkerDelayed","delay","removeDropMarker","_updateDropMarkerThrottled","throttle","targetRange","_updateDropMarker","_reconvertMarkerThrottled","reconvertMarker","_dropTargetLineView","_domEmitter","DomEmitterMixin","_scrollables","_setupDropMarker","stopListening","resizeObserver","destroy","cancel","updateDropMarker","targetViewElement","targetViewRanges","clientX","clientY","blockMode","draggedRange","findDropTargetRange","getFinalDropRange","removeMarker","ui","body","add","conversion","for","markerToHighlight","classes","markerToElement","schema","checkChild","_createDropTargetPosition","isCollapsed","_updateDropTargetLine","isEqual","updateMarker","createUIElement","domDocument","domElement","toDomElement","append","nodeBefore","nodeAfter","nodeParent","parent","viewElementBefore","mapper","toViewElement","domElementBefore","mapViewToDom","viewElementAfter","domElementAfter","viewElementParent","domElementParent","domScrollableRect","_getScrollableRect","scrollX","scrollY","global","window","rectBefore","Rect","rectAfter","rectParent","excludeScrollbarsAndBorders","above","bottom","below","parentStyle","getComputedStyle","parseFloat","paddingLeft","right","paddingRight","leftClamped","Math","max","rightClamped","min","viewElement","domScrollable","findScrollableElement","usePassive","ResizeObserver","targetModelElement","getClosestMappedModelElement","modelElement","targetViewPosition","targetModelPosition","toModelPosition","canDropOnPosition","getItems","every","createRange","findDropTargetRangeForElement","isInline","isBlock","childNodes","node","shouldIgnoreElement","startIndex","endIndex","middleIndex","floor","side","findElementSide","float","rect","toModelElement","viewPosition","findMappedViewAncestor","domNode","parentElement","overflow","overflowY","tagName","DragDropBlockToolbar","_isBlockDragging","isReadOnly","forceDisabled","clearForceDisabled","env","isAndroid","blockToolbar","buttonView","_handleBlockDragStart","_handleBlockDragging","_handleBlockDragEnd","useCapture","isEnabled","setAttribute","on","blocks","getSelectedBlocks","createPositionAfter","focus","getObserver","locale","contentLanguageDirection","elementFromPoint","closest","DragDrop","_clearDraggableAttributesDelayed","_clearDraggableAttributes","_blockMode","Widget","_draggedRange","_draggingUid","_draggableElement","MouseObserver","_setupDragging","_setupContentInsertionIntegration","_setupClipboardInputIntegration","_setupDraggableAttributeHandling","_finalizeDragging","detach","_previewContainer","dragDropTarget","_prepareDraggedRange","effectAllowed","draggedSelection","createSelection","toRange","clipboardPipeline","domTarget","_updatePreview","isCanceled","dropEffect","isGecko","isMove","getFinalDropEffect","toViewRange","ranges","viewRange","toModelRange","isSuccess","draggableElement","findDraggableWidget","isBlink","selectedElement","getSelectedElement","isWidget","editableElement","removeAttribute","moved","widgetToolbarRepository","undefined","doNotAutoparagraph","selectionParent","getFirstPosition","insertElement","draggableWidget","LiveRange","fromRange","createRangeOn","getFirstRange","blockRange","getRangeIncludingFullySelectedParents","touchesBlockEdges","isTouching","editable","domEditable","computedStyle","appendChild","firstElementChild","removeChild","domRect","contains","domEditablePaddingLeft","preview","className","isiOS","backgroundColor","innerHTML","setDragImage","hasClass","findAncestor","ancestor","firstElement","lastElement","getCommonAncestor","startPosition","endPosition","isLimit","parentRange","touchesStart","touchesEnd","PastePlainText","isUnformattedInlineContent","textAttributes","getAttributes","key","getAttributeProperties","isFormatting","attribute","checkAttribute","isObject","attributeKeys","getAttributeKeys","find","Clipboard","t","accessibility","addKeystrokeInfos","keystrokes","label","keystroke"],"mappings":"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AAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,QAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,KAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,QAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,SAAA,CAAA,IAAA,CAAA,IAAA,CAAA,EAAA,CAAA,IAAA,CAAA,KAAA,CAAA,IAAA,CAAA,IAAA,CAAA,YAAA;AACA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,cAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,SAAA,CAAA,EAAA,CAAA,EAAA,CAAA,IAAA,CAAA,giBAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,QAAA,CAAA,IAAA,CAAA,gBAAA,CAAA,EAAA,CAAA,KAAA,CAAA,gBAAA,CAAA;AACA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,miBAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,KAAA,CAAA,KAAA,CAAA,aAAA,CAAA,CAAA,CAAA;AACA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,ggBAAA;AACA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,KAAA,CAAA,GAAA,CAAA,CAAA,oiBAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,SAAA,CAAA,KAAA,CAAA,gBAAA,CAAA,GAAA,CAAA,QAAA,CAAA,EAAA,CAAA,EAAA;AACA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,oBAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,ggBAAA,CAAA,EAAA,CAAA,IAAA,CAAA,IAAA,CAAA,GAAA,CAAA,IAAA,CAAA,KAAA;AACA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,eAAA,CAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,MAAA,CAAA,GAAA,CAAA,OAAA,CAAA,EAAA,CAAA,IAAA,CAAA,YAAA,CAAA;AACA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACA,CAAA,CAAA;AAEA,CAAA,CAAA,CAAA;ANyoBA,CAAC,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,WAAW,CAAC,GAAG,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,GAAG;AACvG,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC;AACzG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC;AAC9G,CAAC,CAAC;AACF,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ;AACnB,CAAC,CAAC;AACF,CAAC,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC;AAClE,CAAC,CAAC;AACF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC;AAC9B,CAAC,CAAC;AACF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC;AAChC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,CAAC,KAAK,CAAC;AACvH,CAAC,CAAC;AACF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC;AAC3C,CAAC,CAAC;AACF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK;AACzI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC;AAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;AACnF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC;AACxE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG;AAC7H,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,cAAc,CAAC,cAAc,CAAC,aAAa,CAAC,CAAC,cAAc,CAAC,aAAa,CAAC,CAAC,CAAC;AAClH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,iBAAiB,CAAC,iBAAiB,CAAC,KAAK,CAAC,mBAAmB;AACrG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,iBAAiB,CAAC,mBAAmB,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC;AACtH,CAAC,CAAC;AACF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,iBAAiB,CAAC,mBAAmB,CAAC;AACpD,CAAC,CAAC;AACF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,EAAE;AACpI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC,CAAC;AAC7F,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,iBAAiB,CAAC,iBAAiB,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,CAAC;AACxI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC;AAC/E,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,QAAQ;AAC3H,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACtG,CAAC,CAAC;AACF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,iBAAiB,CAAC,gBAAgB,CAAC;AACjD,CAAC,CAAC;AACF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC;AAClH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,SAAS,CAAC,QAAQ,CAAC;AACxC,CAAC,CAAC;AACF,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,QAAQ;AACpB,CAAC,CAAC;AACF,CAAC,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC;AAClE,CAAC,CAAC;AACF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC;AACzC,CAAC,CAAC;AACF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO;AAC9H,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9F,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC;AACnI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC,CAAC,KAAK;AACxH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC;AACxE,CAAC,CAAC;AACF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC;AAC5C,CAAC,CAAC;AACF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG;AAC9D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,cAAc,CAAC,cAAc,CAAC,aAAa,CAAC,CAAC,cAAc,CAAC,aAAa,CAAC,CAAC,CAAC;AAClH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC;AACpG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;AAC/G,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,SAAS,CAAC;AAC/B,CAAC,CAAC;AACF,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,SAAS,CAAC,WAAW,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC;AACrH,CAAC,CAAC,CAAC,CMvoBY,KAAMK,CAAAA,iBAA0B/H,CAAAA,OAAAA,CAAAA,MAAAA,CAAAA,CAAAA;AAC9C,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;ANwoBD,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU;AMtoBb,CACD,CAAA,CAAA,CAAA,CAAA,MAAA,CAAA,GAAA,CAAkBG,UAAa,CAAA,CAAA,CAAA,CAAA;ANuoBhC,CMtoBE,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,MAAA,CAAO,CAAA,iBAAA,CAAA,CAAA;AACR,CAAA,CAAA,CAAA,CAAA,CAAA;AAEA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;ANsoBD,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU;AMpoBb,CACD,CAAA,CAAA,CAAA,CAAA,MAAA,CAAA,GAAA,CAAkB6H,QAAW,CAAA,CAAA,CAAA,CAAA;ANqoB9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CMpoBL,MAAO,CAAA,CAAA;AAAEjI,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,qBAAAA;AAAuB,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACjC,CAAA,CAAA,CAAA,CAAA,CAAA;AAEA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;ANsoBD,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU;AMpoBb,CAAA,CAAA,CAAA,CAAA,CACD,IAAoB,CAAA,CAAA,CAAA,CAAA;ANqoBrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CMpoBL,KAAA,CAAMgB,MAAAA,CAAAA,CAAAA,CAAS,IAAI,CAACA,MAAM,CAAA;AAC1B,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,KAAA,CAAMzE,IAAOyE,CAAAA,CAAAA,CAAAA,MAAAA,CAAOkH,OAAO,CAAC3L,IAAI,CAAA;AAEhCA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,IAAAA,CAAK4L,WAAW,CAAEhM,iBAAAA,CAAAA,CAAAA;AAElB,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAI,CAACiM,eAAe,CAAA,CAAA,CAAA;AACpB,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAI,CAACC,aAAa,CAAA,CAAA,CAAA;AACnB,CAAA,CAAA,CAAA,CAAA,CAAA;AAEA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;ANkoBD,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,oBAAoB,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,UAAU,CAAC;AACxE,CAAC,CAAC,CAAC;AACH,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ;AMhoBX,CAAA,CAAA,CAAA,CAAA,CACD,8BACC/K,CAAAA,YAA0B,CAAA,CAC1BqD,SAAwC,CAAA,CACxCpD,MAAoC,CAC7B,CAAA,CAAA;AN6nBT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CM5nBL,KAAM+K,CAAAA,qBAAAA,CAA+C,CAAA,CAAA,IAAI,CAACtH,MAAM,CAACuH,OAAO,CAAChF,GAAG,CAAE,CAAA,qBAAA,CAAA,CAAA,CAAA;AAE9E,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAI,CAACvC,MAAM,CAACF,KAAK,CAAC0H,aAAa,CAAE,CAAA;AAAEC,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,UAAAA,CAAAA,CAAYlL,MAAW,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA;AN6nB5D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CM7nB6D,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AAClE,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,KAAA,CAAMmL,gBAAmBJ,CAAAA,CAAAA,CAAAA,qBAAAA,CAAsB7H,gCAAgC,CAAElD,MAAQoD,CAAAA,CAAAA,SAAAA,CAAAA,CAAAA;AN8nB5F,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CM5nBR,IAAI,CAACtD,IAAI,CAAsC,CAAA,oBAAA,CAAwB,CAAA,CAAA,CAAA;AACtEC,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,YAAAA,CAAAA;AN6nBJ,CM5nBIqL,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,OAASD,CAAAA,CAAAA,gBAAAA,CAAAA;AACTnL,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,MAAAA;AACD,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACD,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACD,CAAA,CAAA,CAAA,CAAA,CAAA;AAEA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AN4nBD,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC,QAAQ,CAAC;AM1nB/B,CAAA,CAAA,CAAA,CAAA,CACD,eAAgC,CAAA,CAAA,CAAA,CAAA;AN2nBjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CM1nBL,KAAA,CAAMyD,MAAAA,CAAAA,CAAAA,CAAS,IAAI,CAACA,MAAM,CAAA;AN2nB5B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CM1nBL,KAAA,CAAMF,KAAAA,CAAAA,CAAAA,CAAQE,MAAAA,CAAOF,KAAK,CAAA;AAC1B,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,KAAA,CAAMvE,IAAOyE,CAAAA,CAAAA,CAAAA,MAAAA,CAAOkH,OAAO,CAAC3L,IAAI,CAAA;AN2nBlC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CM1nBL,KAAA,CAAMC,YAAAA,CAAAA,CAAAA,CAAeD,IAAAA,CAAKE,QAAQ,CAAA;AN2nBpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CM1nBL,KAAM6L,CAAAA,qBAAAA,CAA+C,CAAA,CAAA,IAAI,CAACtH,MAAM,CAACuH,OAAO,CAAChF,GAAG,CAAE,CAAA,qBAAA,CAAA,CAAA,CAAA;AN2nBhF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,QAAQ,CAAC,KAAK,CAAC;AACvE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC;AMxnBvD,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAI,CAAC7G,QAAQ,CAAmCF,YAAc,CAAA,CAAA,CAAA,cAAA,CAAA,CAAA,CAAkB,CAAEM,GAAKC,CAAAA,CAAAA,IAAAA,CAAAA,CAAAA,CAAAA,CAAAA;AACtF,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAKA,IAAAA,CAAKQ,MAAM,CAAA,CAAA,CAAA,CAAI,CAAW,KAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAACyD,MAAAA,CAAOF,KAAK,CAAC8H,SAAS,CAAE5H,MAAAA,CAAOF,KAAK,CAACrE,QAAQ,CAACkE,SAAS,CAAK,CAAA,CAAA,CAAA;AAC3F7D,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,GAAAA,CAAIa,IAAI,CAAA,CAAA,CAAA;AACT,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AN0nBH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CMznBH,CAAA,CAAA,CAAA;AN0nBL,CM1nBOf,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,QAAU,CAAA,CAAA,CAAA,OAAA,CAAA;AAAU,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AAEzB,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAI,CAACF,QAAQ,CAAmCF,YAAc,CAAA,CAAA,CAAA,cAAA,CAAA,CAAA,CAAkB,CAAEM,GAAKC,CAAAA,CAAAA,IAAAA,CAAAA,CAAAA,CAAAA,CAAAA;AN2nBzF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CM1nBR,KAAA,CAAMO,YAAAA,CAAAA,CAAAA,CAAeP,IAAAA,CAAKO,YAAY,CAAA;AN2nBzC,CM1nBG,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAIqL,OAAAA,CAAAA;AN2nBP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;AAChH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CMznBR,EAAK5L,CAAAA,CAAAA,IAAAA,CAAK4L,OAAO,CAAG,CAAA,CAAA;AACnBA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,OAAAA,CAAAA,CAAAA,CAAU5L,IAAAA,CAAK4L,OAAO,CAAA;AN0nB1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CMznBF,CAAA,IAAA,CAAA,CAAA;AACN,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,GAAIE,CAAAA,WAAc,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AN0nBtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CMxnBX,EAAA,CAAA,CAAKvL,YAAAA,CAAawL,OAAO,CAAE,CAAA,IAAA,CAAA,IAAA,CAAgB,CAAA,CAAA,CAAA,CAAA;ANynB/C,CMxnBKD,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,WAAcE,CAAAA,CAAAA,CAAAA,sBAAAA,CAAwBzL,YAAawL,CAAAA,OAAO,CAAE,CAAA,IAAA,CAAA,IAAA,CAAA,CAAA,CAAA,CAAA;AAC7D,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAO,EAAA,CAAA,CAAKxL,YAAAA,CAAawL,OAAO,CAAE,CAAA,IAAA,CAAA,KAAA,CAAiB,CAAA,CAAA,CAAA,CAAA;ANynBvD,CMxnBKD,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,WAAcrK,CAAAA,CAAAA,CAAAA,eAAAA,CAAiBlB,YAAawL,CAAAA,OAAO,CAAE,CAAA,IAAA,CAAA,KAAA,CAAA,CAAA,CAAA,CAAA;AACtD,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;ANynBJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CMvnBXH,OAAU,CAAA,CAAA,CAAA,IAAI,CAAC3H,MAAM,CAACjE,IAAI,CAACiM,aAAa,CAACC,MAAM,CAAEJ,WAAAA,CAAAA,CAAAA;AAClD,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AAEA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,KAAA,CAAM1L,SAAY,CAAA,CAAA,CAAA,GAAIC,CAAAA,SAAW,CAAA,IAAI,CAAA,CAAE,CAAA,mBAAA,CAAA,CAAA,CAAA;ANunB1C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CMrnBR,IAAI,CAACC,IAAI,CAAqCF,SAAW,CAAA,CAAA,CAAA;AACxDwL,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,OAAAA,CAAAA;AACArL,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,YAAAA,CAAAA;AACAL,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,YAAAA,CAAAA,CAAcF,IAAAA,CAAKE,YAAY,CAAA;AAC/BM,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,MAAAA,CAAAA,CAAQR,IAAAA,CAAKQ,MAAM;AACpB,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;ANsnBH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC;AAC3F,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,YAAY,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,WAAW,CAAC;AACxF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE;AMnnBlE,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAKJ,SAAUQ,CAAAA,IAAI,CAACC,MAAM,CAAG,CAAA,CAAA;AAC5Bd,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,GAAAA,CAAIa,IAAI,CAAA,CAAA,CAAA;AACT,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AAEApB,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,IAAAA,CAAK2M,oBAAoB,CAAA,CAAA,CAAA;ANonB5B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CMnnBH,CAAA,CAAA,CAAA;ANonBL,CMpnBOtM,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,QAAU,CAAA,CAAA,CAAA,GAAA,CAAA;AAAM,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AAErB,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAI,CAACF,QAAQ,CAAqC,IAAI,CAAA,CAAE,CAAA,mBAAA,CAAA,CAAA,CAAuB,CAAEI,GAAKC,CAAAA,CAAAA,IAAAA,CAAAA,CAAAA,CAAAA,CAAAA;AACrF,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAKA,IAAK4L,CAAAA,OAAO,CAAC9I,OAAO,CAAG,CAAA,CAAA;AAC3B,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,MAAA,CAAA;AACD,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AAEA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,KAAA,CAAMsJ,cAAiB,CAAA,CAAA,CAAA,IAAI,CAACnI,MAAM,CAACjE,IAAI,CAAA;ANonB1C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC;AACzE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,MAAM;AAChG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,eAAe,CAAC,IAAI,CAAC;AMjnB1D,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,KAAMqM,CAAAA,aAAAA,CAAgBD,CAAAA,CAAAA,cAAeE,CAAAA,OAAO,CAAEtM,IAAAA,CAAK4L,OAAO,CAAE,CAAA,CAAA,CAAA,eAAA,CAAA,CAAA,CAAA;ANmnB/D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CMjnBR,EAAA,CAAA,CAAKS,aAAAA,CAAcE,UAAU,CAAA,CAAA,CAAA,CAAI,CAAI,CAAA,CAAA,CAAA;AACpC,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,MAAA,CAAA;AACD,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AAEAxM,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,GAAAA,CAAIa,IAAI,CAAA,CAAA,CAAA;ANinBX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK;AACrH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AM9mBnFmD,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,KAAAA,CAAMG,MAAM,CAAE,CAAA,CAAA,CAAA,CAAA,CAAA;ANgnBjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CM/mBX,IAAI,CAAC5D,IAAI,CAAkC,CAAA,gBAAA,CAAoB,CAAA,CAAA,CAAA;ANgnBnE,CM/mBKsL,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,OAASS,CAAAA,CAAAA,aAAAA,CAAAA;AACT7L,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,MAAAA,CAAAA,CAAQR,IAAAA,CAAKQ,MAAM,CAAA;AACnBD,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,YAAAA,CAAAA,CAAcP,IAAAA,CAAKO,YAAY,CAAA;AAC/BL,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,YAAAA,CAAAA,CAAcF,IAAAA,CAAKE,YAAY;AAChC,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACD,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;ANgnBH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CM/mBH,CAAA,CAAA,CAAA;ANgnBL,CMhnBOL,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,QAAU,CAAA,CAAA,CAAA,GAAA,CAAA;AAAM,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AAErB,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAI,CAACF,QAAQ,CAAkC,IAAI,CAAA,CAAE,CAAA,gBAAA,CAAA,CAAA,CAAoB,CAAEI,GAAKC,CAAAA,CAAAA,IAAAA,CAAAA,CAAAA,CAAAA,CAAAA;AAC/EA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,IAAAA,CAAKwM,WAAW,CAAA,CAAA,CAAGjB,qBAAAA,CAAsBvF,yBAAyB,CAAEhG,IAAAA,CAAK4L,OAAO,CAAA,CAAA;ANinBnF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CMhnBH,CAAA,CAAA,CAAA;ANinBL,CMjnBO/L,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,QAAU,CAAA,CAAA,CAAA,GAAA,CAAA;AAAM,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACtB,CAAA,CAAA,CAAA,CAAA,CAAA;AAEA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;ANknBD,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC;AMhnBlC,CAAA,CAAA,CAAA,CAAA,CACD,aAA8B,CAAA,CAAA,CAAA,CAAA;ANinB/B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CMhnBL,KAAA,CAAMoE,MAAAA,CAAAA,CAAAA,CAAS,IAAI,CAACA,MAAM,CAAA;AAC1B,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,KAAA,CAAMwI,aAAgBxI,CAAAA,CAAAA,CAAAA,MAAAA,CAAOF,KAAK,CAACrE,QAAQ,CAAA;AAC3C,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,KAAA,CAAMF,IAAOyE,CAAAA,CAAAA,CAAAA,MAAAA,CAAOkH,OAAO,CAAC3L,IAAI,CAAA;ANinBlC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CMhnBL,KAAA,CAAMC,YAAAA,CAAAA,CAAAA,CAAeD,IAAAA,CAAKE,QAAQ,CAAA;ANinBpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CM/mBL,KAAA,CAAMgN,SAAAA,CAAAA,CAAAA,CAAY,CAAE3M,GAAgCC,CAAAA,CAAAA,IAAAA,CAAAA,CAAAA,CAAAA,CAAAA;ANgnBtD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CM/mBR,KAAA,CAAMO,YAAAA,CAAAA,CAAAA,CAAeP,IAAAA,CAAKO,YAAY,CAAA;AAEtCP,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,IAAAA,CAAKC,cAAc,CAAA,CAAA,CAAA;AN+mBtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CM7mBR,IAAI,CAAC0M,8BAA8B,CAAEpM,YAAAA,CAAckM,CAAAA,aAAAA,CAAc7I,SAAS,CAAE7D,CAAAA,GAAAA,CAAIU,IAAI,CAAA,CAAA;AACrF,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AAEA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAI,CAACd,QAAQ,CAAyBF,YAAAA,CAAc,CAAA,CAAA,IAAA,CAAA,CAAQiN,CAAAA,SAAW,CAAA,CAAA,CAAA;AN6mBzE,CM7mB2E7M,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,QAAU,CAAA,CAAA,CAAA,GAAA,CAAA;AAAM,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACzF,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAI,CAACF,QAAQ,CAAwBF,YAAc,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAO,CAAEM,GAAKC,CAAAA,CAAAA,IAAAA,CAAAA,CAAAA,CAAAA,CAAAA;AN+mBnE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,QAAQ,CAAC,KAAK,CAAC;AAC3E,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,SAAS,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,CAAC;AM7mB3E,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAK,CAACiE,MAAAA,CAAOF,KAAK,CAAC8H,SAAS,CAAE5H,MAAOF,CAAAA,KAAK,CAACrE,QAAQ,CAACkE,SAAS,CAAK,CAAA,CAAA,CAAA;AACjE5D,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,IAAAA,CAAKC,cAAc,CAAA,CAAA,CAAA;AN+mBvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CM9mBF,CAAA,IAAA,CAAA,CAAA;AACNyM,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,SAAAA,CAAW3M,GAAKC,CAAAA,CAAAA,IAAAA,CAAAA,CAAAA;AACjB,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AN+mBH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CM9mBH,CAAA,CAAA,CAAA;AN+mBL,CM/mBOH,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,QAAU,CAAA,CAAA,CAAA,GAAA,CAAA;AAAM,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AAErB,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAI,CAACF,QAAQ,CAAsC,IAAI,CAAA,CAAE,CAAA,oBAAA,CAAA,CAAA,CAAwB,CAAEI,GAAKC,CAAAA,CAAAA,IAAAA,CAAAA,CAAAA,CAAAA,CAAAA;AACvF,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,KAAM4L,CAAAA,OAAAA,CAAU3H,CAAAA,CAAAA,MAAOjE,CAAAA,IAAI,CAACkM,MAAM,CAAElM,IAAAA,CAAK4L,OAAO,CAAA,CAAA;ANgnBnD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CM9mBRnM,YAAaa,CAAAA,IAAI,CAAoC,CAAA,eAAA,CAAmB,CAAA,CAAA,CAAA;AACvEC,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,YAAAA,CAAAA,CAAcP,IAAAA,CAAKO,YAAY,CAAA;AAC/BqL,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,OAAAA,CAAAA;AACApL,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,MAAAA,CAAAA,CAAQR,IAAAA,CAAKQ,MAAM;AACpB,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AN+mBH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CM9mBH,CAAA,CAAA,CAAA;AN+mBL,CM/mBOX,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,QAAU,CAAA,CAAA,CAAA,GAAA,CAAA;AAAM,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AAErB,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAI,CAACF,QAAQ,CAAoCF,YAAc,CAAA,CAAA,CAAA,eAAA,CAAA,CAAA,CAAmB,CAAEM,GAAKC,CAAAA,CAAAA,IAAAA,CAAAA,CAAAA,CAAAA,CAAAA;AACxF,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAK,CAACA,IAAAA,CAAK4L,OAAO,CAAC9I,OAAO,CAAG,CAAA,CAAA;AAC5B9C,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,IAAAA,CAAKO,YAAY,CAACqM,OAAO,CAAE,CAAA,IAAA,CAAA,IAAA,CAAA,CAAa,CAAA,IAAI,CAAC3I,MAAM,CAACjE,IAAI,CAACiM,aAAa,CAACY,MAAM,CAAE7M,IAAAA,CAAK4L,OAAO,CAAA,CAAA,CAAA;AAC3F5L,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,IAAAA,CAAKO,YAAY,CAACqM,OAAO,CAAE,CAAA,IAAA,CAAA,KAAA,CAAczK,CAAAA,CAAAA,eAAAA,CAAiBnC,IAAAA,CAAK4L,OAAO,CAAA,CAAA,CAAA;AACvE,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;ANgnBH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CM9mBR,EAAA,CAAA,CAAK5L,IAAAA,CAAKQ,MAAM,CAAA,CAAA,CAAA,CAAI,CAAA,GAAA,CAAQ,CAAA,CAAA,CAAA;AAC3ByD,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,MAAAA,CAAOF,KAAK,CAAC+I,aAAa,CAAEL,aAAAA,CAAc7I,SAAS,CAAA,CAAA;AACpD,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AN+mBH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CM9mBH,CAAA,CAAA,CAAA;AN+mBL,CM/mBO/D,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,QAAU,CAAA,CAAA,CAAA,GAAA,CAAA;AAAM,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACtB,CAAA,CAAA,CAAA,CAAA,CAAA;AACD,CAAA;ANinBA;AOh7BA,KAAA,CAAMkN,IAAAA,CAAuBC,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,QAAAA,CAAAA,CAAAA,CAAAA,CAAAA,MAAQ,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA;AAErC,CAAA,CAAA,CAAA;APi7BA,CAAC,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;AACxC,CAAC,CAAC,CAAC,CO/6BY,KAAMC,CAAAA,QAAiBC,CAAAA,OAAAA,CAAAA,IAAAA,CAAAA,CAAAA;AAiCrC,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;APg5BD,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU;AO94Bb,CAAA,CAAA,CAAA,CAAA,CACD3N,WAAc,CAAA,CAAA,CAAA;AP+4Bf,CO94BE,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,KAAK,CAAA,CAAA,CAAA;AP+4BP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CO74BL,KAAA,CAAM4N,IAAAA,CAAAA,CAAAA,CAAO,IAAI,CAACC,YAAY,CAAA;AP84BhC,CO54BE,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAI,CAAC3J,GAAG,CAAE,CAAA;AP64BZ,CO54BG4J,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,SAAW,CAAA,CAAA,KAAA,CAAA;AP64Bd,CO54BGC,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,IAAM,CAAA,CAAA,IAAA,CAAA;AP64BT,CO54BGC,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,GAAK,CAAA,CAAA,IAAA,CAAA;AP64BR,CO54BGC,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,KAAO,CAAA,CAAA,IAAA;AACR,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AP64BF,CO34BE,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAI,CAACC,WAAW,CAAE,CAAA;AP44BpB,CO34BGC,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,GAAK,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA;AP44BR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CO34BRC,UAAY,CAAA,CAAA,CAAA;AP44Bf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CO34BXC,KAAO,CAAA,CAAA,CAAA;AACN,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA;AACA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,SAAA,CAAA,IAAA,CAAA,MAAA,CAAA,IAAA,CAAA,CAAA;AACAT,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,IAAAA,CAAKU,EAAE,CAAE,CAAA,SAAA,CAAA,CAAA,CAAa,CAAaC,EAAAA,CAAAA,MAAAA,CAAAA,CAAAA,CAAAA,CAAAA,KAAAA,CAAS,CAAA,CAAA,CAACA,KAAAA,CAAAA;AAC7C,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AP44BL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CO34BXC,KAAO,CAAA,CAAA,CAAA;AACNT,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,IAAAA,CAAAA,CAAMH,IAAAA,CAAKa,EAAE,CAAE,CAAA,IAAA,CAAQV,CAAAA,CAAAA,CAAAA,IAAAA,CAAQP,CAAAA,CAAAA,IAAMO,CAAAA,IAAAA,CAAAA,CAAAA,CAAAA;AACrCC,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,GAAAA,CAAAA,CAAKJ,IAAAA,CAAKa,EAAE,CAAE,CAAA,GAAA,CAAOT,CAAAA,CAAAA,CAAAA,GAAAA,CAAOR,CAAAA,CAAAA,IAAMQ,CAAAA,GAAAA,CAAAA,CAAAA,CAAAA;AAClCC,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,KAAAA,CAAAA,CAAOL,IAAAA,CAAKa,EAAE,CAAE,CAAA,KAAA,CAASR,CAAAA,CAAAA,CAAAA,KAAAA,CAAST,CAAAA,CAAAA,IAAMS,CAAAA,KAAAA,CAAAA,CAAAA;AACzC,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACD,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACD,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACD,CAAA,CAAA,CAAA,CAAA,CAAA;AACD,CAAA;AP44BA;AQz7BA,CAAA,CAAA,CAAA;AR27BA,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC;AAC9F,CAAC,CAAC;AACF,CAAC,CAAC,CAAC,CAAC,QAAQ;AACZ,CAAC,CAAC,CAAC,CQz7BY,KAAMS,CAAAA,cAAuB/K,CAAAA,OAAAA,CAAAA,MAAAA,CAAAA,CAAAA;AAC3C,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AR07BD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC;AAChD,CAAC,CAAC,CAAC;AACH,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ;AACb,CAAC,CAAC,CAAC,CAAC,CQx7BagL,uBAAAA,CAAAA,CAAAA,CAA0BC,KAAO,CAAA,CAAM,CAAA,CAAA,CAAA,IAAI,CAACC,gBAAgB,CAAA,CAAA,CAAA,CAAI,EAAK,CAAA,CAAA;AAErF,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;ARw7BD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC;AAClD,CAAC,CAAC,CAAC,CAAC,CQt7BcC,0BAA6BC,CAAAA,CAAAA,CAAAA,QAAAA,CAC7CC,CAAAA,WAAAA,CAAe,CAAA,CAAA,IAAI,CAACC,iBAAiB,CAAED,WAAAA,CAAAA,CAAe,CAAA,EACrD,CAAA,CAAA;AAEF,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;ARo7BD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,YAAY,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC;AACtD,CAAC,CAAC,CAAC,CAAC,CQl7BcE,yBAAAA,CAAAA,CAAAA,CAA4BH,QAAU,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;ARm7BxD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CQl7BL,EAAK,CAAA,CAAA,IAAI,CAACrK,MAAM,CAACF,KAAK,CAACgB,OAAO,CAACa,GAAG,CAAE,CAAA,IAAA,CAAA,MAAA,CAAkB,CAAA,CAAA,CAAA,CAAA;AACrD,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAI,CAAC3B,MAAM,CAACkH,OAAO,CAACuD,eAAe,CAAE,CAAA,IAAA,CAAA,MAAA,CAAA,CAAA,CAAA;AACtC,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACD,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAG,CAAI,CAAA,CAAA;AAEP,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;ARk7BD,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;AACzC,CAAC,CAAC,CAAC,CAAC,CQh7BKC,mBAAsB,CAAA,CAAA,CAAA,GAAI1B,CAAAA,QAAW,CAAA,CAAA,CAAA;AAE7C,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;ARg7BD,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC;AQ96Bd,CAAA,CAAA,CAAA,CAAA,CACD,WAAQ2B,CAA0B,CAAA,CAAA,GAAA,CAAA,CAAMC,eAAAA,CAAAA,CAAgB,CAAA,CAAA,CAAM,CAAA;AAE9D,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AR86BD,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,QAAQ,CAAC,UAAU,CAAC,QAAQ,CAAC;AACxC,CAAC,CAAC,CAAC,CAAC,CQ56BKC,YAAe,CAAA,CAAA,CAAA,GAAI1L,CAAAA,GAGtB,CAAA,CAAA,CAAA;AAEL,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;ARy6BD,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU;AQv6Bb,CACD,CAAA,CAAA,CAAA,CAAA,MAAA,CAAA,GAAA,CAAkBC,UAAa,CAAA,CAAA,CAAA,CAAA;ARw6BhC,CQv6BE,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,MAAA,CAAO,CAAA,cAAA,CAAA,CAAA;AACR,CAAA,CAAA,CAAA,CAAA,CAAA;AAEA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;ARu6BD,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU;AQr6Bb,CAAA,CAAA,CAAA,CAAA,CACD,IAAoB,CAAA,CAAA,CAAA,CAAA;AACnB,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAI,CAAC0L,gBAAgB,CAAA,CAAA,CAAA;AACtB,CAAA,CAAA,CAAA,CAAA,CAAA;AAEA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;ARq6BD,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU;AQn6Bb,CAAA,CAAA,CAAA,CAAA,CACD,OAAgC,CAAA,CAAA,CAAA,CAAA;ARo6BjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CQn6BL,IAAI,CAACH,WAAW,CAACI,aAAa,CAAA,CAAA,CAAA;ARo6BhC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CQl6BL,GAAM,CAAA,CAAA,KAAA,CAAM,CAAEC,CAAAA,cAAc,CAAE,CAAA,CAAA,EAAA,CAAI,IAAI,CAACH,YAAY,CAACpJ,MAAM,CAAA,CAAK,CAAA,CAAA;AAC9DuJ,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,cAAAA,CAAeC,OAAO,CAAA,CAAA,CAAA;AACvB,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;ARm6BF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CQj6BL,IAAI,CAACb,0BAA0B,CAACc,MAAM,CAAA,CAAA,CAAA;ARk6BxC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CQj6BL,IAAI,CAACjB,uBAAuB,CAACiB,MAAM,CAAA,CAAA,CAAA;ARk6BrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CQj6BL,IAAI,CAACV,yBAAyB,CAACU,MAAM,CAAA,CAAA,CAAA;AAErC,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,MAAO,CAAA,KAAK,CAACD,OAAAA,CAAAA,CAAAA,CAAAA;AACd,CAAA,CAAA,CAAA,CAAA,CAAA;AAEA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;ARg6BD,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC;AAC5D,CAAC,CAAC,CAAC;AACH,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ;AQ95BX,CAAA,CAAA,CAAA,CAAA,CACD,gBAAOE,CACNC,iBAA8B,CAAA,CAC9BC,gBAAyC,CAAA,CACzCC,OAAe,CAAA,CACfC,OAAe,CAAA,CACfC,SAAkB,CAAA,CAClBC,YAA8B,CACvB,CAAA,CAAA;ARw5BT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CQv5BL,IAAI,CAACxB,uBAAuB,CAACiB,MAAM,CAAA,CAAA,CAAA;ARw5BrC,CQt5BE,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,KAAA,CAAMZ,WAAAA,CAAcoB,CAAAA,CAAAA,mBACnB,CAAA,IAAI,CAAC1L,MAAM,CACXoL,CAAAA,iBACAC,CAAAA,CAAAA,gBAAAA,CAAAA,CACAC,OACAC,CAAAA,CAAAA,OAAAA,CAAAA,CACAC,SACAC,CAAAA,CAAAA,YAAAA,CAAAA,CAAAA;ARg5BH,CQ54BE,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,QAAA,CAAA,MAAA,CAAA,IAAA,CAAA,CAAA,CAAA,CAAA,CAAA,QAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAK,CAACnB,WAAc,CAAA,CAAA,CAAA;AACnB,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,MAAA,CAAA;AACD,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AAEA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAKmB,YAAgBA,CAAAA,CAAAA,CAAAA,CAAAA,YAAAA,CAAa1H,aAAa,CAAEuG,WAAgB,CAAA,CAAA,CAAA,CAAA;AR44BnE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC;AACxD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CQ34BR,MAAO,CAAA,IAAI,CAACH,gBAAgB,CAAA,CAAA,CAAA;AAC7B,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AR44BF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CQ14BL,IAAI,CAACC,0BAA0B,CAAEE,WAAAA,CAAAA,CAAAA;AAClC,CAAA,CAAA,CAAA,CAAA,CAAA;AAEA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AR04BD,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;AACtC,CAAC,CAAC,CAAC;AACH,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ;AQx4BX,CAAA,CAAA,CAAA,CAAA,CACD,iBAAOqB,CACNP,iBAA8B,CAAA,CAC9BC,gBAAyC,CAAA,CACzCC,OAAe,CAAA,CACfC,OAAe,CAAA,CACfC,SAAkB,CAAA,CAClBC,YAA8B,CACf,CAAA,CAAA;ARk4BjB,CQj4BE,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,KAAA,CAAMnB,WAAAA,CAAcoB,CAAAA,CAAAA,mBACnB,CAAA,IAAI,CAAC1L,MAAM,CACXoL,CAAAA,iBACAC,CAAAA,CAAAA,gBAAAA,CAAAA,CACAC,OACAC,CAAAA,CAAAA,OAAAA,CAAAA,CACAC,SACAC,CAAAA,CAAAA,YAAAA,CAAAA,CAAAA;AR23BH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS;AACtG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC;AQx3B/C,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAI,CAACtB,gBAAgB,CAAA,CAAA,CAAA;AR03BvB,CQx3BE,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,MAAA,CAAOG,WAAAA,CAAAA;AACR,CAAA,CAAA,CAAA,CAAA,CAAA;AAEA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;ARw3BD,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;AACnC,CAAC,CAAC,CAAC;AACH,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ;AQt3BX,CAAA,CAAA,CAAA,CAAA,CACD,gBAAgC,CAAA,CAAA,CAAA,CAAA;AAC/B,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,KAAA,CAAMxK,KAAQ,CAAA,CAAA,CAAA,IAAI,CAACE,MAAM,CAACF,KAAK,CAAA;ARu3BjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CQr3BL,IAAI,CAACmK,uBAAuB,CAACiB,MAAM,CAAA,CAAA,CAAA;ARs3BrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CQr3BL,IAAI,CAACd,0BAA0B,CAACc,MAAM,CAAA,CAAA,CAAA;AACtC,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAI,CAACR,mBAAmB,CAACtB,SAAS,CAAA,CAAA,CAAG,KAAA,CAAA;AAErC,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAKtJ,KAAMgB,CAAAA,OAAO,CAACa,GAAG,CAAE,CAAkB,IAAA,CAAA,MAAA,CAAA,CAAA,CAAA,CAAA,CAAA;ARq3B5C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CQp3BR7B,KAAMG,CAAAA,MAAM,CAAEJ,CAAAA,MAAAA,CAAAA,CAAAA,CAAAA,CAAAA;AACbA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,MAAAA,CAAO+L,YAAY,CAAE,CAAA,IAAA,CAAA,MAAA,CAAA,CAAA,CAAA;AACtB,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACD,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACD,CAAA,CAAA,CAAA,CAAA,CAAA;AAEA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;ARo3BD,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;AQl3BzD,CAAA,CAAA,CAAA,CAAA,CACD,gBAAiC,CAAA,CAAA,CAAA,CAAA;ARm3BlC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CQl3BL,KAAA,CAAM5L,MAAAA,CAAAA,CAAAA,CAAS,IAAI,CAACA,MAAM,CAAA;ARm3B5B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CQj3BLA,MAAO6L,CAAAA,EAAE,CAACtQ,IAAI,CAACuQ,IAAI,CAACC,GAAG,CAAE,IAAI,CAACrB,mBAAmB,CAAA,CAAA;ARk3BnD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC;AQ/2B1D1K,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,MAAAA,CAAOgM,UAAU,CAACC,GAAG,CAAE,CAAA,eAAA,CAAA,CAAA,CAAoBC,iBAAiB,CAAE,CAAA;ARi3BhE,CQh3BGpM,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,KAAO,CAAA,CAAA,CAAA,IAAA,CAAA,MAAA,CAAA,CAAA;ARi3BV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CQh3BRvE,IAAM,CAAA,CAAA,CAAA;ARi3BT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CQh3BX4Q,OAAS,CAAA,CAAA,CAAA;AAAE,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,SAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,CAAA;AAAkC,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AAC9C,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACD,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;ARm3BF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC;AQh3BlEnM,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,MAAAA,CAAOgM,UAAU,CAACC,GAAG,CAAE,CAAA,eAAA,CAAA,CAAA,CAAoBG,eAAe,CAAE,CAAA;ARk3B9D,CQj3BGtM,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,KAAO,CAAA,CAAA,CAAA,IAAA,CAAA,MAAA,CAAA,CAAA;AACPvE,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,IAAAA,CAAAA,CAAM,CAAEQ,IAAAA,CAAAA,CAAM,CAAE8D,CAAAA,MAAM,CAAA,CAAE,CAAA,CAAA,CAAA,CAAA;ARk3B3B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC;AQh3B3B,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAKG,MAAOF,CAAAA,KAAK,CAACuM,MAAM,CAACC,UAAU,CAAEvQ,IAAAA,CAAK6H,WAAW,CAACa,KAAK,CAAE,CAAA,CAAA,CAAA,IAAA,CAAY,CAAA,CAAA,CAAA,CAAA;AACxE,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAI,CAACiG,mBAAmB,CAACtB,SAAS,CAAA,CAAA,CAAG,KAAA,CAAA;ARk3B1C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CQh3Bd,MAAA,CAAO,IAAI,CAACmD,yBAAyB,CAAE1M,MAAAA,CAAAA,CAAAA;ARi3B5C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CQ92BP,CAAA,IAAA,CAAA,CAAA;AACJ,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAK9D,IAAK6H,CAAAA,WAAW,CAAC4I,WAAW,CAAG,CAAA,CAAA;AACnC,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAI,CAACC,qBAAqB,CAAE1Q,IAAAA,CAAK6H,WAAW,CAAA,CAAA;AR+2BlD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CQ92BR,CAAA,IAAA,CAAA,CAAA;AACN,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAI,CAAC8G,mBAAmB,CAACtB,SAAS,CAAA,CAAA,CAAG,KAAA,CAAA;AACtC,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACD,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACD,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACD,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACD,CAAA,CAAA,CAAA,CAAA,CAAA;AAEA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AR82BD,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,CAAC,QAAQ,CAAC,KAAK,CAAC;AACzD,CAAC,CAAC,CAAC;AACH,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC;AACtD,CQ52BSmB,CAAAA,CAAAA,CAAAA,CAAAA,iBAAmBD,CAAAA,WAAkB,CAAS,CAAA,CAAA;AR62BvD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CQ52BL,KAAA,CAAMtK,MAAAA,CAAAA,CAAAA,CAAS,IAAI,CAACA,MAAM,CAAA;AAC1B,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,KAAA,CAAMc,OAAUd,CAAAA,CAAAA,CAAAA,MAAAA,CAAOF,KAAK,CAACgB,OAAO,CAAA;AAEpCd,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,MAAAA,CAAOF,KAAK,CAACG,MAAM,CAAEJ,CAAAA,MAAAA,CAAAA,CAAAA,CAAAA,CAAAA;AR42BvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CQ32BR,EAAA,CAAA,CAAKiB,OAAAA,CAAQa,GAAG,CAAE,CAAA,IAAA,CAAA,MAAA,CAAkB,CAAA,CAAA,CAAA,CAAA;AR42BvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CQ32BX,EAAA,CAAA,CAAK,CAACb,OAAAA,CAAQyB,GAAG,CAAE,CAAA,IAAA,CAAA,MAAA,CAAA,CAAA,CAAiBsB,QAAQ,CAAA,CAAA,CAAG6I,OAAO,CAAEpC,WAAgB,CAAA,CAAA,CAAA,CAAA;AR42B5E,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CQ32BdzK,MAAO8M,CAAAA,YAAY,CAAE,CAAA,IAAA,CAAA,MAAA,CAAe,CAAA,CAAA,CAAA;AR42BzC,CQ52B2C3L,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,KAAOsJ,CAAAA,CAAAA,WAAAA;AAAY,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AAC1D,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AR82BJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CQ72BF,CAAA,IAAA,CAAA,CAAA;AR82BV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CQ72BXzK,MAAO+B,CAAAA,SAAS,CAAE,CAAA,IAAA,CAAA,MAAA,CAAe,CAAA,CAAA,CAAA;AR82BrC,CQ72BKZ,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,KAAOsJ,CAAAA,CAAAA,WAAAA,CAAAA;AR82BZ,CQ72BKzI,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,cAAgB,CAAA,CAAA,KAAA,CAAA;AR82BrB,CQ72BKC,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,WAAa,CAAA,CAAA,KAAA;AACd,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACD,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACD,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACD,CAAA,CAAA,CAAA,CAAA,CAAA;AAEA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AR62BD,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC;AAC9D,CQ32BSyK,CAAAA,CAAAA,CAAAA,CAAAA,yBAA2B1M,CAAAA,MAAsB,CAAgB,CAAA,CAAA;AR42B1E,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CQ32BL,MAAA,CAAOA,MAAAA,CAAO+M,eAAe,CAAE,CAAA,IAAA,CAAQ,CAAA,CAAA,CAAA;AR42BzC,CQ52B2CjD,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,KAAO,CAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,SAAA,CAAA,IAAA,CAAA,MAAA,CAAA,QAAA,CAAA;AAAuC,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAG,QAAUkD,CAAAA,WAAW,CAAA,CAAA,CAAA;AAC9G,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,KAAA,CAAMC,UAAa,CAAA,CAAA,CAAA,IAAI,CAACC,YAAY,CAAEF,WAAAA,CAAAA,CAAAA;AR82BzC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,MAAM,CAAC;AQ32B3GC,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,UAAAA,CAAWE,MAAM,CAAE,CAAA,CAAA,KAAA,CAAA,CAAUH,CAAAA,WAAY5H,CAAAA,aAAa,CAAE,CAAU,IAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,KAAA,CAAA,CAAA,CAAA;AR62BrE,CQ32BG,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,MAAA,CAAO6H,UAAAA,CAAAA;AACR,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACD,CAAA,CAAA,CAAA,CAAA,CAAA;AAEA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AR22BD,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;AAC5C,CQz2BSL,CAAAA,CAAAA,CAAAA,CAAAA,qBAAuBzL,CAAAA,KAAY,CAAS,CAAA,CAAA;AACnD,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,KAAA,CAAMkG,OAAU,CAAA,CAAA,CAAA,IAAI,CAAClH,MAAM,CAACkH,OAAO,CAAA;AAEnC,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,KAAA,CAAM+F,UAAajM,CAAAA,CAAAA,CAAAA,KAAAA,CAAMyD,KAAK,CAACwI,UAAU,CAAA;AACzC,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,KAAA,CAAMC,SAAYlM,CAAAA,CAAAA,CAAAA,KAAAA,CAAMyD,KAAK,CAACyI,SAAS,CAAA;AACvC,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,KAAA,CAAMC,UAAanM,CAAAA,CAAAA,CAAAA,KAAAA,CAAMyD,KAAK,CAAC2I,MAAM,CAAA;AAErC,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,KAAMC,CAAAA,iBAAAA,CAAoBJ,CAAAA,CAAAA,UAAa/F,CAAAA,CAAAA,CAAAA,OAAAA,CAAQoG,MAAM,CAACC,aAAa,CAAEN,UAAe,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA;ARw2BtF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CQv2BL,KAAA,CAAMO,gBAAAA,CAAAA,CAAAA,CAAmBH,iBAAAA,CAAAA,CAAAA,CAAoBnG,OAAQ3L,CAAAA,IAAI,CAAC+B,YAAY,CAACmQ,YAAY,CAAEJ,iBAAsB,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA;AAE3G,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,KAAMK,CAAAA,gBAAAA,CAAmBR,CAAAA,CAAAA,SAAYhG,CAAAA,CAAAA,CAAAA,OAAAA,CAAQoG,MAAM,CAACC,aAAa,CAAEL,SAAe,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA;ARu2BpF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CQt2BL,KAAA,CAAMS,eAAAA,CAAAA,CAAAA,CAAkBD,gBAAAA,CAAAA,CAAAA,CAAmBxG,OAAQ3L,CAAAA,IAAI,CAAC+B,YAAY,CAACmQ,YAAY,CAAEC,gBAAqB,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA;AAExG,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,KAAA,CAAME,iBAAoB1G,CAAAA,CAAAA,CAAAA,OAAAA,CAAQoG,MAAM,CAACC,aAAa,CAAEJ,UAAAA,CAAAA,CAAAA;AAExD,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAK,CAACS,iBAAoB,CAAA,CAAA,CAAA;AACzB,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,MAAA,CAAA;AACD,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AAEA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,KAAMC,CAAAA,gBAAAA,CAAmB3G,CAAAA,CAAAA,OAAQ3L,CAAAA,IAAI,CAAC+B,YAAY,CAACmQ,YAAY,CAAEG,iBAAAA,CAAAA,CAAAA;AAEjE,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,KAAA,CAAME,iBAAoB,CAAA,CAAA,CAAA,IAAI,CAACC,kBAAkB,CAAEH,iBAAAA,CAAAA,CAAAA;AAEnD,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,KAAA,CAAM,CAAEI,CAAAA,OAAO,CAAEC,CAAAA,OAAO,CAAA,CAAE,CAAGC,CAAAA,CAAAA,MAAAA,CAAOC,MAAM,CAAA;AAC1C,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,KAAMC,CAAAA,UAAaZ,CAAAA,CAAAA,CAAAA,gBAAAA,CAAmB,CAAA,CAAA,GAAA,CAAIa,IAAAA,CAAMb,gBAAqB,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA;AACrE,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,KAAMc,CAAAA,SAAYX,CAAAA,CAAAA,CAAAA,eAAAA,CAAkB,CAAA,CAAA,GAAA,CAAIU,IAAAA,CAAMV,eAAoB,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA;AAClE,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,KAAA,CAAMY,UAAa,CAAA,CAAA,CAAA,GAAIF,CAAAA,IAAMR,CAAAA,gBAAAA,CAAAA,CAAmBW,2BAA2B,CAAA,CAAA,CAAA;AAE3E,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,KAAMC,CAAAA,KAAAA,CAAQL,CAAAA,CAAAA,UAAaA,CAAAA,CAAAA,CAAAA,UAAAA,CAAWM,MAAM,CAAGH,CAAAA,CAAAA,UAAAA,CAAWjF,GAAG,CAAA;AAC7D,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,KAAMqF,CAAAA,KAAAA,CAAQL,CAAAA,CAAAA,SAAYA,CAAAA,CAAAA,CAAAA,SAAAA,CAAUhF,GAAG,CAAGiF,CAAAA,CAAAA,UAAAA,CAAWG,MAAM,CAAA;AAE3D,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,KAAA,CAAME,WAAcV,CAAAA,CAAAA,CAAAA,MAAAA,CAAOC,MAAM,CAACU,gBAAgB,CAAEhB,gBAAAA,CAAAA,CAAAA;ARg2BtD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CQ/1BL,KAAMvE,CAAAA,GAAAA,CAAQmF,CAAAA,CAAAA,KAAAA,CAAAA,CAAAA,CAAAA,CAASE,KAAQ,CAAA,CAAA,CAAEF,CAAAA,KAAQE,CAAAA,CAAAA,CAAAA,KAAI,CAAA,CAAA,CAAA,CAAM,CAAIA,CAAAA,CAAAA,CAAAA,KAAAA,CAAAA;AAEvD,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAKb,CAAAA,CAAAA,iBAAAA,CAAkBxE,GAAG,CAAGA,CAAAA,CAAAA,GAAAA,CAAOA,CAAAA,CAAAA,CAAAA,GAAMwE,CAAAA,CAAAA,CAAAA,iBAAAA,CAAkBY,MAAM,CAAG,CAAA,CAAA;AACpE,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,KAAMrF,CAAAA,IAAAA,CAAOkF,CAAAA,CAAAA,UAAWlF,CAAAA,IAAI,CAAGyF,CAAAA,CAAAA,UAAAA,CAAYF,WAAAA,CAAYG,WAAW,CAAA,CAAA;AAClE,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,KAAMC,CAAAA,KAAAA,CAAQT,CAAAA,CAAAA,UAAWS,CAAAA,KAAK,CAAGF,CAAAA,CAAAA,UAAAA,CAAYF,WAAAA,CAAYK,YAAY,CAAA,CAAA;AAErE,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,KAAMC,CAAAA,WAAAA,CAAcC,CAAAA,CAAAA,IAAKC,CAAAA,GAAG,CAAE/F,IAAO2E,CAAAA,CAAAA,CAAAA,OAAAA,CAASF,CAAAA,iBAAAA,CAAkBzE,IAAI,CAAA,CAAA;AACpE,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,KAAMgG,CAAAA,YAAAA,CAAeF,CAAAA,CAAAA,IAAKG,CAAAA,GAAG,CAAEN,KAAQhB,CAAAA,CAAAA,CAAAA,OAAAA,CAASF,CAAAA,iBAAAA,CAAkBkB,KAAK,CAAA,CAAA;AAEvE,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAI,CAACtE,mBAAmB,CAAClL,GAAG,CAAE,CAAA;AR61BjC,CQ51BI4J,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,SAAW,CAAA,CAAA,IAAA,CAAA;AR61Bf,CQ51BIC,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,IAAM6F,CAAAA,CAAAA,WAAAA,CAAAA;AACN5F,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,GAAAA,CAAAA,CAAKA,GAAM2E,CAAAA,CAAAA,CAAAA,OAAAA,CAAAA;AACX1E,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,KAAAA,CAAAA,CAAO8F,YAAeH,CAAAA,CAAAA,CAAAA,WAAAA;AACvB,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AR61BH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CQ51BC,CAAA,IAAA,CAAA,CAAA;AACN,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAI,CAACxE,mBAAmB,CAACtB,SAAS,CAAA,CAAA,CAAG,KAAA,CAAA;AACtC,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACD,CAAA,CAAA,CAAA,CAAA,CAAA;AAEA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AR41BD,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC;AACzE,CQ11BS2E,CAAAA,CAAAA,CAAAA,CAAAA,kBAAoBwB,CAAAA,WAAwB,CAAS,CAAA,CAAA;AAC5D,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,KAAA,CAAMjL,QAAW,CAAEiL,CAAAA,CAAAA,WAAYlL,CAAAA,IAAI,CAA8BC,QAAQ,CAAA;AR21B3E,CQz1BE,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAIkL,aAAAA,CAAAA;AAEJ,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAK,IAAI,CAAC3E,YAAY,CAAClJ,GAAG,CAAE2C,QAAa,CAAA,CAAA,CAAA,CAAA;AACxCkL,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,aAAAA,CAAAA,CAAAA,CAAgB,IAAI,CAAC3E,YAAY,CAACtI,GAAG,CAAE+B,QAAAA,CAAAA,CAAYwI,UAAU,CAAA;ARy1BhE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CQx1BC,CAAA,IAAA,CAAA,CAAA;AACN,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,KAAA,CAAMA,UAAa,CAAA,CAAA,CAAA,IAAI,CAAC9M,MAAM,CAACkH,OAAO,CAAC3L,IAAI,CAAC+B,YAAY,CAACmQ,YAAY,CAAE8B,WAAAA,CAAAA,CAAAA;AAEvEC,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,aAAAA,CAAgBC,CAAAA,CAAAA,qBAAuB3C,CAAAA,UAAAA,CAAAA,CAAAA;ARw1B1C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CQt1BR,IAAI,CAACnC,WAAW,CAACjP,QAAQ,CAAE8T,aAAAA,CAAAA,CAAe,CAAU,MAAA,CAAA,CAAA,CAAA,IAAI,CAAChF,yBAAyB,CAAE,CAAA,CAAA;ARu1BvF,CQv1ByFkF,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,UAAY,CAAA,CAAA,IAAA;AAAK,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACvG,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,KAAM1E,CAAAA,cAAAA,CAAiB,CAAA,CAAA,GAAA,CAAI2E,cAAAA,CAAgBH,aAAe,CAAA,CAAA,IAAI,CAAChF,yBAAyB,CAAA,CAAA;AAExF,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAI,CAACK,YAAY,CAACrL,GAAG,CAAE8E,QAAU,CAAA,CAAA,CAAA;ARw1BpC,CQv1BIwI,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,UAAY0C,CAAAA,CAAAA,aAAAA,CAAAA;AACZxE,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,cAAAA;AACD,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACD,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;ARw1BF,CQt1BE,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,MAAA,CAAO,GAAA,CAAIqD,IAAMmB,CAAAA,aAAAA,CAAAA,CAAgBhB,2BAA2B,CAAA,CAAA,CAAA;AAC7D,CAAA,CAAA,CAAA,CAAA,CAAA;AACD,CAAA;AAEA,CAAA,CAAA,CAAA;ARs1BA,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC;AQp1BtE,CAAA,CAAA,CAAA,CACD,QAAA,CAAS9C,mBAAAA,CACR1L,MAAc,CAAA,CACdoL,iBAA8B,CAC9BC,CAAAA,gBAAyC,CACzCC,CAAAA,OAAe,CAAA,CACfC,OAAe,CAAA,CACfC,SAAkB,CAAA,CAClBC,YAA8B,CAAA,CAAA,CAAA;AR80B/B,CAAC,CAAC,CAAC,CQ50BF,KAAA,CAAM3L,KAAAA,CAAAA,CAAAA,CAAQE,MAAAA,CAAOF,KAAK,CAAA;AAC1B,CAAA,CAAA,CAAA,CAAA,KAAA,CAAMwN,MAAStN,CAAAA,CAAAA,CAAAA,MAAAA,CAAOkH,OAAO,CAACoG,MAAM,CAAA;AR60BrC,CQ30BC,CAAA,CAAA,CAAA,KAAA,CAAMsC,kBAAAA,CAAqBC,CAAAA,CAAAA,4BAAAA,CAA8B7P,MAAQoL,CAAAA,CAAAA,iBAAAA,CAAAA,CAAAA;AACjE,CAAA,CAAA,CAAA,CAAA,GAAI0E,CAAAA,YAAeF,CAAAA,CAAAA,CAAAA,kBAAAA,CAAAA;AAEnB,CAAA,CAAA,CAAA,CAAA,KAAA,CAAQE,YAAe,CAAA,CAAA;AACtB,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAK,CAACtE,SAAY,CAAA,CAAA,CAAA;AACjB,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAK1L,KAAAA,CAAMuM,MAAM,CAACC,UAAU,CAAEwD,YAAAA,CAAAA,CAAc,CAAY,CAAA,IAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACvD,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAKzE,gBAAmB,CAAA,CAAA,CAAA;AACvB,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,KAAA,CAAM0E,kBAAqB1E,CAAAA,CAAAA,CAAAA,gBAAgB,CAAE,CAAA,CAAG,CAAC5G,KAAK,CAAA;AR20B3D,CQ10BK,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,KAAA,CAAMuL,mBAAAA,CAAsB1C,CAAAA,CAAAA,MAAO2C,CAAAA,eAAe,CAAEF,kBAAAA,CAAAA,CAAAA;AACpD,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,KAAMG,CAAAA,iBAAAA,CAAoB,CAAA,CAAA,CAACzE,YAAAA,CAAgBxI,CAAAA,CAAAA,CAAAA,KAAAA,CACzCC,IAAI,CAAEuI,YAAAA,CAAa0E,QAAQ,CAAA,CAAA,CAAA,CAC3BC,KAAK,CAAEjK,CAAAA,IAAQrG,CAAAA,CAAAA,CAAAA,KAAAA,CAAMuM,MAAM,CAACC,UAAU,CAAE0D,mBAAqB7J,CAAAA,CAAAA,IAAAA,CAAAA,CAAAA,CAAAA;AAE/D,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAK+J,iBAAoB,CAAA,CAAA,CAAA;AACxB,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAKpQ,KAAAA,CAAMuM,MAAM,CAACC,UAAU,CAAE0D,mBAAAA,CAAAA,CAAqB,CAAY,CAAA,IAAA,CAAA,CAAA,CAAA,CAAA,CAAA;ARw0BrE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CQv0BpB,MAAA,CAAOlQ,KAAAA,CAAMuQ,WAAW,CAAEL,mBAAAA,CAAAA,CAAAA;AAC3B,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CACK,EAAKD,CAAAA,CAAAA,kBAAqB,CAAA,CAAA,CAAA;ARu0BrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC;AQr0B9F,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,MAAA,CAAOO,6BAAAA,CACNtQ,MACA6P,CAAAA,CAAAA,4BAAAA,CAA8B7P,MAAAA,CAAAA,CAAQ+P,kBAAmB3C,CAAAA,MAAM,CAAA,CAAA,CAC/D9B,OACAC,CAAAA,CAAAA,OAAAA,CAAAA,CAAAA;AAEF,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACD,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACD,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACD,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CACK,EAAKzL,CAAAA,CAAAA,KAAMuM,CAAAA,MAAM,CAACkE,QAAQ,CAAET,YAAiB,CAAA,CAAA,CAAA,CAAA;ARi0BrD,CQh0BI,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,MAAA,CAAOQ,6BAAAA,CAA+BtQ,MAAQ8P,CAAAA,CAAAA,YAAAA,CAAAA,CAAcxE,OAASC,CAAAA,CAAAA,OAAAA,CAAAA,CAAAA;AACtE,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACD,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AAEA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAKzL,KAAMuM,CAAAA,MAAM,CAACmE,OAAO,CAAEV,YAAiB,CAAA,CAAA,CAAA,CAAA;ARg0B9C,CQ/zBG,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,MAAA,CAAOQ,6BAAAA,CAA+BtQ,MAAQ8P,CAAAA,CAAAA,YAAAA,CAAAA,CAAcxE,OAASC,CAAAA,CAAAA,OAAAA,CAAAA,CAAAA;AACtE,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CACK,IAAA,CAAA,EAAA,CAAA,CAAKzL,KAAMuM,CAAAA,MAAM,CAACC,UAAU,CAAEwD,YAAAA,CAAAA,CAAc,CAAa,CAAA,KAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AAC7D,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,KAAMW,CAAAA,UAAAA,CAAaxN,CAAAA,CAAAA,KAAMC,CAAAA,IAAI,CAAE4M,YAAAA,CAAarR,WAAW,CAAA,CACrDuF,CAAAA,CAAAA,MAAM,CAAE,CAAE0M,IAAAA,CAAAA,CAAAA,CAA2BA,IAAKtS,CAAAA,EAAE,CAAE,CAAA,OAAA,CAAe,CAAA,CAAA,CAAA,CAAA,CAAA,CAACuS,mBAAAA,CAAqB3Q,MAAQ0Q,CAAAA,CAAAA,IAAAA,CAAAA,CAAAA,CAAAA;AAE7F,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,GAAIE,CAAAA,UAAa,CAAA,CAAA,CAAA,CAAA,CAAA;AR6zBpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CQ5zBR,GAAA,CAAIC,QAAAA,CAAAA,CAAAA,CAAWJ,UAAAA,CAAW1S,MAAM,CAAA;AAEhC,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAK8S,CAAAA,CAAAA,QAAAA,CAAY,CAAA,CAAA,CAAA,CAAI,CAAA,CAAA,CAAA;AACpB,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,MAAO/Q,CAAAA,KAAAA,CAAMuQ,WAAW,CAAEvQ,KAAMmG,CAAAA,gBAAgB,CAAE6J,YAAyB,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA;AAC5E,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AR4zBH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CQ1zBR,KAAA,CAAQc,UAAAA,CAAAA,CAAAA,CAAaC,QAAAA,CAAAA,CAAAA,CAAW,CAAI,CAAA,CAAA;AR2zBvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CQ1zBX,KAAMC,CAAAA,WAAAA,CAAc3B,CAAAA,CAAAA,IAAAA,CAAK4B,KAAK,CAAE,CAAEH,UAAAA,CAAaC,CAAAA,CAAAA,QAAO,CAAM,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AAC5D,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,KAAA,CAAMG,IAAAA,CAAAA,CAAAA,CAAOC,eAAiBjR,CAAAA,MAAAA,CAAQyQ,CAAAA,UAAU,CAAEK,WAAAA,CAAa,CAAExF,CAAAA,OAASC,CAAAA,CAAAA,OAAAA,CAAAA,CAAAA;AAE1E,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAKyF,CAAAA,CAAAA,IAAAA,CAAQ,CAAA,CAAA,CAAA,CAAA,MAAA,CAAW,CAAA,CAAA,CAAA;AR0zB5B,CQzzBKH,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,QAAWC,CAAAA,CAAAA,CAAAA,WAAAA,CAAAA;AR0zBhB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CQzzBL,CAAA,IAAA,CAAA,CAAA;AR0zBX,CQzzBKF,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,UAAaE,CAAAA,CAAAA,CAAAA,WAAAA,CAAAA;AACd,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACD,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AAEA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,MAAOR,CAAAA,6BAAAA,CAA+BtQ,MAAQyQ,CAAAA,CAAAA,UAAU,CAAEG,UAAAA,CAAY,CAAEtF,CAAAA,OAASC,CAAAA,CAAAA,OAAAA,CAAAA,CAAAA;AAClF,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AAEAuE,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,YAAAA,CAAAA,CAAAA,CAAeA,YAAAA,CAAa1C,MAAM,CAAA;AACnC,CAAA,CAAA,CAAA,CAAA,CAAA;ARwzBD,CQtzBC,CAAA,CAAA,CAAA,MAAA,CAAO,IAAA,CAAA;AACR,CAAA;AAEA,CAAA,CAAA,CAAA;ARszBA,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC,OAAO,CAAC;AQpzBpD,CAAA,CAAA,CAAA,CACD,QAAA,CAASuD,mBAAAA,CAAqB3Q,MAAc,CAAA,CAAE8P,YAAqB,CAAA,CAAA,CAAA;AAClE,CAAA,CAAA,CAAA,CAAA,KAAA,CAAMxC,MAAStN,CAAAA,CAAAA,CAAAA,MAAAA,CAAOkH,OAAO,CAACoG,MAAM,CAAA;AACpC,CAAA,CAAA,CAAA,CAAA,KAAA,CAAMhQ,YAAAA,CAAAA,CAAAA,CAAe0C,MAAOkH,CAAAA,OAAO,CAAC3L,IAAI,CAAC+B,YAAY,CAAA;ARqzBtD,CQnzBC,CAAA,CAAA,CAAA,KAAA,CAAMiS,WAAAA,CAAcjC,CAAAA,CAAAA,MAAOC,CAAAA,aAAa,CAAEuC,YAAAA,CAAAA,CAAAA;AAE1C,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAK,CAACP,WAAc,CAAA,CAAA,CAAA;ARmzBrB,CQlzBE,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,MAAA,CAAO,IAAA,CAAA;AACR,CAAA,CAAA,CAAA,CAAA,CAAA;ARmzBD,CQjzBC,CAAA,CAAA,CAAA,KAAA,CAAMzC,UAAAA,CAAaxP,CAAAA,CAAAA,YAAamQ,CAAAA,YAAY,CAAE8B,WAAAA,CAAAA,CAAAA;AAE9C,CAAA,CAAA,CAAA,CAAA,MAAOrB,CAAAA,MAAAA,CAAOC,MAAM,CAACU,gBAAgB,CAAE/B,UAAAA,CAAAA,CAAaoE,KAAK,CAAA,CAAA,CAAA,CAAI,CAAA,IAAA,CAAA,CAAA;AAC9D,CAAA;AAEA,CAAA,CAAA,CAAA;ARgzBA,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC;AACtD,CQ9yBA,CAAA,CAAA,CAAA,QAAA,CAASZ,6BAAAA,CAA+BtQ,MAAc,CAAA,CAAE8P,YAAqB,CAAExE,CAAAA,OAAe,CAAEC,CAAAA,OAAe,CAAA,CAAA,CAAA;AR+yB/G,CAAC,CAAC,CAAC,CQ9yBF,KAAA,CAAMzL,KAAAA,CAAAA,CAAAA,CAAQE,MAAAA,CAAOF,KAAK,CAAA;AR+yB3B,CQ7yBC,CAAA,CAAA,CAAA,MAAA,CAAOA,KAAAA,CAAMuQ,WAAW,CACvBvQ,KAAMmG,CAAAA,gBAAgB,CACrB6J,YACAmB,CAAAA,CAAAA,eAAAA,CAAiBjR,MAAQ8P,CAAAA,CAAAA,YAAAA,CAAcxE,CAAAA,OAASC,CAAAA,CAAAA,OAAAA,CAAAA,CAAAA,CAAAA,CAAAA;AAGnD,CAAA;AAEA,CAAA,CAAA,CAAA;ARwyBA,CAAC,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC;AAC5E,CQtyBA,CAAA,CAAA,CAAA,QAAA,CAAS0F,eAAAA,CAAiBjR,MAAc,CAAA,CAAE8P,YAAqB,CAAExE,CAAAA,OAAe,CAAEC,CAAAA,OAAe,CAAA,CAAA,CAAA;AAChG,CAAA,CAAA,CAAA,CAAA,KAAA,CAAM+B,MAAStN,CAAAA,CAAAA,CAAAA,MAAAA,CAAOkH,OAAO,CAACoG,MAAM,CAAA;AACpC,CAAA,CAAA,CAAA,CAAA,KAAA,CAAMhQ,YAAAA,CAAAA,CAAAA,CAAe0C,MAAOkH,CAAAA,OAAO,CAAC3L,IAAI,CAAC+B,YAAY,CAAA;ARuyBtD,CQryBC,CAAA,CAAA,CAAA,KAAA,CAAMiS,WAAAA,CAAcjC,CAAAA,CAAAA,MAAOC,CAAAA,aAAa,CAAEuC,YAAAA,CAAAA,CAAAA;ARsyB3C,CQryBC,CAAA,CAAA,CAAA,KAAA,CAAMhD,UAAAA,CAAaxP,CAAAA,CAAAA,YAAamQ,CAAAA,YAAY,CAAE8B,WAAAA,CAAAA,CAAAA;ARsyB/C,CQryBC,CAAA,CAAA,CAAA,KAAA,CAAM4B,IAAAA,CAAO,CAAA,CAAA,GAAA,CAAI9C,IAAMvB,CAAAA,UAAAA,CAAAA,CAAAA;AAEvB,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAK9M,MAAAA,CAAOF,KAAK,CAACuM,MAAM,CAACkE,QAAQ,CAAET,YAAiB,CAAA,CAAA,CAAA,CAAA;ARqyBrD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CQpyBL,MAAA,CAAOxE,OAAAA,CAAAA,CAAAA,CAAU,CAAE6F,IAAK9H,CAAAA,IAAI,CAAA,CAAA,CAAG8H,IAAAA,CAAKnC,KAAI,CAAM,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAI,CAAW,MAAA,CAAA,CAAA,CAAA,CAAA,CAAA,KAAA,CAAA,CAAA;ARqyB/D,CAAC,CAAC,CAAC,CAAC,CQpyBI,CAAA,IAAA,CAAA,CAAA;ARqyBR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CQpyBL,MAAA,CAAOzD,OAAAA,CAAAA,CAAAA,CAAU,CAAE4F,IAAK7H,CAAAA,GAAG,CAAA,CAAA,CAAG6H,IAAAA,CAAKzC,MAAK,CAAM,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAI,CAAW,MAAA,CAAA,CAAA,CAAA,CAAA,CAAA,KAAA,CAAA,CAAA;AAC9D,CAAA,CAAA,CAAA,CAAA,CAAA;AACD,CAAA;AAEA,CAAA,CAAA,CAAA;ARoyBA,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC;AQlyBnE,CAAA,CAAA,CAAA,CACD,QAAA,CAASmB,4BAAAA,CAA8B7P,MAAc,CAAA,CAAErB,OAAoB,CAAA,CAAA,CAAA;AAC1E,CAAA,CAAA,CAAA,CAAA,KAAA,CAAM2O,MAAStN,CAAAA,CAAAA,CAAAA,MAAAA,CAAOkH,OAAO,CAACoG,MAAM,CAAA;AACpC,CAAA,CAAA,CAAA,CAAA,KAAA,CAAM/R,IAAOyE,CAAAA,CAAAA,CAAAA,MAAAA,CAAOkH,OAAO,CAAC3L,IAAI,CAAA;ARmyBjC,CQjyBC,CAAA,CAAA,CAAA,KAAA,CAAMqU,kBAAAA,CAAqBtC,CAAAA,CAAAA,MAAO8D,CAAAA,cAAc,CAAEzS,OAAAA,CAAAA,CAAAA;AAElD,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAKiR,kBAAqB,CAAA,CAAA,CAAA;ARiyB3B,CQhyBE,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,MAAA,CAAOA,kBAAAA,CAAAA;AACR,CAAA,CAAA,CAAA,CAAA,CAAA;ARiyBD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AACzG,CQ/xBC,CAAA,CAAA,CAAA,KAAA,CAAMyB,YAAAA,CAAe9V,CAAAA,CAAAA,IAAKoK,CAAAA,oBAAoB,CAAEhH,OAAAA,CAAAA,CAAAA;ARgyBjD,CQ/xBC,CAAA,CAAA,CAAA,KAAA,CAAM4Q,WAAAA,CAAcjC,CAAAA,CAAAA,MAAOgE,CAAAA,sBAAsB,CAAED,YAAAA,CAAAA,CAAAA;ARgyBpD,CAAC,CAAC,CAAC,CQ9xBF,MAAA,CAAO/D,MAAAA,CAAO8D,cAAc,CAAE7B,WAAAA,CAAAA,CAAAA;AAC/B,CAAA;AAEA,CAAA,CAAA,CAAA;AR8xBA,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,UAAU,CAAC,QAAQ,CAAC,GAAG,CAAC,OAAO,CAAC;AACvD,CAAC,CAAC;AACF,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,CAAC,QAAQ,CAAC;AAC5D,CAAC,CAAC,CAAC,CQ5xBH,QAASE,CAAAA,qBAAAA,CAAuB8B,OAAoB,CAAA,CAAA,CAAA;AACnD,CAAA,CAAA,CAAA,CAAA,GAAIzE,CAAAA,UAA0ByE,CAAAA,CAAAA,CAAAA,OAAAA,CAAAA;AR6xB/B,CAAC,CAAC,CAAC,CQ3xBF,EAAG,CAAA,CAAA;AACFzE,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,UAAAA,CAAAA,CAAAA,CAAaA,UAAAA,CAAW0E,aAAa,CAAA;AAErC,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,KAAMC,CAAAA,QAAAA,CAAWvD,CAAAA,CAAAA,MAAOC,CAAAA,MAAM,CAACU,gBAAgB,CAAE/B,UAAAA,CAAAA,CAAa4E,SAAS,CAAA;AR2xBzE,CQzxBE,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAKD,QAAAA,CAAY,CAAA,CAAA,CAAA,CAAA,IAAA,CAAUA,CAAAA,CAAAA,CAAAA,CAAAA,QAAAA,CAAAA,CAAAA,CAAAA,CAAY,CAAA,MAAA,CAAW,CAAA,CAAA,CAAA;AACjD,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,KAAA,CAAA;AACD,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AR0xBF,CAAC,CAAC,CAAC,CAAC,CQzxBO3E,KAAAA,CAAAA,CAAAA,UAAAA,CAAW6E,OAAO,CAAA,CAAA,CAAA,CAAI,CAAA,IAAA,CAAS,CAAA;AR0xB1C,CQxxBC,CAAA,CAAA,CAAA,MAAA,CAAO7E,UAAAA,CAAAA;AACR,CAAA;ARyxBA;ASvxCA,CAAA,CAAA,CAAA;ATyxCA,CAAC,CAAC,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC;AACvE,CAAC,CAAC;AACF,CAAC,CAAC,CAAC,CAAC,QAAQ;AACZ,CAAC,CAAC,CAAC,CSvxCY,KAAM8E,CAAAA,oBAA6B3S,CAAAA,OAAAA,CAAAA,MAAAA,CAAAA,CAAAA;AACjD,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;ATwxCD,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE,CAAC,OAAO,CAAC,EAAE,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC;AACzE,CStxCS4S,CAAAA,CAAAA,CAAAA,CAAAA,gBAAAA,CAAmB,CAAA,CAAA,KAAM,CAAA;AAEjC,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;ATsxCD,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC;ASpxCd,CAAA,CAAA,CAAA,CAAA,CACD,WAAQlH,CAA0B,CAAA,CAAA,GAAA,CAAA,CAAMC,eAAAA,CAAAA,CAAgB,CAAA,CAAA,CAAM,CAAA;AAE9D,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AToxCD,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU;ASlxCb,CACD,CAAA,CAAA,CAAA,CAAA,MAAA,CAAA,GAAA,CAAkBxL,UAAa,CAAA,CAAA,CAAA,CAAA;ATmxChC,CSlxCE,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,MAAA,CAAO,CAAA,oBAAA,CAAA,CAAA;AACR,CAAA,CAAA,CAAA,CAAA,CAAA;AAEA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;ATkxCD,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU;AShxCb,CAAA,CAAA,CAAA,CAAA,CACD,IAAoB,CAAA,CAAA,CAAA,CAAA;ATixCrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CShxCL,KAAA,CAAMY,MAAAA,CAAAA,CAAAA,CAAS,IAAI,CAACA,MAAM,CAAA;AAE1B,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAI,CAACtE,QAAQ,CAAkCsE,MAAAA,CAAQ,CAAA,CAAA,MAAA,CAAA,UAAA,CAAqB,CAAA,CAAA,CAAElE,GAAAA,CAAAA,CAAKU,IAAMsV,CAAAA,CAAAA,UAAAA,CAAAA,CAAAA,CAAAA,CAAAA;AACxF,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAKA,UAAa,CAAA,CAAA,CAAA;ATgxCrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CS/wCX,IAAI,CAACC,aAAa,CAAE,CAAA,YAAA,CAAA,CAAA,CAAA;ATgxCxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CS/wCX,IAAI,CAACF,gBAAgB,CAAA,CAAA,CAAG,KAAA,CAAA;ATgxC5B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CS/wCF,CAAA,IAAA,CAAA,CAAA;ATgxCV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CS/wCX,IAAI,CAACG,kBAAkB,CAAE,CAAA,YAAA,CAAA,CAAA,CAAA;AAC1B,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACD,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;ATgxCF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CS9wCL,EAAKC,CAAAA,CAAAA,GAAAA,CAAIC,SAAS,CAAG,CAAA,CAAA;AT+wCvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CS9wCR,IAAI,CAACH,aAAa,CAAE,CAAA,gBAAA,CAAA,CAAA,CAAA;AACrB,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AAEA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAK/R,MAAOuH,CAAAA,OAAO,CAAC5F,GAAG,CAAE,CAAmB,YAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AAC3C,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,KAAA,CAAMwQ,YAA6BnS,CAAAA,CAAAA,CAAAA,MAAAA,CAAOuH,OAAO,CAAChF,GAAG,CAAE,CAAA,YAAA,CAAA,CAAA,CAAA;AACvD,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,KAAA,CAAM5D,OAAUwT,CAAAA,CAAAA,CAAAA,YAAAA,CAAaC,UAAU,CAACzT,OAAO,CAAA;AAE/C,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAI,CAACgM,WAAW,CAACjP,QAAQ,CAAEiD,OAAAA,CAAS,CAAA,CAAA,SAAA,CAAa,CAAA,CAAA,CAAE7C,GAAKC,CAAAA,CAAAA,IAAAA,CAAAA,CAAAA,CAAU,IAAI,CAACsW,qBAAqB,CAAEtW,IAAAA,CAAAA,CAAAA,CAAAA;AAC9F,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAI,CAAC4O,WAAW,CAACjP,QAAQ,CAAEwS,MAAOzS,CAAAA,QAAQ,CAAA,CAAE,CAAA,QAAA,CAAA,CAAA,CAAY,CAAEK,GAAKC,CAAAA,CAAAA,IAAAA,CAAAA,CAAAA,CAAU,IAAI,CAACuW,oBAAoB,CAAEvW,IAAAA,CAAAA,CAAAA,CAAAA;AACpG,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAI,CAAC4O,WAAW,CAACjP,QAAQ,CAAEwS,MAAOzS,CAAAA,QAAQ,CAAA,CAAE,CAAA,IAAA,CAAA,CAAA,CAAQ,CAAEK,GAAKC,CAAAA,CAAAA,IAAAA,CAAAA,CAAAA,CAAU,IAAI,CAACuW,oBAAoB,CAAEvW,IAAAA,CAAAA,CAAAA,CAAAA;AAChG,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAI,CAAC4O,WAAW,CAACjP,QAAQ,CAAEwS,MAAAA,CAAOzS,QAAQ,CAAA,CAAE,CAAA,OAAA,CAAW,CAAA,CAAA,CAAA,CAAA,CAAA,CAAM,IAAI,CAAC8W,mBAAmB,CAAA,CAAI,CAAA,CAAA,CAAA;AT6wC5F,CS7wC8FC,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,UAAY,CAAA,CAAA,IAAA;AAAK,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AT+wC/G,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CS7wCR,EAAK,CAAA,CAAA,IAAI,CAACC,SAAS,CAAG,CAAA,CAAA;AT8wCzB,CS7wCI9T,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,OAAQ+T,CAAAA,YAAY,CAAE,CAAA,SAAA,CAAa,CAAA,CAAA,CAAA,IAAA,CAAA,CAAA,CAAA;AACpC,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AAEA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAI,CAACC,EAAE,CAAkC,CAAoB,MAAA,CAAA,SAAA,CAAA,CAAA,CAAA,CAAE7W,GAAAA,CAAKU,CAAAA,IAAMiW,CAAAA,CAAAA,SAAAA,CAAAA,CAAAA,CAAAA,CAAAA;AACzE9T,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,OAAAA,CAAQ+T,YAAY,CAAE,CAAaD,SAAAA,CAAAA,CAAAA,CAAAA,SAAAA,CAAAA,CAAAA,CAAY,CAAS,IAAA,CAAA,CAAA,CAAA,CAAA,CAAA,KAAA,CAAA,CAAA,CAAA;AACzD,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACD,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACD,CAAA,CAAA,CAAA,CAAA,CAAA;AAEA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AT4wCD,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU;AS1wCb,CAAA,CAAA,CAAA,CAAA,CACD,OAAgC,CAAA,CAAA,CAAA,CAAA;AT2wCjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CS1wCL,IAAI,CAAC9H,WAAW,CAACI,aAAa,CAAA,CAAA,CAAA;AAE9B,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,MAAO,CAAA,KAAK,CAACE,OAAAA,CAAAA,CAAAA,CAAAA;AACd,CAAA,CAAA,CAAA,CAAA,CAAA;AAEA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;ATywCD,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC;AAClC,CSvwCSoH,CAAAA,CAAAA,CAAAA,CAAAA,qBAAuB3V,CAAAA,QAAmB,CAAS,CAAA,CAAA;AAC1D,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAK,CAAA,CAAA,CAAC,IAAI,CAAC+V,SAAS,CAAG,CAAA,CAAA;AACtB,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,MAAA,CAAA;AACD,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AAEA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,KAAA,CAAM3S,KAAQ,CAAA,CAAA,CAAA,IAAI,CAACE,MAAM,CAACF,KAAK,CAAA;AAC/B,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,KAAA,CAAMH,SAAYG,CAAAA,CAAAA,CAAAA,KAAAA,CAAMrE,QAAQ,CAACkE,SAAS,CAAA;AAC1C,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,KAAA,CAAMpE,IAAAA,CAAAA,CAAAA,CAAO,IAAI,CAACyE,MAAM,CAACkH,OAAO,CAAC3L,IAAI,CAAA;AAErC,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,KAAMqX,CAAAA,MAAS3P,CAAAA,CAAAA,CAAAA,KAAAA,CAAMC,IAAI,CAAEvD,SAAAA,CAAUkT,iBAAiB,CAAA,CAAA,CAAA,CAAA;AACtD,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,KAAMpH,CAAAA,YAAAA,CAAe3L,CAAAA,CAAAA,KAAMuQ,CAAAA,WAAW,CACrCvQ,KAAM6F,CAAAA,oBAAoB,CAAEiN,MAAM,CAAE,CAAA,CAAG,CACvC9S,CAAAA,CAAAA,KAAAA,CAAMgT,mBAAmB,CAAEF,MAAM,CAAEA,MAAO7U,CAAAA,MAAM,CAAG,CAAA,CAAA,CAAG,CAAA,CAAA,CAAA,CAAA;AAGvD+B,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,KAAAA,CAAMG,MAAM,CAAEJ,CAAAA,MAAUA,CAAAA,CAAAA,CAAAA,MAAAA,CAAOM,YAAY,CAAEsL,YAAAA,CAAAA,CAAAA,CAAAA;ATkwC/C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CShwCL,IAAI,CAACoG,gBAAgB,CAAA,CAAA,CAAG,IAAA,CAAA;AAExBtW,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,IAAAA,CAAKwX,KAAK,CAAA,CAAA,CAAA;AACVxX,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,IAAAA,CAAKyX,WAAW,CAAE7X,iBAAqB2B,CAAAA,CAAAA,UAAU,CAAEJ,QAAAA,CAAAA,CAAAA;AACpD,CAAA,CAAA,CAAA,CAAA,CAAA;AAEA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AT+vCD,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC;AAC5C,CS7vCS4V,CAAAA,CAAAA,CAAAA,CAAAA,oBAAsB5V,CAAAA,QAAmB,CAAS,CAAA,CAAA;AT8vC3D,CS7vCE,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAK,CAAC,IAAI,CAAC+V,SAAS,CAAA,CAAA,CAAA,CAAI,CAAC,IAAI,CAACZ,gBAAgB,CAAG,CAAA,CAAA;AAChD,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,MAAA,CAAA;AACD,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AAEA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,KAAA,CAAMvG,OAAAA,CAAU5O,CAAAA,CAAAA,QAAS4O,CAAAA,OAAO,CAAA,CAAA,CAAA,CAAK,IAAI,CAACtL,MAAM,CAACiT,MAAM,CAACC,wBAAwB,CAAA,CAAA,CAAA,CAAI,CAAQ,GAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAM,CAAA,CAAA,CAAC,GAAE,CAAA,CAAA;AT6vCvG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CS5vCL,KAAA,CAAM3H,OAAAA,CAAAA,CAAAA,CAAU7O,QAAAA,CAAS6O,OAAO,CAAA;AAChC,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,KAAA,CAAM9O,MAAShB,CAAAA,CAAAA,CAAAA,QAAAA,CAAS0X,gBAAgB,CAAE7H,OAASC,CAAAA,CAAAA,OAAAA,CAAAA,CAAAA;AACnD,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,KAAA,CAAMhQ,IAAAA,CAAAA,CAAAA,CAAO,IAAI,CAACyE,MAAM,CAACkH,OAAO,CAAC3L,IAAI,CAAA;AAErC,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAK,CAACkB,MAAU,CAAA,CAAA,CAAA,CAAA,CAACA,MAAO2W,CAAAA,OAAO,CAAE,CAA2B,CAAA,EAAA,CAAA,gBAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AAC3D,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,MAAA,CAAA;AACD,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AAEA7X,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,IAAAA,CAAKyX,WAAW,CAAE7X,iBAAqB2B,CAAAA,CAAAA,UAAU,CAAE,CAAA;AAClD,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAGJ,QAAQ,CAAA;AACXb,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,IAAAA,CAAAA,CAAMa,QAAAA,CAASb,IAAI,CAAA;AACnBS,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,YAAAA,CAAAA,CAAcI,QAAAA,CAASJ,YAAY,CAAA;AACnCG,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,MAAAA,CAAAA;AACA6O,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,OAAAA,CAAAA;AACAC,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,CAAAA,OAAAA,CAAAA;AT2vCH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CS1vCRvP,cAAgB,CAAA,CAAA,CAAA,CAAA,CAAA,CAAMU,QAAAA,CAASV,cAAc,CAAA,CAAA,CAAA;AT2vChD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CS1vCRa,eAAiB,CAAA,CAAA,CAAA,CAAA,CAAA,CAAMH,QAAAA,CAASG,eAAe,CAAA,CAAA;AAChD,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACD,CAAA,CAAA,CAAA,CAAA,CAAA;AAEA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AT0vCD,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC;ASxvC9B,CAAA,CAAA,CAAA,CAAA,CACD,mBAAoC,CAAA,CAAA,CAAA,CAAA;ATyvCrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CSxvCL,IAAI,CAACgV,gBAAgB,CAAA,CAAA,CAAG,KAAA,CAAA;AACzB,CAAA,CAAA,CAAA,CAAA,CAAA;AACD,CAAA;ATyvCA;AUr1CA,CAAA,CAAA,CAAA,IAAA,CAAA,GAAA,CAAA,IAAA,CAAA,MAAA,CAAA,QAAA,CAAA;AACA,CAAA,CAAA;AACA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,GAAA,CAAA,SAAA,CAAA,SAAA,CAAA;AACA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,OAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,QAAA,CAAA,GAAA,CAAA,GAAA,CAAA,KAAA,CAAA,CAAA,OAAA,CAAA,GAAA,CAAA,SAAA,CAAA,SAAA,CAAA;AACA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,SAAA,CAAA,GAAA,CAAA,QAAA,CAAA,KAAA,CAAA,gBAAA;AACA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,QAAA,CAAA,EAAA,CAAA,EAAA,CAAA,IAAA,CAAA,ggBAAA,CAAA,EAAA,CAAA,IAAA,CAAA,IAAA,CAAA,GAAA,CAAA,IAAA,CAAA,KAAA;AACA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,eAAA,CAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,MAAA,CAAA,GAAA,CAAA,OAAA,CAAA,EAAA,CAAA,IAAA,CAAA,YAAA,CAAA;AACA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,QAAA;AACA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,QAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,OAAA,CAAA,GAAA,CAAA,IAAA,CAAA,MAAA,CAAA,MAAA,CAAA;AACA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,OAAA,CAAA,GAAA,CAAA,IAAA,CAAA,MAAA,CAAA,MAAA,CAAA;AACA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,OAAA,CAAA,GAAA,CAAA,MAAA,CAAA,IAAA,CAAA;AACA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,OAAA,CAAA,OAAA,CAAA,EAAA,CAAA,GAAA,CAAA,SAAA,CAAA,QAAA,CAAA,CAAA;AACA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,QAAA,CAAA,GAAA,CAAA,KAAA,CAAA,IAAA,CAAA,YAAA,CAAA;AACA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,cAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,MAAA,CAAA,EAAA,CAAA,QAAA,CAAA,EAAA,CAAA,OAAA,CAAA,OAAA,CAAA;AACA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,cAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,OAAA,CAAA,OAAA,CAAA,EAAA,CAAA,GAAA,CAAA,SAAA,CAAA,QAAA,CAAA,CAAA;AACA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,mBAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,OAAA,CAAA,OAAA,CAAA,EAAA,CAAA,GAAA,CAAA,SAAA,CAAA,QAAA,CAAA,CAAA;AACA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,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","file":"index.js.map","sourcesContent":["import { Plugin } from '@ckeditor/ckeditor5-core/dist/index.js';\nimport { EventInfo, getRangeFromMouseEvent, uid, toUnit, delay, DomEmitterMixin, global, Rect, ResizeObserver, env, createElement } from '@ckeditor/ckeditor5-utils/dist/index.js';\nimport { DomEventObserver, DataTransfer, Range, MouseObserver, LiveRange } from '@ckeditor/ckeditor5-engine/dist/index.js';\nimport { mapValues, throttle } from 'lodash-es';\nimport { Widget, isWidget } from '@ckeditor/ckeditor5-widget/dist/index.js';\nimport { View } from '@ckeditor/ckeditor5-ui/dist/index.js';\n\n/**\n * Clipboard events observer.\n *\n * Fires the following events:\n *\n * * {@link module:engine/view/document~Document#event:clipboardInput},\n * * {@link module:engine/view/document~Document#event:paste},\n * * {@link module:engine/view/document~Document#event:copy},\n * * {@link module:engine/view/document~Document#event:cut},\n * * {@link module:engine/view/document~Document#event:drop},\n * * {@link module:engine/view/document~Document#event:dragover},\n * * {@link module:engine/view/document~Document#event:dragging},\n * * {@link module:engine/view/document~Document#event:dragstart},\n * * {@link module:engine/view/document~Document#event:dragend},\n * * {@link module:engine/view/document~Document#event:dragenter},\n * * {@link module:engine/view/document~Document#event:dragleave}.\n *\n * **Note**: This observer is not available by default (ckeditor5-engine does not add it on its own).\n * To make it available, it needs to be added to {@link module:engine/view/document~Document} by using\n * the {@link module:engine/view/view~View#addObserver `View#addObserver()`} method. Alternatively, you can load the\n * {@link module:clipboard/clipboard~Clipboard} plugin which adds this observer automatically (because it uses it).\n */ class ClipboardObserver extends DomEventObserver {\n    domEventType = [\n        'paste',\n        'copy',\n        'cut',\n        'drop',\n        'dragover',\n        'dragstart',\n        'dragend',\n        'dragenter',\n        'dragleave'\n    ];\n    constructor(view){\n        super(view);\n        const viewDocument = this.document;\n        this.listenTo(viewDocument, 'paste', handleInput('clipboardInput'), {\n            priority: 'low'\n        });\n        this.listenTo(viewDocument, 'drop', handleInput('clipboardInput'), {\n            priority: 'low'\n        });\n        this.listenTo(viewDocument, 'dragover', handleInput('dragging'), {\n            priority: 'low'\n        });\n        function handleInput(type) {\n            return (evt, data)=>{\n                data.preventDefault();\n                const targetRanges = data.dropRange ? [\n                    data.dropRange\n                ] : null;\n                const eventInfo = new EventInfo(viewDocument, type);\n                viewDocument.fire(eventInfo, {\n                    dataTransfer: data.dataTransfer,\n                    method: evt.name,\n                    targetRanges,\n                    target: data.target,\n                    domEvent: data.domEvent\n                });\n                // If CKEditor handled the input, do not bubble the original event any further.\n                // This helps external integrations recognize that fact and act accordingly.\n                // https://github.com/ckeditor/ckeditor5-upload/issues/92\n                if (eventInfo.stop.called) {\n                    data.stopPropagation();\n                }\n            };\n        }\n    }\n    onDomEvent(domEvent) {\n        const nativeDataTransfer = 'clipboardData' in domEvent ? domEvent.clipboardData : domEvent.dataTransfer;\n        const cacheFiles = domEvent.type == 'drop' || domEvent.type == 'paste';\n        const evtData = {\n            dataTransfer: new DataTransfer(nativeDataTransfer, {\n                cacheFiles\n            })\n        };\n        if (domEvent.type == 'drop' || domEvent.type == 'dragover') {\n            const domRange = getRangeFromMouseEvent(domEvent);\n            evtData.dropRange = domRange && this.view.domConverter.domRangeToView(domRange);\n        }\n        this.fire(domEvent.type, domEvent, evtData);\n    }\n}\n\n/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */ /**\n * @module clipboard/utils/plaintexttohtml\n */ /**\n * Converts plain text to its HTML-ized version.\n *\n * @param text The plain text to convert.\n * @returns HTML generated from the plain text.\n */ function plainTextToHtml(text) {\n    text = text// Encode &.\n    .replace(/&/g, '&amp;')// Encode <>.\n    .replace(/</g, '&lt;').replace(/>/g, '&gt;')// Creates a paragraph for each double line break.\n    .replace(/\\r?\\n\\r?\\n/g, '</p><p>')// Creates a line break for each single line break.\n    .replace(/\\r?\\n/g, '<br>')// Replace tabs with four spaces.\n    .replace(/\\t/g, '&nbsp;&nbsp;&nbsp;&nbsp;')// Preserve trailing spaces (only the first and last one – the rest is handled below).\n    .replace(/^\\s/, '&nbsp;').replace(/\\s$/, '&nbsp;')// Preserve other subsequent spaces now.\n    .replace(/\\s\\s/g, ' &nbsp;');\n    if (text.includes('</p><p>') || text.includes('<br>')) {\n        // If we created paragraphs above, add the trailing ones.\n        text = `<p>${text}</p>`;\n    }\n    // TODO:\n    // * What about '\\nfoo' vs ' foo'?\n    return text;\n}\n\n/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */ /**\n * @module clipboard/utils/normalizeclipboarddata\n */ /**\n * Removes some popular browser quirks out of the clipboard data (HTML).\n * Removes all HTML comments. These are considered an internal thing and it makes little sense if they leak into the editor data.\n *\n * @param data The HTML data to normalize.\n * @returns Normalized HTML.\n */ function normalizeClipboardData(data) {\n    return data.replace(/<span(?: class=\"Apple-converted-space\"|)>(\\s+)<\\/span>/g, (fullMatch, spaces)=>{\n        // Handle the most popular and problematic case when even a single space becomes an nbsp;.\n        // Decode those to normal spaces. Read more in https://github.com/ckeditor/ckeditor5-clipboard/issues/2.\n        if (spaces.length == 1) {\n            return ' ';\n        }\n        return spaces;\n    })// Remove all HTML comments.\n    .replace(/<!--[\\s\\S]*?-->/g, '');\n}\n\n/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */ /**\n * @module clipboard/utils/viewtoplaintext\n */ // Elements which should not have empty-line padding.\n// Most `view.ContainerElement` want to be separate by new-line, but some are creating one structure\n// together (like `<li>`) so it is better to separate them by only one \"\\n\".\nconst smallPaddingElements = [\n    'figcaption',\n    'li'\n];\nconst listElements = [\n    'ol',\n    'ul'\n];\n/**\n * Converts {@link module:engine/view/item~Item view item} and all of its children to plain text.\n *\n * @param viewItem View item to convert.\n * @returns Plain text representation of `viewItem`.\n */ function viewToPlainText(viewItem) {\n    if (viewItem.is('$text') || viewItem.is('$textProxy')) {\n        return viewItem.data;\n    }\n    if (viewItem.is('element', 'img') && viewItem.hasAttribute('alt')) {\n        return viewItem.getAttribute('alt');\n    }\n    if (viewItem.is('element', 'br')) {\n        return '\\n'; // Convert soft breaks to single line break (#8045).\n    }\n    /**\n\t * Item is a document fragment, attribute element or container element. It doesn't\n\t * have it's own text value, so we need to convert its children elements.\n\t */ let text = '';\n    let prev = null;\n    for (const child of viewItem.getChildren()){\n        text += newLinePadding(child, prev) + viewToPlainText(child);\n        prev = child;\n    }\n    return text;\n}\n/**\n * Returns new line padding to prefix the given elements with.\n */ function newLinePadding(element, previous) {\n    if (!previous) {\n        // Don't add padding to first elements in a level.\n        return '';\n    }\n    if (element.is('element', 'li') && !element.isEmpty && element.getChild(0).is('containerElement')) {\n        // Separate document list items with empty lines.\n        return '\\n\\n';\n    }\n    if (listElements.includes(element.name) && listElements.includes(previous.name)) {\n        /**\n\t\t * Because `<ul>` and `<ol>` are AttributeElements, two consecutive lists will not have any padding between\n\t\t * them (see the `if` statement below). To fix this, we need to make an exception for this case.\n\t\t */ return '\\n\\n';\n    }\n    if (!element.is('containerElement') && !previous.is('containerElement')) {\n        // Don't add padding between non-container elements.\n        return '';\n    }\n    if (smallPaddingElements.includes(element.name) || smallPaddingElements.includes(previous.name)) {\n        // Add small padding between selected container elements.\n        return '\\n';\n    }\n    // Do not add padding around the elements that won't be rendered.\n    if (element.is('element') && element.getCustomProperty('dataPipeline:transparentRendering') || previous.is('element') && previous.getCustomProperty('dataPipeline:transparentRendering')) {\n        return '';\n    }\n    // Add empty lines between container elements.\n    return '\\n\\n';\n}\n\n/**\n * Part of the clipboard logic. Responsible for collecting markers from selected fragments\n * and restoring them with proper positions in pasted elements.\n *\n * @internal\n */ class ClipboardMarkersUtils extends Plugin {\n    /**\n\t * Map of marker names that can be copied.\n\t *\n\t * @internal\n\t */ _markersToCopy = new Map();\n    /**\n\t * @inheritDoc\n\t */ static get pluginName() {\n        return 'ClipboardMarkersUtils';\n    }\n    /**\n\t * Registers marker name as copyable in clipboard pipeline.\n\t *\n\t * @param markerName Name of marker that can be copied.\n\t * @param config Configuration that describes what can be performed on specified marker.\n\t * @internal\n\t */ _registerMarkerToCopy(markerName, config) {\n        this._markersToCopy.set(markerName, config);\n    }\n    /**\n\t * Performs copy markers on provided selection and paste it to fragment returned from `getCopiedFragment`.\n\t *\n\t * \t1. Picks all markers in provided selection.\n\t * \t2. Inserts fake markers to document.\n\t * \t3. Gets copied selection fragment from document.\n\t * \t4. Removes fake elements from fragment and document.\n\t * \t5. Inserts markers in the place of removed fake markers.\n\t *\n\t * Due to selection modification, when inserting items, `getCopiedFragment` must *always* operate on `writer.model.document.selection'.\n\t * Do not use any other custom selection object within callback, as this will lead to out-of-bounds exceptions in rare scenarios.\n\t *\n\t * @param action Type of clipboard action.\n\t * @param writer An instance of the model writer.\n\t * @param selection Selection to be checked.\n\t * @param getCopiedFragment\tCallback that performs copy of selection and returns it as fragment.\n\t * @internal\n\t */ _copySelectedFragmentWithMarkers(action, selection, getCopiedFragment = (writer)=>writer.model.getSelectedContent(writer.model.document.selection)) {\n        return this.editor.model.change((writer)=>{\n            const oldSelection = writer.model.document.selection;\n            // In some scenarios, such like in drag & drop, passed `selection` parameter is not actually\n            // the same `selection` as the `writer.model.document.selection` which means that `_insertFakeMarkersToSelection`\n            // is not affecting passed `selection` `start` and `end` positions but rather modifies `writer.model.document.selection`.\n            //\n            // It is critical due to fact that when we have selection that starts [ 0, 0 ] and ends at [ 1, 0 ]\n            // and after inserting fake marker it will point to such marker instead of new widget position at start: [ 1, 0 ] end: [2, 0 ].\n            // `writer.insert` modifies only original `writer.model.document.selection`.\n            writer.setSelection(selection);\n            const sourceSelectionInsertedMarkers = this._insertFakeMarkersIntoSelection(writer, writer.model.document.selection, action);\n            const fragment = getCopiedFragment(writer);\n            const fakeMarkersRangesInsideRange = this._removeFakeMarkersInsideElement(writer, fragment);\n            // <fake-marker> [Foo] Bar</fake-marker>\n            //      ^                    ^\n            // In `_insertFakeMarkersIntoSelection` call we inserted fake marker just before first element.\n            // The problem is that the first element can be start position of selection so insertion fake-marker\n            // before such element shifts selection (so selection that was at [0, 0] now is at [0, 1]).\n            // It means that inserted fake-marker is no longer present inside such selection and is orphaned.\n            // This function checks special case of such problem. Markers that are orphaned at the start position\n            // and end position in the same time. Basically it means that they overlaps whole element.\n            for (const [markerName, elements] of Object.entries(sourceSelectionInsertedMarkers)){\n                fakeMarkersRangesInsideRange[markerName] ||= writer.createRangeIn(fragment);\n                for (const element of elements){\n                    writer.remove(element);\n                }\n            }\n            fragment.markers.clear();\n            for (const [markerName, range] of Object.entries(fakeMarkersRangesInsideRange)){\n                fragment.markers.set(markerName, range);\n            }\n            // Revert back selection to previous one.\n            writer.setSelection(oldSelection);\n            return fragment;\n        });\n    }\n    /**\n\t * Performs paste of markers on already pasted element.\n\t *\n\t * \t1. Inserts fake markers that are present in fragment element (such fragment will be processed in `getPastedDocumentElement`).\n\t * \t2. Calls `getPastedDocumentElement` and gets element that is inserted into root model.\n\t * \t3. Removes all fake markers present in transformed element.\n\t * \t4. Inserts new markers with removed fake markers ranges into pasted fragment.\n\t *\n\t * There are multiple edge cases that have to be considered before calling this function:\n\t *\n\t * \t* `markers` are inserted into the same element that must be later transformed inside `getPastedDocumentElement`.\n\t * \t* Fake marker elements inside `getPastedDocumentElement` can be cloned, but their ranges cannot overlap.\n\t * \t* If `duplicateOnPaste` is `true` in marker config then associated marker ID is regenerated before pasting.\n\t *\n\t * @param action Type of clipboard action.\n\t * @param markers Object that maps marker name to corresponding range.\n\t * @param getPastedDocumentElement Getter used to get target markers element.\n\t * @internal\n\t */ _pasteMarkersIntoTransformedElement(markers, getPastedDocumentElement) {\n        const pasteMarkers = this._getPasteMarkersFromRangeMap(markers);\n        return this.editor.model.change((writer)=>{\n            // Inserts fake markers into source fragment / element that is later transformed inside `getPastedDocumentElement`.\n            const sourceFragmentFakeMarkers = this._insertFakeMarkersElements(writer, pasteMarkers);\n            // Modifies document fragment (for example, cloning table cells) and then inserts it into the document.\n            const transformedElement = getPastedDocumentElement(writer);\n            // Removes markers in pasted and transformed fragment in root document.\n            const removedFakeMarkers = this._removeFakeMarkersInsideElement(writer, transformedElement);\n            // Cleans up fake markers inserted into source fragment (that one before transformation which is not pasted).\n            for (const element of Object.values(sourceFragmentFakeMarkers).flat()){\n                writer.remove(element);\n            }\n            // Inserts to root document fake markers.\n            for (const [markerName, range] of Object.entries(removedFakeMarkers)){\n                if (!writer.model.markers.has(markerName)) {\n                    writer.addMarker(markerName, {\n                        usingOperation: true,\n                        affectsData: true,\n                        range\n                    });\n                }\n            }\n            return transformedElement;\n        });\n    }\n    /**\n\t * Pastes document fragment with markers to document.\n\t * If `duplicateOnPaste` is `true` in marker config then associated markers IDs\n\t * are regenerated before pasting to avoid markers duplications in content.\n\t *\n\t * @param fragment Document fragment that should contain already processed by pipeline markers.\n\t * @internal\n\t */ _pasteFragmentWithMarkers(fragment) {\n        const pasteMarkers = this._getPasteMarkersFromRangeMap(fragment.markers);\n        fragment.markers.clear();\n        for (const copyableMarker of pasteMarkers){\n            fragment.markers.set(copyableMarker.name, copyableMarker.range);\n        }\n        return this.editor.model.insertContent(fragment);\n    }\n    /**\n\t * In some situations we have to perform copy on selected fragment with certain markers. This function allows to temporarily bypass\n\t * restrictions on markers that we want to copy.\n\t *\n\t * This function executes `executor()` callback. For the duration of the callback, if the clipboard pipeline is used to copy\n\t * content, markers with the specified name will be copied to the clipboard as well.\n\t *\n\t * @param markerName Which markers should be copied.\n\t * @param executor Callback executed.\n\t * @param config Optional configuration flags used to copy (such like partial copy flag).\n\t * @internal\n\t */ _forceMarkersCopy(markerName, executor, config = {\n        allowedActions: 'all',\n        copyPartiallySelected: true,\n        duplicateOnPaste: true\n    }) {\n        const before = this._markersToCopy.get(markerName);\n        this._markersToCopy.set(markerName, config);\n        executor();\n        if (before) {\n            this._markersToCopy.set(markerName, before);\n        } else {\n            this._markersToCopy.delete(markerName);\n        }\n    }\n    /**\n\t * Checks if marker can be copied.\n\t *\n\t * @param markerName Name of checked marker.\n\t * @param action Type of clipboard action. If null then checks only if marker is registered as copyable.\n\t * @internal\n\t */ _isMarkerCopyable(markerName, action) {\n        const config = this._getMarkerClipboardConfig(markerName);\n        if (!config) {\n            return false;\n        }\n        // If there is no action provided then only presence of marker is checked.\n        if (!action) {\n            return true;\n        }\n        const { allowedActions } = config;\n        return allowedActions === 'all' || allowedActions.includes(action);\n    }\n    /**\n\t * Checks if marker has any clipboard copy behavior configuration.\n\t *\n\t * @param markerName Name of checked marker.\n\t */ _hasMarkerConfiguration(markerName) {\n        return !!this._getMarkerClipboardConfig(markerName);\n    }\n    /**\n\t * Returns marker's configuration flags passed during registration.\n\t *\n\t * @param markerName Name of marker that should be returned.\n\t * @internal\n\t */ _getMarkerClipboardConfig(markerName) {\n        const [markerNamePrefix] = markerName.split(':');\n        return this._markersToCopy.get(markerNamePrefix) || null;\n    }\n    /**\n\t * First step of copying markers. It looks for markers intersecting with given selection and inserts `$marker` elements\n\t * at positions where document markers start or end. This way `$marker` elements can be easily copied together with\n\t * the rest of the content of the selection.\n\t *\n\t * @param writer An instance of the model writer.\n\t * @param selection Selection to be checked.\n\t * @param action Type of clipboard action.\n\t */ _insertFakeMarkersIntoSelection(writer, selection, action) {\n        const copyableMarkers = this._getCopyableMarkersFromSelection(writer, selection, action);\n        return this._insertFakeMarkersElements(writer, copyableMarkers);\n    }\n    /**\n\t * Returns array of markers that can be copied in specified selection.\n\t *\n\t * If marker cannot be copied partially (according to `copyPartiallySelected` configuration flag) and\n\t * is not present entirely in any selection range then it will be skipped.\n\t *\n\t * @param writer An instance of the model writer.\n\t * @param selection  Selection which will be checked.\n\t * @param action Type of clipboard action. If null then checks only if marker is registered as copyable.\n\t */ _getCopyableMarkersFromSelection(writer, selection, action) {\n        const selectionRanges = Array.from(selection.getRanges());\n        // Picks all markers in provided ranges. Ensures that there are no duplications if\n        // there are multiple ranges that intersects with the same marker.\n        const markersInRanges = new Set(selectionRanges.flatMap((selectionRange)=>Array.from(writer.model.markers.getMarkersIntersectingRange(selectionRange))));\n        const isSelectionMarkerCopyable = (marker)=>{\n            // Check if marker exists in configuration and provided action can be performed on it.\n            const isCopyable = this._isMarkerCopyable(marker.name, action);\n            if (!isCopyable) {\n                return false;\n            }\n            // Checks if configuration disallows to copy marker only if part of its content is selected.\n            //\n            // Example:\n            // \t<marker-a> Hello [ World ] </marker-a>\n            //\t\t\t\t\t\t^ selection\n            //\n            // In this scenario `marker-a` won't be copied because selection doesn't overlap its content entirely.\n            const { copyPartiallySelected } = this._getMarkerClipboardConfig(marker.name);\n            if (!copyPartiallySelected) {\n                const markerRange = marker.getRange();\n                return selectionRanges.some((selectionRange)=>selectionRange.containsRange(markerRange, true));\n            }\n            return true;\n        };\n        return Array.from(markersInRanges).filter(isSelectionMarkerCopyable).map((copyableMarker)=>{\n            // During `dragstart` event original marker is still present in tree.\n            // It is removed after the clipboard drop event, so none of the copied markers are inserted at the end.\n            // It happens because there already markers with specified `marker.name` when clipboard is trying to insert data\n            // and it aborts inserting.\n            const name = action === 'dragstart' ? this._getUniqueMarkerName(copyableMarker.name) : copyableMarker.name;\n            return {\n                name,\n                range: copyableMarker.getRange()\n            };\n        });\n    }\n    /**\n\t * Picks all markers from markers map that can be pasted.\n\t * If `duplicateOnPaste` is `true`, it regenerates their IDs to ensure uniqueness.\n\t * If marker is not registered, it will be kept in the array anyway.\n\t *\n\t * @param markers Object that maps marker name to corresponding range.\n\t * @param action Type of clipboard action. If null then checks only if marker is registered as copyable.\n\t */ _getPasteMarkersFromRangeMap(markers, action = null) {\n        const { model } = this.editor;\n        const entries = markers instanceof Map ? Array.from(markers.entries()) : Object.entries(markers);\n        return entries.flatMap(([markerName, range])=>{\n            if (!this._hasMarkerConfiguration(markerName)) {\n                return [\n                    {\n                        name: markerName,\n                        range\n                    }\n                ];\n            }\n            if (this._isMarkerCopyable(markerName, action)) {\n                const copyMarkerConfig = this._getMarkerClipboardConfig(markerName);\n                const isInGraveyard = model.markers.has(markerName) && model.markers.get(markerName).getRange().root.rootName === '$graveyard';\n                if (copyMarkerConfig.duplicateOnPaste || isInGraveyard) {\n                    markerName = this._getUniqueMarkerName(markerName);\n                }\n                return [\n                    {\n                        name: markerName,\n                        range\n                    }\n                ];\n            }\n            return [];\n        });\n    }\n    /**\n\t * Inserts specified array of fake markers elements to document and assigns them `type` and `name` attributes.\n\t * Fake markers elements are used to calculate position of markers on pasted fragment that were transformed during\n\t * steps between copy and paste.\n\t *\n\t * @param writer An instance of the model writer.\n\t * @param markers Array of markers that will be inserted.\n\t */ _insertFakeMarkersElements(writer, markers) {\n        const mappedMarkers = {};\n        const sortedMarkers = markers.flatMap((marker)=>{\n            const { start, end } = marker.range;\n            return [\n                {\n                    position: start,\n                    marker,\n                    type: 'start'\n                },\n                {\n                    position: end,\n                    marker,\n                    type: 'end'\n                }\n            ];\n        })// Markers position is sorted backwards to ensure that the insertion of fake markers will not change\n        // the position of the next markers.\n        .sort(({ position: posA }, { position: posB })=>posA.isBefore(posB) ? 1 : -1);\n        for (const { position, marker, type } of sortedMarkers){\n            const fakeMarker = writer.createElement('$marker', {\n                'data-name': marker.name,\n                'data-type': type\n            });\n            if (!mappedMarkers[marker.name]) {\n                mappedMarkers[marker.name] = [];\n            }\n            mappedMarkers[marker.name].push(fakeMarker);\n            writer.insert(fakeMarker, position);\n        }\n        return mappedMarkers;\n    }\n    /**\n\t * Removes all `$marker` elements from the given document fragment.\n\t *\n\t * Returns an object where keys are marker names, and values are ranges corresponding to positions\n\t * where `$marker` elements were inserted.\n\t *\n\t * If the document fragment had only one `$marker` element for given marker (start or end) the other boundary is set automatically\n\t * (to the end or start of the document fragment, respectively).\n\t *\n\t * @param writer An instance of the model writer.\n\t * @param rootElement The element to be checked.\n\t */ _removeFakeMarkersInsideElement(writer, rootElement) {\n        const fakeMarkersElements = this._getAllFakeMarkersFromElement(writer, rootElement);\n        const fakeMarkersRanges = fakeMarkersElements.reduce((acc, fakeMarker)=>{\n            const position = fakeMarker.markerElement && writer.createPositionBefore(fakeMarker.markerElement);\n            let prevFakeMarker = acc[fakeMarker.name];\n            // Handle scenario when tables clone cells with the same fake node. Example:\n            //\n            // <cell><fake-marker-a></cell> <cell><fake-marker-a></cell> <cell><fake-marker-a></cell>\n            //                                          ^ cloned                    ^ cloned\n            //\n            // The easiest way to bypass this issue is to rename already existing in map nodes and\n            // set them new unique name.\n            let skipAssign = false;\n            if (prevFakeMarker && prevFakeMarker.start && prevFakeMarker.end) {\n                const config = this._getMarkerClipboardConfig(fakeMarker.name);\n                if (config.duplicateOnPaste) {\n                    acc[this._getUniqueMarkerName(fakeMarker.name)] = acc[fakeMarker.name];\n                } else {\n                    skipAssign = true;\n                }\n                prevFakeMarker = null;\n            }\n            if (!skipAssign) {\n                acc[fakeMarker.name] = {\n                    ...prevFakeMarker,\n                    [fakeMarker.type]: position\n                };\n            }\n            if (fakeMarker.markerElement) {\n                writer.remove(fakeMarker.markerElement);\n            }\n            return acc;\n        }, {});\n        // We cannot construct ranges directly in previous reduce because element ranges can overlap.\n        // In other words lets assume we have such scenario:\n        // <fake-marker-start /> <paragraph /> <fake-marker-2-start /> <fake-marker-end /> <fake-marker-2-end />\n        //\n        // We have to remove `fake-marker-start` firstly and then remove `fake-marker-2-start`.\n        // Removal of `fake-marker-2-start` affects `fake-marker-end` position so we cannot create\n        // connection between `fake-marker-start` and `fake-marker-end` without iterating whole set firstly.\n        return mapValues(fakeMarkersRanges, (range)=>new Range(range.start || writer.createPositionFromPath(rootElement, [\n                0\n            ]), range.end || writer.createPositionAt(rootElement, 'end')));\n    }\n    /**\n\t * Returns array that contains list of fake markers with corresponding `$marker` elements.\n\t *\n\t * For each marker, there can be two `$marker` elements or only one (if the document fragment contained\n\t * only the beginning or only the end of a marker).\n\t *\n\t * @param writer An instance of the model writer.\n\t * @param rootElement The element to be checked.\n\t */ _getAllFakeMarkersFromElement(writer, rootElement) {\n        const foundFakeMarkers = Array.from(writer.createRangeIn(rootElement)).flatMap(({ item })=>{\n            if (!item.is('element', '$marker')) {\n                return [];\n            }\n            const name = item.getAttribute('data-name');\n            const type = item.getAttribute('data-type');\n            return [\n                {\n                    markerElement: item,\n                    name,\n                    type\n                }\n            ];\n        });\n        const prependFakeMarkers = [];\n        const appendFakeMarkers = [];\n        for (const fakeMarker of foundFakeMarkers){\n            if (fakeMarker.type === 'end') {\n                // <fake-marker> [ phrase</fake-marker> phrase ]\n                //   ^\n                // Handle case when marker is just before start of selection.\n                // Only end marker is inside selection.\n                const hasMatchingStartMarker = foundFakeMarkers.some((otherFakeMarker)=>otherFakeMarker.name === fakeMarker.name && otherFakeMarker.type === 'start');\n                if (!hasMatchingStartMarker) {\n                    prependFakeMarkers.push({\n                        markerElement: null,\n                        name: fakeMarker.name,\n                        type: 'start'\n                    });\n                }\n            }\n            if (fakeMarker.type === 'start') {\n                // [<fake-marker>phrase]</fake-marker>\n                //                           ^\n                // Handle case when fake marker is after selection.\n                // Only start marker is inside selection.\n                const hasMatchingEndMarker = foundFakeMarkers.some((otherFakeMarker)=>otherFakeMarker.name === fakeMarker.name && otherFakeMarker.type === 'end');\n                if (!hasMatchingEndMarker) {\n                    appendFakeMarkers.unshift({\n                        markerElement: null,\n                        name: fakeMarker.name,\n                        type: 'end'\n                    });\n                }\n            }\n        }\n        return [\n            ...prependFakeMarkers,\n            ...foundFakeMarkers,\n            ...appendFakeMarkers\n        ];\n    }\n    /**\n\t * When copy of markers occurs we have to make sure that pasted markers have different names\n\t * than source markers. This functions helps with assigning unique part to marker name to\n\t * prevent duplicated markers error.\n\t *\n\t * @param name Name of marker\n\t */ _getUniqueMarkerName(name) {\n        const parts = name.split(':');\n        const newId = uid().substring(1, 6);\n        // It looks like the marker already is UID marker so in this scenario just swap\n        // last part of marker name and assign new UID.\n        //\n        // example: comment:{ threadId }:{ id } => comment:{ threadId }:{ newId }\n        if (parts.length === 3) {\n            return `${parts.slice(0, 2).join(':')}:${newId}`;\n        }\n        // Assign new segment to marker name with id.\n        //\n        // example: comment => comment:{ newId }\n        return `${parts.join(':')}:${newId}`;\n    }\n}\n\n// Input pipeline events overview:\n//\n//              ┌──────────────────────┐          ┌──────────────────────┐\n//              │     view.Document    │          │     view.Document    │\n//              │         paste        │          │         drop         │\n//              └───────────┬──────────┘          └───────────┬──────────┘\n//                          │                                 │\n//                          └────────────────┌────────────────┘\n//                                           │\n//                                 ┌─────────V────────┐\n//                                 │   view.Document  │   Retrieves text/html or text/plain from data.dataTransfer\n//                                 │  clipboardInput  │   and processes it to view.DocumentFragment.\n//                                 └─────────┬────────┘\n//                                           │\n//                               ┌───────────V───────────┐\n//                               │   ClipboardPipeline   │   Converts view.DocumentFragment to model.DocumentFragment.\n//                               │  inputTransformation  │\n//                               └───────────┬───────────┘\n//                                           │\n//                                ┌──────────V──────────┐\n//                                │  ClipboardPipeline  │   Calls model.insertContent().\n//                                │   contentInsertion  │\n//                                └─────────────────────┘\n//\n//\n// Output pipeline events overview:\n//\n//              ┌──────────────────────┐          ┌──────────────────────┐\n//              │     view.Document    │          │     view.Document    │   Retrieves the selected model.DocumentFragment\n//              │         copy         │          │          cut         │   and fires the `outputTransformation` event.\n//              └───────────┬──────────┘          └───────────┬──────────┘\n//                          │                                 │\n//                          └────────────────┌────────────────┘\n//                                           │\n//                               ┌───────────V───────────┐\n//                               │   ClipboardPipeline   │   Processes model.DocumentFragment and converts it to\n//                               │  outputTransformation │   view.DocumentFragment.\n//                               └───────────┬───────────┘\n//                                           │\n//                                 ┌─────────V────────┐\n//                                 │   view.Document  │   Processes view.DocumentFragment to text/html and text/plain\n//                                 │  clipboardOutput │   and stores the results in data.dataTransfer.\n//                                 └──────────────────┘\n//\n/**\n * The clipboard pipeline feature. It is responsible for intercepting the `paste` and `drop` events and\n * passing the pasted content through a series of events in order to insert it into the editor's content.\n * It also handles the `cut` and `copy` events to fill the native clipboard with the serialized editor's data.\n *\n * # Input pipeline\n *\n * The behavior of the default handlers (all at a `low` priority):\n *\n * ## Event: `paste` or `drop`\n *\n * 1. Translates the event data.\n * 2. Fires the {@link module:engine/view/document~Document#event:clipboardInput `view.Document#clipboardInput`} event.\n *\n * ## Event: `view.Document#clipboardInput`\n *\n * 1. If the `data.content` event field is already set (by some listener on a higher priority), it takes this content and fires the event\n *    from the last point.\n * 2. Otherwise, it retrieves `text/html` or `text/plain` from `data.dataTransfer`.\n * 3. Normalizes the raw data by applying simple filters on string data.\n * 4. Processes the raw data to {@link module:engine/view/documentfragment~DocumentFragment `view.DocumentFragment`} with the\n *    {@link module:engine/controller/datacontroller~DataController#htmlProcessor `DataController#htmlProcessor`}.\n * 5. Fires the {@link module:clipboard/clipboardpipeline~ClipboardPipeline#event:inputTransformation\n *   `ClipboardPipeline#inputTransformation`} event with the view document fragment in the `data.content` event field.\n *\n * ## Event: `ClipboardPipeline#inputTransformation`\n *\n * 1. Converts {@link module:engine/view/documentfragment~DocumentFragment `view.DocumentFragment`} from the `data.content` field to\n *    {@link module:engine/model/documentfragment~DocumentFragment `model.DocumentFragment`}.\n * 2. Fires the {@link module:clipboard/clipboardpipeline~ClipboardPipeline#event:contentInsertion `ClipboardPipeline#contentInsertion`}\n *    event with the model document fragment in the `data.content` event field.\n *    **Note**: The `ClipboardPipeline#contentInsertion` event is fired within a model change block to allow other handlers\n *    to run in the same block without post-fixers called in between (i.e., the selection post-fixer).\n *\n * ## Event: `ClipboardPipeline#contentInsertion`\n *\n * 1. Calls {@link module:engine/model/model~Model#insertContent `model.insertContent()`} to insert `data.content`\n *    at the current selection position.\n *\n * # Output pipeline\n *\n * The behavior of the default handlers (all at a `low` priority):\n *\n * ## Event: `copy`, `cut` or `dragstart`\n *\n * 1. Retrieves the selected {@link module:engine/model/documentfragment~DocumentFragment `model.DocumentFragment`} by calling\n *    {@link module:engine/model/model~Model#getSelectedContent `model#getSelectedContent()`}.\n * 2. Converts the model document fragment to {@link module:engine/view/documentfragment~DocumentFragment `view.DocumentFragment`}.\n * 3. Fires the {@link module:engine/view/document~Document#event:clipboardOutput `view.Document#clipboardOutput`} event\n *    with the view document fragment in the `data.content` event field.\n *\n * ## Event: `view.Document#clipboardOutput`\n *\n * 1. Processes `data.content` to HTML and plain text with the\n *    {@link module:engine/controller/datacontroller~DataController#htmlProcessor `DataController#htmlProcessor`}.\n * 2. Updates the `data.dataTransfer` data for `text/html` and `text/plain` with the processed data.\n * 3. For the `cut` method, calls {@link module:engine/model/model~Model#deleteContent `model.deleteContent()`}\n *    on the current selection.\n *\n * Read more about the clipboard integration in the {@glink framework/deep-dive/clipboard clipboard deep-dive} guide.\n */ class ClipboardPipeline extends Plugin {\n    /**\n\t * @inheritDoc\n\t */ static get pluginName() {\n        return 'ClipboardPipeline';\n    }\n    /**\n\t * @inheritDoc\n\t */ static get requires() {\n        return [\n            ClipboardMarkersUtils\n        ];\n    }\n    /**\n\t * @inheritDoc\n\t */ init() {\n        const editor = this.editor;\n        const view = editor.editing.view;\n        view.addObserver(ClipboardObserver);\n        this._setupPasteDrop();\n        this._setupCopyCut();\n    }\n    /**\n\t * Fires Clipboard `'outputTransformation'` event for given parameters.\n\t *\n\t * @internal\n\t */ _fireOutputTransformationEvent(dataTransfer, selection, method) {\n        const clipboardMarkersUtils = this.editor.plugins.get('ClipboardMarkersUtils');\n        this.editor.model.enqueueChange({\n            isUndoable: method === 'cut'\n        }, ()=>{\n            const documentFragment = clipboardMarkersUtils._copySelectedFragmentWithMarkers(method, selection);\n            this.fire('outputTransformation', {\n                dataTransfer,\n                content: documentFragment,\n                method\n            });\n        });\n    }\n    /**\n\t * The clipboard paste pipeline.\n\t */ _setupPasteDrop() {\n        const editor = this.editor;\n        const model = editor.model;\n        const view = editor.editing.view;\n        const viewDocument = view.document;\n        const clipboardMarkersUtils = this.editor.plugins.get('ClipboardMarkersUtils');\n        // Pasting is disabled when selection is in non-editable place.\n        // Dropping is disabled in drag and drop handler.\n        this.listenTo(viewDocument, 'clipboardInput', (evt, data)=>{\n            if (data.method == 'paste' && !editor.model.canEditAt(editor.model.document.selection)) {\n                evt.stop();\n            }\n        }, {\n            priority: 'highest'\n        });\n        this.listenTo(viewDocument, 'clipboardInput', (evt, data)=>{\n            const dataTransfer = data.dataTransfer;\n            let content;\n            // Some feature could already inject content in the higher priority event handler (i.e., codeBlock).\n            if (data.content) {\n                content = data.content;\n            } else {\n                let contentData = '';\n                if (dataTransfer.getData('text/html')) {\n                    contentData = normalizeClipboardData(dataTransfer.getData('text/html'));\n                } else if (dataTransfer.getData('text/plain')) {\n                    contentData = plainTextToHtml(dataTransfer.getData('text/plain'));\n                }\n                content = this.editor.data.htmlProcessor.toView(contentData);\n            }\n            const eventInfo = new EventInfo(this, 'inputTransformation');\n            this.fire(eventInfo, {\n                content,\n                dataTransfer,\n                targetRanges: data.targetRanges,\n                method: data.method\n            });\n            // If CKEditor handled the input, do not bubble the original event any further.\n            // This helps external integrations recognize this fact and act accordingly.\n            // https://github.com/ckeditor/ckeditor5-upload/issues/92\n            if (eventInfo.stop.called) {\n                evt.stop();\n            }\n            view.scrollToTheSelection();\n        }, {\n            priority: 'low'\n        });\n        this.listenTo(this, 'inputTransformation', (evt, data)=>{\n            if (data.content.isEmpty) {\n                return;\n            }\n            const dataController = this.editor.data;\n            // Convert the pasted content into a model document fragment.\n            // The conversion is contextual, but in this case an \"all allowed\" context is needed\n            // and for that we use the $clipboardHolder item.\n            const modelFragment = dataController.toModel(data.content, '$clipboardHolder');\n            if (modelFragment.childCount == 0) {\n                return;\n            }\n            evt.stop();\n            // Fire content insertion event in a single change block to allow other handlers to run in the same block\n            // without post-fixers called in between (i.e., the selection post-fixer).\n            model.change(()=>{\n                this.fire('contentInsertion', {\n                    content: modelFragment,\n                    method: data.method,\n                    dataTransfer: data.dataTransfer,\n                    targetRanges: data.targetRanges\n                });\n            });\n        }, {\n            priority: 'low'\n        });\n        this.listenTo(this, 'contentInsertion', (evt, data)=>{\n            data.resultRange = clipboardMarkersUtils._pasteFragmentWithMarkers(data.content);\n        }, {\n            priority: 'low'\n        });\n    }\n    /**\n\t * The clipboard copy/cut pipeline.\n\t */ _setupCopyCut() {\n        const editor = this.editor;\n        const modelDocument = editor.model.document;\n        const view = editor.editing.view;\n        const viewDocument = view.document;\n        const onCopyCut = (evt, data)=>{\n            const dataTransfer = data.dataTransfer;\n            data.preventDefault();\n            this._fireOutputTransformationEvent(dataTransfer, modelDocument.selection, evt.name);\n        };\n        this.listenTo(viewDocument, 'copy', onCopyCut, {\n            priority: 'low'\n        });\n        this.listenTo(viewDocument, 'cut', (evt, data)=>{\n            // Cutting is disabled when selection is in non-editable place.\n            // See: https://github.com/ckeditor/ckeditor5-clipboard/issues/26.\n            if (!editor.model.canEditAt(editor.model.document.selection)) {\n                data.preventDefault();\n            } else {\n                onCopyCut(evt, data);\n            }\n        }, {\n            priority: 'low'\n        });\n        this.listenTo(this, 'outputTransformation', (evt, data)=>{\n            const content = editor.data.toView(data.content);\n            viewDocument.fire('clipboardOutput', {\n                dataTransfer: data.dataTransfer,\n                content,\n                method: data.method\n            });\n        }, {\n            priority: 'low'\n        });\n        this.listenTo(viewDocument, 'clipboardOutput', (evt, data)=>{\n            if (!data.content.isEmpty) {\n                data.dataTransfer.setData('text/html', this.editor.data.htmlProcessor.toData(data.content));\n                data.dataTransfer.setData('text/plain', viewToPlainText(data.content));\n            }\n            if (data.method == 'cut') {\n                editor.model.deleteContent(modelDocument.selection);\n            }\n        }, {\n            priority: 'low'\n        });\n    }\n}\n\nconst toPx = /* #__PURE__ */ toUnit('px');\n/**\n * The horizontal drop target line view.\n */ class LineView extends View {\n    /**\n\t * @inheritDoc\n\t */ constructor(){\n        super();\n        const bind = this.bindTemplate;\n        this.set({\n            isVisible: false,\n            left: null,\n            top: null,\n            width: null\n        });\n        this.setTemplate({\n            tag: 'div',\n            attributes: {\n                class: [\n                    'ck',\n                    'ck-clipboard-drop-target-line',\n                    bind.if('isVisible', 'ck-hidden', (value)=>!value)\n                ],\n                style: {\n                    left: bind.to('left', (left)=>toPx(left)),\n                    top: bind.to('top', (top)=>toPx(top)),\n                    width: bind.to('width', (width)=>toPx(width))\n                }\n            }\n        });\n    }\n}\n\n/**\n * Part of the Drag and Drop handling. Responsible for finding and displaying the drop target.\n *\n * @internal\n */ class DragDropTarget extends Plugin {\n    /**\n\t * A delayed callback removing the drop marker.\n\t *\n\t * @internal\n\t */ removeDropMarkerDelayed = delay(()=>this.removeDropMarker(), 40);\n    /**\n\t * A throttled callback updating the drop marker.\n\t */ _updateDropMarkerThrottled = throttle((targetRange)=>this._updateDropMarker(targetRange), 40);\n    /**\n\t * A throttled callback reconverting the drop parker.\n\t */ _reconvertMarkerThrottled = throttle(()=>{\n        if (this.editor.model.markers.has('drop-target')) {\n            this.editor.editing.reconvertMarker('drop-target');\n        }\n    }, 0);\n    /**\n\t * The horizontal drop target line view.\n\t */ _dropTargetLineView = new LineView();\n    /**\n\t * DOM Emitter.\n\t */ _domEmitter = new (DomEmitterMixin())();\n    /**\n\t * Map of document scrollable elements.\n\t */ _scrollables = new Map();\n    /**\n\t * @inheritDoc\n\t */ static get pluginName() {\n        return 'DragDropTarget';\n    }\n    /**\n\t * @inheritDoc\n\t */ init() {\n        this._setupDropMarker();\n    }\n    /**\n\t * @inheritDoc\n\t */ destroy() {\n        this._domEmitter.stopListening();\n        for (const { resizeObserver } of this._scrollables.values()){\n            resizeObserver.destroy();\n        }\n        this._updateDropMarkerThrottled.cancel();\n        this.removeDropMarkerDelayed.cancel();\n        this._reconvertMarkerThrottled.cancel();\n        return super.destroy();\n    }\n    /**\n\t * Finds the drop target range and updates the drop marker.\n\t *\n\t * @internal\n\t */ updateDropMarker(targetViewElement, targetViewRanges, clientX, clientY, blockMode, draggedRange) {\n        this.removeDropMarkerDelayed.cancel();\n        const targetRange = findDropTargetRange(this.editor, targetViewElement, targetViewRanges, clientX, clientY, blockMode, draggedRange);\n        /* istanbul ignore next -- @preserve */ if (!targetRange) {\n            return;\n        }\n        if (draggedRange && draggedRange.containsRange(targetRange)) {\n            // Target range is inside the dragged range.\n            return this.removeDropMarker();\n        }\n        this._updateDropMarkerThrottled(targetRange);\n    }\n    /**\n\t * Finds the final drop target range.\n\t *\n\t * @internal\n\t */ getFinalDropRange(targetViewElement, targetViewRanges, clientX, clientY, blockMode, draggedRange) {\n        const targetRange = findDropTargetRange(this.editor, targetViewElement, targetViewRanges, clientX, clientY, blockMode, draggedRange);\n        // The dragging markers must be removed after searching for the target range because sometimes\n        // the target lands on the marker itself.\n        this.removeDropMarker();\n        return targetRange;\n    }\n    /**\n\t * Removes the drop target marker.\n\t *\n\t * @internal\n\t */ removeDropMarker() {\n        const model = this.editor.model;\n        this.removeDropMarkerDelayed.cancel();\n        this._updateDropMarkerThrottled.cancel();\n        this._dropTargetLineView.isVisible = false;\n        if (model.markers.has('drop-target')) {\n            model.change((writer)=>{\n                writer.removeMarker('drop-target');\n            });\n        }\n    }\n    /**\n\t * Creates downcast conversion for the drop target marker.\n\t */ _setupDropMarker() {\n        const editor = this.editor;\n        editor.ui.view.body.add(this._dropTargetLineView);\n        // Drop marker conversion for hovering over widgets.\n        editor.conversion.for('editingDowncast').markerToHighlight({\n            model: 'drop-target',\n            view: {\n                classes: [\n                    'ck-clipboard-drop-target-range'\n                ]\n            }\n        });\n        // Drop marker conversion for in text and block drop target.\n        editor.conversion.for('editingDowncast').markerToElement({\n            model: 'drop-target',\n            view: (data, { writer })=>{\n                // Inline drop.\n                if (editor.model.schema.checkChild(data.markerRange.start, '$text')) {\n                    this._dropTargetLineView.isVisible = false;\n                    return this._createDropTargetPosition(writer);\n                } else {\n                    if (data.markerRange.isCollapsed) {\n                        this._updateDropTargetLine(data.markerRange);\n                    } else {\n                        this._dropTargetLineView.isVisible = false;\n                    }\n                }\n            }\n        });\n    }\n    /**\n\t * Updates the drop target marker to the provided range.\n\t *\n\t * @param targetRange The range to set the marker to.\n\t */ _updateDropMarker(targetRange) {\n        const editor = this.editor;\n        const markers = editor.model.markers;\n        editor.model.change((writer)=>{\n            if (markers.has('drop-target')) {\n                if (!markers.get('drop-target').getRange().isEqual(targetRange)) {\n                    writer.updateMarker('drop-target', {\n                        range: targetRange\n                    });\n                }\n            } else {\n                writer.addMarker('drop-target', {\n                    range: targetRange,\n                    usingOperation: false,\n                    affectsData: false\n                });\n            }\n        });\n    }\n    /**\n\t * Creates the UI element for vertical (in-line) drop target.\n\t */ _createDropTargetPosition(writer) {\n        return writer.createUIElement('span', {\n            class: 'ck ck-clipboard-drop-target-position'\n        }, function(domDocument) {\n            const domElement = this.toDomElement(domDocument);\n            // Using word joiner to make this marker as high as text and also making text not break on marker.\n            domElement.append('\\u2060', domDocument.createElement('span'), '\\u2060');\n            return domElement;\n        });\n    }\n    /**\n\t * Updates the horizontal drop target line.\n\t */ _updateDropTargetLine(range) {\n        const editing = this.editor.editing;\n        const nodeBefore = range.start.nodeBefore;\n        const nodeAfter = range.start.nodeAfter;\n        const nodeParent = range.start.parent;\n        const viewElementBefore = nodeBefore ? editing.mapper.toViewElement(nodeBefore) : null;\n        const domElementBefore = viewElementBefore ? editing.view.domConverter.mapViewToDom(viewElementBefore) : null;\n        const viewElementAfter = nodeAfter ? editing.mapper.toViewElement(nodeAfter) : null;\n        const domElementAfter = viewElementAfter ? editing.view.domConverter.mapViewToDom(viewElementAfter) : null;\n        const viewElementParent = editing.mapper.toViewElement(nodeParent);\n        if (!viewElementParent) {\n            return;\n        }\n        const domElementParent = editing.view.domConverter.mapViewToDom(viewElementParent);\n        const domScrollableRect = this._getScrollableRect(viewElementParent);\n        const { scrollX, scrollY } = global.window;\n        const rectBefore = domElementBefore ? new Rect(domElementBefore) : null;\n        const rectAfter = domElementAfter ? new Rect(domElementAfter) : null;\n        const rectParent = new Rect(domElementParent).excludeScrollbarsAndBorders();\n        const above = rectBefore ? rectBefore.bottom : rectParent.top;\n        const below = rectAfter ? rectAfter.top : rectParent.bottom;\n        const parentStyle = global.window.getComputedStyle(domElementParent);\n        const top = above <= below ? (above + below) / 2 : below;\n        if (domScrollableRect.top < top && top < domScrollableRect.bottom) {\n            const left = rectParent.left + parseFloat(parentStyle.paddingLeft);\n            const right = rectParent.right - parseFloat(parentStyle.paddingRight);\n            const leftClamped = Math.max(left + scrollX, domScrollableRect.left);\n            const rightClamped = Math.min(right + scrollX, domScrollableRect.right);\n            this._dropTargetLineView.set({\n                isVisible: true,\n                left: leftClamped,\n                top: top + scrollY,\n                width: rightClamped - leftClamped\n            });\n        } else {\n            this._dropTargetLineView.isVisible = false;\n        }\n    }\n    /**\n\t * Finds the closest scrollable element rect for the given view element.\n\t */ _getScrollableRect(viewElement) {\n        const rootName = viewElement.root.rootName;\n        let domScrollable;\n        if (this._scrollables.has(rootName)) {\n            domScrollable = this._scrollables.get(rootName).domElement;\n        } else {\n            const domElement = this.editor.editing.view.domConverter.mapViewToDom(viewElement);\n            domScrollable = findScrollableElement(domElement);\n            this._domEmitter.listenTo(domScrollable, 'scroll', this._reconvertMarkerThrottled, {\n                usePassive: true\n            });\n            const resizeObserver = new ResizeObserver(domScrollable, this._reconvertMarkerThrottled);\n            this._scrollables.set(rootName, {\n                domElement: domScrollable,\n                resizeObserver\n            });\n        }\n        return new Rect(domScrollable).excludeScrollbarsAndBorders();\n    }\n}\n/**\n * Returns fixed selection range for given position and target element.\n */ function findDropTargetRange(editor, targetViewElement, targetViewRanges, clientX, clientY, blockMode, draggedRange) {\n    const model = editor.model;\n    const mapper = editor.editing.mapper;\n    const targetModelElement = getClosestMappedModelElement(editor, targetViewElement);\n    let modelElement = targetModelElement;\n    while(modelElement){\n        if (!blockMode) {\n            if (model.schema.checkChild(modelElement, '$text')) {\n                if (targetViewRanges) {\n                    const targetViewPosition = targetViewRanges[0].start;\n                    const targetModelPosition = mapper.toModelPosition(targetViewPosition);\n                    const canDropOnPosition = !draggedRange || Array.from(draggedRange.getItems()).every((item)=>model.schema.checkChild(targetModelPosition, item));\n                    if (canDropOnPosition) {\n                        if (model.schema.checkChild(targetModelPosition, '$text')) {\n                            return model.createRange(targetModelPosition);\n                        } else if (targetViewPosition) {\n                            // This is the case of dropping inside a span wrapper of an inline image.\n                            return findDropTargetRangeForElement(editor, getClosestMappedModelElement(editor, targetViewPosition.parent), clientX, clientY);\n                        }\n                    }\n                }\n            } else if (model.schema.isInline(modelElement)) {\n                return findDropTargetRangeForElement(editor, modelElement, clientX, clientY);\n            }\n        }\n        if (model.schema.isBlock(modelElement)) {\n            return findDropTargetRangeForElement(editor, modelElement, clientX, clientY);\n        } else if (model.schema.checkChild(modelElement, '$block')) {\n            const childNodes = Array.from(modelElement.getChildren()).filter((node)=>node.is('element') && !shouldIgnoreElement(editor, node));\n            let startIndex = 0;\n            let endIndex = childNodes.length;\n            if (endIndex == 0) {\n                return model.createRange(model.createPositionAt(modelElement, 'end'));\n            }\n            while(startIndex < endIndex - 1){\n                const middleIndex = Math.floor((startIndex + endIndex) / 2);\n                const side = findElementSide(editor, childNodes[middleIndex], clientX, clientY);\n                if (side == 'before') {\n                    endIndex = middleIndex;\n                } else {\n                    startIndex = middleIndex;\n                }\n            }\n            return findDropTargetRangeForElement(editor, childNodes[startIndex], clientX, clientY);\n        }\n        modelElement = modelElement.parent;\n    }\n    return null;\n}\n/**\n * Returns true for elements which should be ignored.\n */ function shouldIgnoreElement(editor, modelElement) {\n    const mapper = editor.editing.mapper;\n    const domConverter = editor.editing.view.domConverter;\n    const viewElement = mapper.toViewElement(modelElement);\n    if (!viewElement) {\n        return true;\n    }\n    const domElement = domConverter.mapViewToDom(viewElement);\n    return global.window.getComputedStyle(domElement).float != 'none';\n}\n/**\n * Returns target range relative to the given element.\n */ function findDropTargetRangeForElement(editor, modelElement, clientX, clientY) {\n    const model = editor.model;\n    return model.createRange(model.createPositionAt(modelElement, findElementSide(editor, modelElement, clientX, clientY)));\n}\n/**\n * Resolves whether drop marker should be before or after the given element.\n */ function findElementSide(editor, modelElement, clientX, clientY) {\n    const mapper = editor.editing.mapper;\n    const domConverter = editor.editing.view.domConverter;\n    const viewElement = mapper.toViewElement(modelElement);\n    const domElement = domConverter.mapViewToDom(viewElement);\n    const rect = new Rect(domElement);\n    if (editor.model.schema.isInline(modelElement)) {\n        return clientX < (rect.left + rect.right) / 2 ? 'before' : 'after';\n    } else {\n        return clientY < (rect.top + rect.bottom) / 2 ? 'before' : 'after';\n    }\n}\n/**\n * Returns the closest model element for the specified view element.\n */ function getClosestMappedModelElement(editor, element) {\n    const mapper = editor.editing.mapper;\n    const view = editor.editing.view;\n    const targetModelElement = mapper.toModelElement(element);\n    if (targetModelElement) {\n        return targetModelElement;\n    }\n    // Find mapped ancestor if the target is inside not mapped element (for example inline code element).\n    const viewPosition = view.createPositionBefore(element);\n    const viewElement = mapper.findMappedViewAncestor(viewPosition);\n    return mapper.toModelElement(viewElement);\n}\n/**\n * Returns the closest scrollable ancestor DOM element.\n *\n * It is assumed that `domNode` is attached to the document.\n */ function findScrollableElement(domNode) {\n    let domElement = domNode;\n    do {\n        domElement = domElement.parentElement;\n        const overflow = global.window.getComputedStyle(domElement).overflowY;\n        if (overflow == 'auto' || overflow == 'scroll') {\n            break;\n        }\n    }while (domElement.tagName != 'BODY')\n    return domElement;\n}\n\n/**\n * Integration of a block Drag and Drop support with the block toolbar.\n *\n * @internal\n */ class DragDropBlockToolbar extends Plugin {\n    /**\n\t * Whether current dragging is started by block toolbar button dragging.\n\t */ _isBlockDragging = false;\n    /**\n\t * DOM Emitter.\n\t */ _domEmitter = new (DomEmitterMixin())();\n    /**\n\t * @inheritDoc\n\t */ static get pluginName() {\n        return 'DragDropBlockToolbar';\n    }\n    /**\n\t * @inheritDoc\n\t */ init() {\n        const editor = this.editor;\n        this.listenTo(editor, 'change:isReadOnly', (evt, name, isReadOnly)=>{\n            if (isReadOnly) {\n                this.forceDisabled('readOnlyMode');\n                this._isBlockDragging = false;\n            } else {\n                this.clearForceDisabled('readOnlyMode');\n            }\n        });\n        if (env.isAndroid) {\n            this.forceDisabled('noAndroidSupport');\n        }\n        if (editor.plugins.has('BlockToolbar')) {\n            const blockToolbar = editor.plugins.get('BlockToolbar');\n            const element = blockToolbar.buttonView.element;\n            this._domEmitter.listenTo(element, 'dragstart', (evt, data)=>this._handleBlockDragStart(data));\n            this._domEmitter.listenTo(global.document, 'dragover', (evt, data)=>this._handleBlockDragging(data));\n            this._domEmitter.listenTo(global.document, 'drop', (evt, data)=>this._handleBlockDragging(data));\n            this._domEmitter.listenTo(global.document, 'dragend', ()=>this._handleBlockDragEnd(), {\n                useCapture: true\n            });\n            if (this.isEnabled) {\n                element.setAttribute('draggable', 'true');\n            }\n            this.on('change:isEnabled', (evt, name, isEnabled)=>{\n                element.setAttribute('draggable', isEnabled ? 'true' : 'false');\n            });\n        }\n    }\n    /**\n\t * @inheritDoc\n\t */ destroy() {\n        this._domEmitter.stopListening();\n        return super.destroy();\n    }\n    /**\n\t * The `dragstart` event handler.\n\t */ _handleBlockDragStart(domEvent) {\n        if (!this.isEnabled) {\n            return;\n        }\n        const model = this.editor.model;\n        const selection = model.document.selection;\n        const view = this.editor.editing.view;\n        const blocks = Array.from(selection.getSelectedBlocks());\n        const draggedRange = model.createRange(model.createPositionBefore(blocks[0]), model.createPositionAfter(blocks[blocks.length - 1]));\n        model.change((writer)=>writer.setSelection(draggedRange));\n        this._isBlockDragging = true;\n        view.focus();\n        view.getObserver(ClipboardObserver).onDomEvent(domEvent);\n    }\n    /**\n\t * The `dragover` and `drop` event handler.\n\t */ _handleBlockDragging(domEvent) {\n        if (!this.isEnabled || !this._isBlockDragging) {\n            return;\n        }\n        const clientX = domEvent.clientX + (this.editor.locale.contentLanguageDirection == 'ltr' ? 100 : -100);\n        const clientY = domEvent.clientY;\n        const target = document.elementFromPoint(clientX, clientY);\n        const view = this.editor.editing.view;\n        if (!target || !target.closest('.ck-editor__editable')) {\n            return;\n        }\n        view.getObserver(ClipboardObserver).onDomEvent({\n            ...domEvent,\n            type: domEvent.type,\n            dataTransfer: domEvent.dataTransfer,\n            target,\n            clientX,\n            clientY,\n            preventDefault: ()=>domEvent.preventDefault(),\n            stopPropagation: ()=>domEvent.stopPropagation()\n        });\n    }\n    /**\n\t * The `dragend` event handler.\n\t */ _handleBlockDragEnd() {\n        this._isBlockDragging = false;\n    }\n}\n\n// Drag and drop events overview:\n//\n//                ┌──────────────────┐\n//                │     mousedown    │   Sets the draggable attribute.\n//                └─────────┬────────┘\n//                          │\n//                          └─────────────────────┐\n//                          │                     │\n//                          │           ┌─────────V────────┐\n//                          │           │      mouseup     │   Dragging did not start, removes the draggable attribute.\n//                          │           └──────────────────┘\n//                          │\n//                ┌─────────V────────┐   Retrieves the selected model.DocumentFragment\n//                │     dragstart    │   and converts it to view.DocumentFragment.\n//                └─────────┬────────┘\n//                          │\n//                ┌─────────V────────┐   Processes view.DocumentFragment to text/html and text/plain\n//                │  clipboardOutput │   and stores the results in data.dataTransfer.\n//                └─────────┬────────┘\n//                          │\n//                          │   DOM dragover\n//                          ┌────────────┐\n//                          │            │\n//                ┌─────────V────────┐   │\n//                │     dragging     │   │   Updates the drop target marker.\n//                └─────────┬────────┘   │\n//                          │            │\n//            ┌─────────────└────────────┘\n//            │             │            │\n//            │   ┌─────────V────────┐   │\n//            │   │     dragleave    │   │   Removes the drop target marker.\n//            │   └─────────┬────────┘   │\n//            │             │            │\n//        ┌───│─────────────┘            │\n//        │   │             │            │\n//        │   │   ┌─────────V────────┐   │\n//        │   │   │     dragenter    │   │   Focuses the editor view.\n//        │   │   └─────────┬────────┘   │\n//        │   │             │            │\n//        │   │             └────────────┘\n//        │   │\n//        │   └─────────────┐\n//        │   │             │\n//        │   │   ┌─────────V────────┐\n//        └───┐   │       drop       │   (The default handler of the clipboard pipeline).\n//            │   └─────────┬────────┘\n//            │             │\n//            │   ┌─────────V────────┐   Resolves the final data.targetRanges.\n//            │   │  clipboardInput  │   Aborts if dropping on dragged content.\n//            │   └─────────┬────────┘\n//            │             │\n//            │   ┌─────────V────────┐\n//            │   │  clipboardInput  │   (The default handler of the clipboard pipeline).\n//            │   └─────────┬────────┘\n//            │             │\n//            │ ┌───────────V───────────┐\n//            │ │  inputTransformation  │   (The default handler of the clipboard pipeline).\n//            │ └───────────┬───────────┘\n//            │             │\n//            │  ┌──────────V──────────┐\n//            │  │   contentInsertion  │   Updates the document selection to drop range.\n//            │  └──────────┬──────────┘\n//            │             │\n//            │  ┌──────────V──────────┐\n//            │  │   contentInsertion  │   (The default handler of the clipboard pipeline).\n//            │  └──────────┬──────────┘\n//            │             │\n//            │  ┌──────────V──────────┐\n//            │  │   contentInsertion  │   Removes the content from the original range if the insertion was successful.\n//            │  └──────────┬──────────┘\n//            │             │\n//            └─────────────┐\n//                          │\n//                ┌─────────V────────┐\n//                │      dragend     │   Removes the drop marker and cleans the state.\n//                └──────────────────┘\n//\n/**\n * The drag and drop feature. It works on top of the {@link module:clipboard/clipboardpipeline~ClipboardPipeline}.\n *\n * Read more about the clipboard integration in the {@glink framework/deep-dive/clipboard clipboard deep-dive} guide.\n *\n * @internal\n */ class DragDrop extends Plugin {\n    /**\n\t * The live range over the original content that is being dragged.\n\t */ _draggedRange;\n    /**\n\t * The UID of current dragging that is used to verify if the drop started in the same editor as the drag start.\n\t *\n\t * **Note**: This is a workaround for broken 'dragend' events (they are not fired if the source text node got removed).\n\t */ _draggingUid;\n    /**\n\t * The reference to the model element that currently has a `draggable` attribute set (it is set while dragging).\n\t */ _draggableElement;\n    /**\n\t * A delayed callback removing draggable attributes.\n\t */ _clearDraggableAttributesDelayed = delay(()=>this._clearDraggableAttributes(), 40);\n    /**\n\t * Whether the dragged content can be dropped only in block context.\n\t */ // TODO handle drag from other editor instance\n    // TODO configure to use block, inline or both\n    _blockMode = false;\n    /**\n\t * DOM Emitter.\n\t */ _domEmitter = new (DomEmitterMixin())();\n    /**\n\t * The DOM element used to generate dragged preview image.\n\t */ _previewContainer;\n    /**\n\t * @inheritDoc\n\t */ static get pluginName() {\n        return 'DragDrop';\n    }\n    /**\n\t * @inheritDoc\n\t */ static get requires() {\n        return [\n            ClipboardPipeline,\n            Widget,\n            DragDropTarget,\n            DragDropBlockToolbar\n        ];\n    }\n    /**\n\t * @inheritDoc\n\t */ init() {\n        const editor = this.editor;\n        const view = editor.editing.view;\n        this._draggedRange = null;\n        this._draggingUid = '';\n        this._draggableElement = null;\n        view.addObserver(ClipboardObserver);\n        view.addObserver(MouseObserver);\n        this._setupDragging();\n        this._setupContentInsertionIntegration();\n        this._setupClipboardInputIntegration();\n        this._setupDraggableAttributeHandling();\n        this.listenTo(editor, 'change:isReadOnly', (evt, name, isReadOnly)=>{\n            if (isReadOnly) {\n                this.forceDisabled('readOnlyMode');\n            } else {\n                this.clearForceDisabled('readOnlyMode');\n            }\n        });\n        this.on('change:isEnabled', (evt, name, isEnabled)=>{\n            if (!isEnabled) {\n                this._finalizeDragging(false);\n            }\n        });\n        if (env.isAndroid) {\n            this.forceDisabled('noAndroidSupport');\n        }\n    }\n    /**\n\t * @inheritDoc\n\t */ destroy() {\n        if (this._draggedRange) {\n            this._draggedRange.detach();\n            this._draggedRange = null;\n        }\n        if (this._previewContainer) {\n            this._previewContainer.remove();\n        }\n        this._domEmitter.stopListening();\n        this._clearDraggableAttributesDelayed.cancel();\n        return super.destroy();\n    }\n    /**\n\t * Drag and drop events handling.\n\t */ _setupDragging() {\n        const editor = this.editor;\n        const model = editor.model;\n        const view = editor.editing.view;\n        const viewDocument = view.document;\n        const dragDropTarget = editor.plugins.get(DragDropTarget);\n        // The handler for the drag start; it is responsible for setting data transfer object.\n        this.listenTo(viewDocument, 'dragstart', (evt, data)=>{\n            // Don't drag the editable element itself.\n            if (data.target && data.target.is('editableElement')) {\n                data.preventDefault();\n                return;\n            }\n            this._prepareDraggedRange(data.target);\n            if (!this._draggedRange) {\n                data.preventDefault();\n                return;\n            }\n            this._draggingUid = uid();\n            data.dataTransfer.effectAllowed = this.isEnabled ? 'copyMove' : 'copy';\n            data.dataTransfer.setData('application/ckeditor5-dragging-uid', this._draggingUid);\n            const draggedSelection = model.createSelection(this._draggedRange.toRange());\n            const clipboardPipeline = this.editor.plugins.get('ClipboardPipeline');\n            clipboardPipeline._fireOutputTransformationEvent(data.dataTransfer, draggedSelection, 'dragstart');\n            const { dataTransfer, domTarget, domEvent } = data;\n            const { clientX } = domEvent;\n            this._updatePreview({\n                dataTransfer,\n                domTarget,\n                clientX\n            });\n            data.stopPropagation();\n            if (!this.isEnabled) {\n                this._draggedRange.detach();\n                this._draggedRange = null;\n                this._draggingUid = '';\n            }\n        }, {\n            priority: 'low'\n        });\n        // The handler for finalizing drag and drop. It should always be triggered after dragging completes\n        // even if it was completed in a different application.\n        // Note: This is not fired if source text node got removed while downcasting a marker.\n        this.listenTo(viewDocument, 'dragend', (evt, data)=>{\n            this._finalizeDragging(!data.dataTransfer.isCanceled && data.dataTransfer.dropEffect == 'move');\n        }, {\n            priority: 'low'\n        });\n        // Reset block dragging mode even if dropped outside the editable.\n        this._domEmitter.listenTo(global.document, 'dragend', ()=>{\n            this._blockMode = false;\n        }, {\n            useCapture: true\n        });\n        // Dragging over the editable.\n        this.listenTo(viewDocument, 'dragenter', ()=>{\n            if (!this.isEnabled) {\n                return;\n            }\n            view.focus();\n        });\n        // Dragging out of the editable.\n        this.listenTo(viewDocument, 'dragleave', ()=>{\n            // We do not know if the mouse left the editor or just some element in it, so let us wait a few milliseconds\n            // to check if 'dragover' is not fired.\n            dragDropTarget.removeDropMarkerDelayed();\n        });\n        // Handler for moving dragged content over the target area.\n        this.listenTo(viewDocument, 'dragging', (evt, data)=>{\n            if (!this.isEnabled) {\n                data.dataTransfer.dropEffect = 'none';\n                return;\n            }\n            const { clientX, clientY } = data.domEvent;\n            dragDropTarget.updateDropMarker(data.target, data.targetRanges, clientX, clientY, this._blockMode, this._draggedRange);\n            // If this is content being dragged from another editor, moving out of current editor instance\n            // is not possible until 'dragend' event case will be fixed.\n            if (!this._draggedRange) {\n                data.dataTransfer.dropEffect = 'copy';\n            }\n            // In Firefox it is already set and effect allowed remains the same as originally set.\n            if (!env.isGecko) {\n                if (data.dataTransfer.effectAllowed == 'copy') {\n                    data.dataTransfer.dropEffect = 'copy';\n                } else if ([\n                    'all',\n                    'copyMove'\n                ].includes(data.dataTransfer.effectAllowed)) {\n                    data.dataTransfer.dropEffect = 'move';\n                }\n            }\n            evt.stop();\n        }, {\n            priority: 'low'\n        });\n    }\n    /**\n\t * Integration with the `clipboardInput` event.\n\t */ _setupClipboardInputIntegration() {\n        const editor = this.editor;\n        const view = editor.editing.view;\n        const viewDocument = view.document;\n        const dragDropTarget = editor.plugins.get(DragDropTarget);\n        // Update the event target ranges and abort dropping if dropping over itself.\n        this.listenTo(viewDocument, 'clipboardInput', (evt, data)=>{\n            if (data.method != 'drop') {\n                return;\n            }\n            const { clientX, clientY } = data.domEvent;\n            const targetRange = dragDropTarget.getFinalDropRange(data.target, data.targetRanges, clientX, clientY, this._blockMode, this._draggedRange);\n            if (!targetRange) {\n                this._finalizeDragging(false);\n                evt.stop();\n                return;\n            }\n            // Since we cannot rely on the drag end event, we must check if the local drag range is from the current drag and drop\n            // or it is from some previous not cleared one.\n            if (this._draggedRange && this._draggingUid != data.dataTransfer.getData('application/ckeditor5-dragging-uid')) {\n                this._draggedRange.detach();\n                this._draggedRange = null;\n                this._draggingUid = '';\n            }\n            // Do not do anything if some content was dragged within the same document to the same position.\n            const isMove = getFinalDropEffect(data.dataTransfer) == 'move';\n            if (isMove && this._draggedRange && this._draggedRange.containsRange(targetRange, true)) {\n                this._finalizeDragging(false);\n                evt.stop();\n                return;\n            }\n            // Override the target ranges with the one adjusted to the best one for a drop.\n            data.targetRanges = [\n                editor.editing.mapper.toViewRange(targetRange)\n            ];\n        }, {\n            priority: 'high'\n        });\n    }\n    /**\n\t * Integration with the `contentInsertion` event of the clipboard pipeline.\n\t */ _setupContentInsertionIntegration() {\n        const clipboardPipeline = this.editor.plugins.get(ClipboardPipeline);\n        clipboardPipeline.on('contentInsertion', (evt, data)=>{\n            if (!this.isEnabled || data.method !== 'drop') {\n                return;\n            }\n            // Update the selection to the target range in the same change block to avoid selection post-fixing\n            // and to be able to clone text attributes for plain text dropping.\n            const ranges = data.targetRanges.map((viewRange)=>this.editor.editing.mapper.toModelRange(viewRange));\n            this.editor.model.change((writer)=>writer.setSelection(ranges));\n        }, {\n            priority: 'high'\n        });\n        clipboardPipeline.on('contentInsertion', (evt, data)=>{\n            if (!this.isEnabled || data.method !== 'drop') {\n                return;\n            }\n            // Remove dragged range content, remove markers, clean after dragging.\n            const isMove = getFinalDropEffect(data.dataTransfer) == 'move';\n            // Whether any content was inserted (insertion might fail if the schema is disallowing some elements\n            // (for example an image caption allows only the content of a block but not blocks themselves.\n            // Some integrations might not return valid range (i.e., table pasting).\n            const isSuccess = !data.resultRange || !data.resultRange.isCollapsed;\n            this._finalizeDragging(isSuccess && isMove);\n        }, {\n            priority: 'lowest'\n        });\n    }\n    /**\n\t * Adds listeners that add the `draggable` attribute to the elements while the mouse button is down so the dragging could start.\n\t */ _setupDraggableAttributeHandling() {\n        const editor = this.editor;\n        const view = editor.editing.view;\n        const viewDocument = view.document;\n        // Add the 'draggable' attribute to the widget while pressing the selection handle.\n        // This is required for widgets to be draggable. In Chrome it will enable dragging text nodes.\n        this.listenTo(viewDocument, 'mousedown', (evt, data)=>{\n            // The lack of data can be caused by editor tests firing fake mouse events. This should not occur\n            // in real-life scenarios but this greatly simplifies editor tests that would otherwise fail a lot.\n            if (env.isAndroid || !data) {\n                return;\n            }\n            this._clearDraggableAttributesDelayed.cancel();\n            // Check if this is a mousedown over the widget (but not a nested editable).\n            let draggableElement = findDraggableWidget(data.target);\n            // Note: There is a limitation that if more than a widget is selected (a widget and some text)\n            // and dragging starts on the widget, then only the widget is dragged.\n            // If this was not a widget then we should check if we need to drag some text content.\n            // In Chrome set a 'draggable' attribute on closest editable to allow immediate dragging of the selected text range.\n            // In Firefox this is not needed. In Safari it makes the whole editable draggable (not just textual content).\n            // Disabled in read-only mode because draggable=\"true\" + contenteditable=\"false\" results\n            // in not firing selectionchange event ever, which makes the selection stuck in read-only mode.\n            if (env.isBlink && !editor.isReadOnly && !draggableElement && !viewDocument.selection.isCollapsed) {\n                const selectedElement = viewDocument.selection.getSelectedElement();\n                if (!selectedElement || !isWidget(selectedElement)) {\n                    draggableElement = viewDocument.selection.editableElement;\n                }\n            }\n            if (draggableElement) {\n                view.change((writer)=>{\n                    writer.setAttribute('draggable', 'true', draggableElement);\n                });\n                // Keep the reference to the model element in case the view element gets removed while dragging.\n                this._draggableElement = editor.editing.mapper.toModelElement(draggableElement);\n            }\n        });\n        // Remove the draggable attribute in case no dragging started (only mousedown + mouseup).\n        this.listenTo(viewDocument, 'mouseup', ()=>{\n            if (!env.isAndroid) {\n                this._clearDraggableAttributesDelayed();\n            }\n        });\n    }\n    /**\n\t * Removes the `draggable` attribute from the element that was used for dragging.\n\t */ _clearDraggableAttributes() {\n        const editing = this.editor.editing;\n        editing.view.change((writer)=>{\n            // Remove 'draggable' attribute.\n            if (this._draggableElement && this._draggableElement.root.rootName != '$graveyard') {\n                writer.removeAttribute('draggable', editing.mapper.toViewElement(this._draggableElement));\n            }\n            this._draggableElement = null;\n        });\n    }\n    /**\n\t * Deletes the dragged content from its original range and clears the dragging state.\n\t *\n\t * @param moved Whether the move succeeded.\n\t */ _finalizeDragging(moved) {\n        const editor = this.editor;\n        const model = editor.model;\n        const dragDropTarget = editor.plugins.get(DragDropTarget);\n        dragDropTarget.removeDropMarker();\n        this._clearDraggableAttributes();\n        if (editor.plugins.has('WidgetToolbarRepository')) {\n            const widgetToolbarRepository = editor.plugins.get('WidgetToolbarRepository');\n            widgetToolbarRepository.clearForceDisabled('dragDrop');\n        }\n        this._draggingUid = '';\n        if (this._previewContainer) {\n            this._previewContainer.remove();\n            this._previewContainer = undefined;\n        }\n        if (!this._draggedRange) {\n            return;\n        }\n        // Delete moved content.\n        if (moved && this.isEnabled) {\n            model.change((writer)=>{\n                const selection = model.createSelection(this._draggedRange);\n                model.deleteContent(selection, {\n                    doNotAutoparagraph: true\n                });\n                // Check result selection if it does not require auto-paragraphing of empty container.\n                const selectionParent = selection.getFirstPosition().parent;\n                if (selectionParent.isEmpty && !model.schema.checkChild(selectionParent, '$text') && model.schema.checkChild(selectionParent, 'paragraph')) {\n                    writer.insertElement('paragraph', selectionParent, 0);\n                }\n            });\n        }\n        this._draggedRange.detach();\n        this._draggedRange = null;\n    }\n    /**\n\t * Sets the dragged source range based on event target and document selection.\n\t */ _prepareDraggedRange(target) {\n        const editor = this.editor;\n        const model = editor.model;\n        const selection = model.document.selection;\n        // Check if this is dragstart over the widget (but not a nested editable).\n        const draggableWidget = target ? findDraggableWidget(target) : null;\n        if (draggableWidget) {\n            const modelElement = editor.editing.mapper.toModelElement(draggableWidget);\n            this._draggedRange = LiveRange.fromRange(model.createRangeOn(modelElement));\n            this._blockMode = model.schema.isBlock(modelElement);\n            // Disable toolbars so they won't obscure the drop area.\n            if (editor.plugins.has('WidgetToolbarRepository')) {\n                const widgetToolbarRepository = editor.plugins.get('WidgetToolbarRepository');\n                widgetToolbarRepository.forceDisabled('dragDrop');\n            }\n            return;\n        }\n        // If this was not a widget we should check if we need to drag some text content.\n        if (selection.isCollapsed && !selection.getFirstPosition().parent.isEmpty) {\n            return;\n        }\n        const blocks = Array.from(selection.getSelectedBlocks());\n        const draggedRange = selection.getFirstRange();\n        if (blocks.length == 0) {\n            this._draggedRange = LiveRange.fromRange(draggedRange);\n            return;\n        }\n        const blockRange = getRangeIncludingFullySelectedParents(model, blocks);\n        if (blocks.length > 1) {\n            this._draggedRange = LiveRange.fromRange(blockRange);\n            this._blockMode = true;\n        // TODO block mode for dragging from outside editor? or inline? or both?\n        } else if (blocks.length == 1) {\n            const touchesBlockEdges = draggedRange.start.isTouching(blockRange.start) && draggedRange.end.isTouching(blockRange.end);\n            this._draggedRange = LiveRange.fromRange(touchesBlockEdges ? blockRange : draggedRange);\n            this._blockMode = touchesBlockEdges;\n        }\n        model.change((writer)=>writer.setSelection(this._draggedRange.toRange()));\n    }\n    /**\n\t * Updates the dragged preview image.\n\t */ _updatePreview({ dataTransfer, domTarget, clientX }) {\n        const view = this.editor.editing.view;\n        const editable = view.document.selection.editableElement;\n        const domEditable = view.domConverter.mapViewToDom(editable);\n        const computedStyle = global.window.getComputedStyle(domEditable);\n        if (!this._previewContainer) {\n            this._previewContainer = createElement(global.document, 'div', {\n                style: 'position: fixed; left: -999999px;'\n            });\n            global.document.body.appendChild(this._previewContainer);\n        } else if (this._previewContainer.firstElementChild) {\n            this._previewContainer.removeChild(this._previewContainer.firstElementChild);\n        }\n        const domRect = new Rect(domEditable);\n        // If domTarget is inside the editable root, browsers will display the preview correctly by themselves.\n        if (domEditable.contains(domTarget)) {\n            return;\n        }\n        const domEditablePaddingLeft = parseFloat(computedStyle.paddingLeft);\n        const preview = createElement(global.document, 'div');\n        preview.className = 'ck ck-content';\n        preview.style.width = computedStyle.width;\n        preview.style.paddingLeft = `${domRect.left - clientX + domEditablePaddingLeft}px`;\n        /**\n\t\t * Set white background in drag and drop preview if iOS.\n\t\t * Check: https://github.com/ckeditor/ckeditor5/issues/15085\n\t\t */ if (env.isiOS) {\n            preview.style.backgroundColor = 'white';\n        }\n        preview.innerHTML = dataTransfer.getData('text/html');\n        dataTransfer.setDragImage(preview, 0, 0);\n        this._previewContainer.appendChild(preview);\n    }\n}\n/**\n * Returns the drop effect that should be a result of dragging the content.\n * This function is handling a quirk when checking the effect in the 'drop' DOM event.\n */ function getFinalDropEffect(dataTransfer) {\n    if (env.isGecko) {\n        return dataTransfer.dropEffect;\n    }\n    return [\n        'all',\n        'copyMove'\n    ].includes(dataTransfer.effectAllowed) ? 'move' : 'copy';\n}\n/**\n * Returns a widget element that should be dragged.\n */ function findDraggableWidget(target) {\n    // This is directly an editable so not a widget for sure.\n    if (target.is('editableElement')) {\n        return null;\n    }\n    // TODO: Let's have a isWidgetSelectionHandleDomElement() helper in ckeditor5-widget utils.\n    if (target.hasClass('ck-widget__selection-handle')) {\n        return target.findAncestor(isWidget);\n    }\n    // Direct hit on a widget.\n    if (isWidget(target)) {\n        return target;\n    }\n    // Find closest ancestor that is either a widget or an editable element...\n    const ancestor = target.findAncestor((node)=>isWidget(node) || node.is('editableElement'));\n    // ...and if closer was the widget then enable dragging it.\n    if (isWidget(ancestor)) {\n        return ancestor;\n    }\n    return null;\n}\n/**\n * Recursively checks if common parent of provided elements doesn't have any other children. If that's the case,\n * it returns range including this parent. Otherwise, it returns only the range from first to last element.\n *\n * Example:\n *\n * <blockQuote>\n *   <paragraph>[Test 1</paragraph>\n *   <paragraph>Test 2</paragraph>\n *   <paragraph>Test 3]</paragraph>\n * <blockQuote>\n *\n * Because all elements inside the `blockQuote` are selected, the range is extended to include the `blockQuote` too.\n * If only first and second paragraphs would be selected, the range would not include it.\n */ function getRangeIncludingFullySelectedParents(model, elements) {\n    const firstElement = elements[0];\n    const lastElement = elements[elements.length - 1];\n    const parent = firstElement.getCommonAncestor(lastElement);\n    const startPosition = model.createPositionBefore(firstElement);\n    const endPosition = model.createPositionAfter(lastElement);\n    if (parent && parent.is('element') && !model.schema.isLimit(parent)) {\n        const parentRange = model.createRangeOn(parent);\n        const touchesStart = startPosition.isTouching(parentRange.start);\n        const touchesEnd = endPosition.isTouching(parentRange.end);\n        if (touchesStart && touchesEnd) {\n            // Selection includes all elements in the parent.\n            return getRangeIncludingFullySelectedParents(model, [\n                parent\n            ]);\n        }\n    }\n    return model.createRange(startPosition, endPosition);\n}\n\n/**\n * The plugin detects the user's intention to paste plain text.\n *\n * For example, it detects the <kbd>Ctrl/Cmd</kbd> + <kbd>Shift</kbd> + <kbd>V</kbd> keystroke.\n */ class PastePlainText extends Plugin {\n    /**\n\t * @inheritDoc\n\t */ static get pluginName() {\n        return 'PastePlainText';\n    }\n    /**\n\t * @inheritDoc\n\t */ static get requires() {\n        return [\n            ClipboardPipeline\n        ];\n    }\n    /**\n\t * @inheritDoc\n\t */ init() {\n        const editor = this.editor;\n        const model = editor.model;\n        const view = editor.editing.view;\n        const selection = model.document.selection;\n        view.addObserver(ClipboardObserver);\n        editor.plugins.get(ClipboardPipeline).on('contentInsertion', (evt, data)=>{\n            if (!isUnformattedInlineContent(data.content, model)) {\n                return;\n            }\n            model.change((writer)=>{\n                // Formatting attributes should be preserved.\n                const textAttributes = Array.from(selection.getAttributes()).filter(([key])=>model.schema.getAttributeProperties(key).isFormatting);\n                if (!selection.isCollapsed) {\n                    model.deleteContent(selection, {\n                        doNotAutoparagraph: true\n                    });\n                }\n                // Also preserve other attributes if they survived the content deletion (because they were not fully selected).\n                // For example linkHref is not a formatting attribute but it should be preserved if pasted text was in the middle\n                // of a link.\n                textAttributes.push(...selection.getAttributes());\n                const range = writer.createRangeIn(data.content);\n                for (const item of range.getItems()){\n                    for (const attribute of textAttributes){\n                        if (model.schema.checkAttribute(item, attribute[0])) {\n                            writer.setAttribute(attribute[0], attribute[1], item);\n                        }\n                    }\n                }\n            });\n        });\n    }\n}\n/**\n * Returns true if specified `documentFragment` represents the unformatted inline content.\n */ function isUnformattedInlineContent(documentFragment, model) {\n    let range = model.createRangeIn(documentFragment);\n    // We consider three scenarios here. The document fragment may include:\n    //\n    // 1. Only text and inline objects. Then it could be unformatted inline content.\n    // 2. Exactly one block element on top-level, eg. <p>Foobar</p> or <h2>Title</h2>.\n    //    In this case, check this element content, it could be treated as unformatted inline content.\n    // 3. More block elements or block objects, then it is not unformatted inline content.\n    //\n    // We will check for scenario 2. specifically, and if it happens, we will unwrap it and follow with the regular algorithm.\n    //\n    if (documentFragment.childCount == 1) {\n        const child = documentFragment.getChild(0);\n        if (child.is('element') && model.schema.isBlock(child) && !model.schema.isObject(child) && !model.schema.isLimit(child)) {\n            // Scenario 2. as described above.\n            range = model.createRangeIn(child);\n        }\n    }\n    for (const child of range.getItems()){\n        if (!model.schema.isInline(child)) {\n            return false;\n        }\n        const attributeKeys = Array.from(child.getAttributeKeys());\n        if (attributeKeys.find((key)=>model.schema.getAttributeProperties(key).isFormatting)) {\n            return false;\n        }\n    }\n    return true;\n}\n\n/**\n * The clipboard feature.\n *\n * Read more about the clipboard integration in the {@glink framework/deep-dive/clipboard clipboard deep-dive} guide.\n *\n * This is a \"glue\" plugin which loads the following plugins:\n * * {@link module:clipboard/clipboardpipeline~ClipboardPipeline}\n * * {@link module:clipboard/dragdrop~DragDrop}\n * * {@link module:clipboard/pasteplaintext~PastePlainText}\n */ class Clipboard extends Plugin {\n    /**\n\t * @inheritDoc\n\t */ static get pluginName() {\n        return 'Clipboard';\n    }\n    /**\n\t * @inheritDoc\n\t */ static get requires() {\n        return [\n            ClipboardMarkersUtils,\n            ClipboardPipeline,\n            DragDrop,\n            PastePlainText\n        ];\n    }\n    /**\n\t * @inheritDoc\n\t */ init() {\n        const editor = this.editor;\n        const t = this.editor.t;\n        // Add the information about the keystrokes to the accessibility database.\n        editor.accessibility.addKeystrokeInfos({\n            keystrokes: [\n                {\n                    label: t('Copy selected content'),\n                    keystroke: 'CTRL+C'\n                },\n                {\n                    label: t('Paste content'),\n                    keystroke: 'CTRL+V'\n                },\n                {\n                    label: t('Paste content as plain text'),\n                    keystroke: 'CTRL+SHIFT+V'\n                }\n            ]\n        });\n    }\n}\n\nexport { Clipboard, ClipboardMarkersUtils, ClipboardPipeline, DragDrop, DragDropBlockToolbar, DragDropTarget, PastePlainText };\n//# sourceMappingURL=index.js.map\n","/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module clipboard/clipboardobserver\n */\n\nimport { EventInfo, getRangeFromMouseEvent } from '@ckeditor/ckeditor5-utils';\n\nimport {\n\tDataTransfer,\n\tDomEventObserver,\n\ttype DomEventData,\n\ttype EditingView,\n\ttype ViewDocumentFragment,\n\ttype ViewElement,\n\ttype ViewRange\n} from '@ckeditor/ckeditor5-engine';\n\n/**\n * Clipboard events observer.\n *\n * Fires the following events:\n *\n * * {@link module:engine/view/document~Document#event:clipboardInput},\n * * {@link module:engine/view/document~Document#event:paste},\n * * {@link module:engine/view/document~Document#event:copy},\n * * {@link module:engine/view/document~Document#event:cut},\n * * {@link module:engine/view/document~Document#event:drop},\n * * {@link module:engine/view/document~Document#event:dragover},\n * * {@link module:engine/view/document~Document#event:dragging},\n * * {@link module:engine/view/document~Document#event:dragstart},\n * * {@link module:engine/view/document~Document#event:dragend},\n * * {@link module:engine/view/document~Document#event:dragenter},\n * * {@link module:engine/view/document~Document#event:dragleave}.\n *\n * **Note**: This observer is not available by default (ckeditor5-engine does not add it on its own).\n * To make it available, it needs to be added to {@link module:engine/view/document~Document} by using\n * the {@link module:engine/view/view~View#addObserver `View#addObserver()`} method. Alternatively, you can load the\n * {@link module:clipboard/clipboard~Clipboard} plugin which adds this observer automatically (because it uses it).\n */\nexport default class ClipboardObserver extends DomEventObserver<\n\t'paste' | 'copy' | 'cut' | 'drop' | 'dragover' | 'dragstart' | 'dragend' | 'dragenter' | 'dragleave',\n\tClipboardEventData\n> {\n\tpublic readonly domEventType = [\n\t\t'paste', 'copy', 'cut', 'drop', 'dragover', 'dragstart', 'dragend', 'dragenter', 'dragleave'\n\t] as const;\n\n\tconstructor( view: EditingView ) {\n\t\tsuper( view );\n\n\t\tconst viewDocument = this.document;\n\n\t\tthis.listenTo<ViewDocumentPasteEvent>( viewDocument, 'paste', handleInput( 'clipboardInput' ), { priority: 'low' } );\n\t\tthis.listenTo<ViewDocumentDropEvent>( viewDocument, 'drop', handleInput( 'clipboardInput' ), { priority: 'low' } );\n\t\tthis.listenTo<ViewDocumentDragOverEvent>( viewDocument, 'dragover', handleInput( 'dragging' ), { priority: 'low' } );\n\n\t\tfunction handleInput( type: 'clipboardInput' | 'dragging' ) {\n\t\t\treturn ( evt: EventInfo, data: DomEventData & ClipboardEventData ) => {\n\t\t\t\tdata.preventDefault();\n\n\t\t\t\tconst targetRanges = data.dropRange ? [ data.dropRange ] : null;\n\t\t\t\tconst eventInfo = new EventInfo( viewDocument, type );\n\n\t\t\t\tviewDocument.fire( eventInfo, {\n\t\t\t\t\tdataTransfer: data.dataTransfer,\n\t\t\t\t\tmethod: evt.name,\n\t\t\t\t\ttargetRanges,\n\t\t\t\t\ttarget: data.target,\n\t\t\t\t\tdomEvent: data.domEvent\n\t\t\t\t} );\n\n\t\t\t\t// If CKEditor handled the input, do not bubble the original event any further.\n\t\t\t\t// This helps external integrations recognize that fact and act accordingly.\n\t\t\t\t// https://github.com/ckeditor/ckeditor5-upload/issues/92\n\t\t\t\tif ( eventInfo.stop.called ) {\n\t\t\t\t\tdata.stopPropagation();\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t}\n\n\tpublic onDomEvent( domEvent: ClipboardEvent | DragEvent ): void {\n\t\tconst nativeDataTransfer = 'clipboardData' in domEvent ? domEvent.clipboardData! : domEvent.dataTransfer!;\n\t\tconst cacheFiles = domEvent.type == 'drop' || domEvent.type == 'paste';\n\n\t\tconst evtData: ClipboardEventData = {\n\t\t\tdataTransfer: new DataTransfer( nativeDataTransfer, { cacheFiles } )\n\t\t};\n\n\t\tif ( domEvent.type == 'drop' || domEvent.type == 'dragover' ) {\n\t\t\tconst domRange = getRangeFromMouseEvent( domEvent as DragEvent );\n\n\t\t\tevtData.dropRange = domRange && this.view.domConverter.domRangeToView( domRange );\n\t\t}\n\n\t\tthis.fire( domEvent.type, domEvent, evtData );\n\t}\n}\n\n/**\n * The data of 'paste', 'copy', 'cut', 'drop', 'dragover', 'dragstart', 'dragend', 'dragenter' and 'dragleave' events.\n */\nexport interface ClipboardEventData {\n\n\t/**\n\t * The data transfer instance.\n\t */\n\tdataTransfer: DataTransfer;\n\n\t/**\n\t * The position into which the content is dropped.\n\t */\n\tdropRange?: ViewRange | null;\n}\n\n/**\n * Fired as a continuation of the {@link module:engine/view/document~Document#event:paste} and\n * {@link module:engine/view/document~Document#event:drop} events.\n *\n * It is a part of the {@glink framework/deep-dive/clipboard#input-pipeline clipboard input pipeline}.\n *\n * This event carries a `dataTransfer` object which comes from the clipboard and whose content should be processed\n * and inserted into the editor.\n *\n * **Note**: This event is not available by default. To make it available, {@link module:clipboard/clipboardobserver~ClipboardObserver}\n * needs to be added to the {@link module:engine/view/document~Document} by using the {@link module:engine/view/view~View#addObserver}\n * method. This is usually done by the {@link module:clipboard/clipboard~Clipboard} plugin, but if for some reason it is not loaded,\n * the observer must be added manually.\n *\n * @see module:clipboard/clipboardobserver~ClipboardObserver\n * @see module:clipboard/clipboard~Clipboard\n *\n * @eventName module:engine/view/document~Document#clipboardInput\n * @param data The event data.\n */\nexport type ViewDocumentClipboardInputEvent = {\n\tname: 'clipboardInput';\n\targs: [ data: DomEventData<ClipboardEvent | DragEvent> & ClipboardInputEventData ];\n};\n\n/**\n * The value of the {@link module:engine/view/document~Document#event:paste},\n * {@link module:engine/view/document~Document#event:copy} and {@link module:engine/view/document~Document#event:cut} events.\n *\n * In order to access the clipboard data, use the `dataTransfer` property.\n */\nexport interface ClipboardInputEventData {\n\n\t/**\n\t * Data transfer instance.\n\t */\n\tdataTransfer: DataTransfer;\n\n\t/**\n\t * Whether the event was triggered by a paste or a drop operation.\n\t */\n\tmethod: 'paste' | 'drop';\n\n\t/**\n\t * The tree view element representing the target.\n\t */\n\ttarget: ViewElement;\n\n\t/**\n\t * The ranges which are the target of the operation (usually – into which the content should be inserted).\n\t * If the clipboard input was triggered by a paste operation, this property is not set. If by a drop operation,\n\t * then it is the drop position (which can be different than the selection at the moment of the drop).\n\t */\n\ttargetRanges: Array<ViewRange> | null;\n\n\t/**\n\t * The content of clipboard input.\n\t */\n\tcontent?: ViewDocumentFragment;\n}\n\n/**\n * Fired when the user drags the content over one of the editing roots of the editor.\n *\n * Introduced by {@link module:clipboard/clipboardobserver~ClipboardObserver}.\n *\n * **Note**: This event is not available by default. To make it available, {@link module:clipboard/clipboardobserver~ClipboardObserver}\n * needs to be added to the {@link module:engine/view/document~Document} by using the {@link module:engine/view/view~View#addObserver}\n * method. This is usually done by the {@link module:clipboard/clipboard~Clipboard} plugin, but if for some reason it is not loaded,\n * the observer must be added manually.\n *\n * @see module:engine/view/document~Document#event:clipboardInput\n *\n * @eventName module:engine/view/document~Document#dragover\n * @param data The event data.\n */\nexport type ViewDocumentDragOverEvent = {\n\tname: 'dragover';\n\targs: [ data: DomEventData<DragEvent> & ClipboardEventData ];\n};\n\n/**\n * Fired when the user dropped the content into one of the editing roots of the editor.\n *\n * Introduced by {@link module:clipboard/clipboardobserver~ClipboardObserver}.\n *\n * **Note**: This event is not available by default. To make it available, {@link module:clipboard/clipboardobserver~ClipboardObserver}\n * needs to be added to the {@link module:engine/view/document~Document} by using the {@link module:engine/view/view~View#addObserver}\n * method. This is usually done by the {@link module:clipboard/clipboard~Clipboard} plugin, but if for some reason it is not loaded,\n * the observer must be added manually.\n *\n * @see module:engine/view/document~Document#event:clipboardInput\n *\n * @eventName module:engine/view/document~Document#drop\n * @param data The event data.\n */\nexport type ViewDocumentDropEvent = {\n\tname: 'drop';\n\targs: [ data: DomEventData<DragEvent> & ClipboardEventData ];\n};\n\n/**\n * Fired when the user pasted the content into one of the editing roots of the editor.\n *\n * Introduced by {@link module:clipboard/clipboardobserver~ClipboardObserver}.\n *\n * **Note**: This event is not available by default. To make it available, {@link module:clipboard/clipboardobserver~ClipboardObserver}\n * needs to be added to the {@link module:engine/view/document~Document} by using the {@link module:engine/view/view~View#addObserver}\n * method. This is usually done by the {@link module:clipboard/clipboard~Clipboard} plugin, but if for some reason it is not loaded,\n * the observer must be added manually.\n *\n * @see module:engine/view/document~Document#event:clipboardInput\n *\n * @eventName module:engine/view/document~Document#paste\n * @param {module:clipboard/clipboardobserver~ClipboardEventData} data The event data.\n */\nexport type ViewDocumentPasteEvent = {\n\tname: 'paste';\n\targs: [ data: DomEventData<ClipboardEvent> & ClipboardEventData ];\n};\n\n/**\n * Fired when the user copied the content from one of the editing roots of the editor.\n *\n * Introduced by {@link module:clipboard/clipboardobserver~ClipboardObserver}.\n *\n * **Note**: This event is not available by default. To make it available, {@link module:clipboard/clipboardobserver~ClipboardObserver}\n * needs to be added to the {@link module:engine/view/document~Document} by using the {@link module:engine/view/view~View#addObserver}\n * method. This is usually done by the {@link module:clipboard/clipboard~Clipboard} plugin, but if for some reason it is not loaded,\n * the observer must be added manually.\n *\n * @see module:clipboard/clipboardobserver~ClipboardObserver\n *\n * @eventName module:engine/view/document~Document#copy\n * @param data The event data.\n */\nexport type ViewDocumentCopyEvent = {\n\tname: 'copy';\n\targs: [ data: DomEventData<ClipboardEvent> & ClipboardEventData ];\n};\n\n/**\n * Fired when the user cut the content from one of the editing roots of the editor.\n *\n * Introduced by {@link module:clipboard/clipboardobserver~ClipboardObserver}.\n *\n * **Note**: This event is not available by default. To make it available, {@link module:clipboard/clipboardobserver~ClipboardObserver}\n * needs to be added to the {@link module:engine/view/document~Document} by using the {@link module:engine/view/view~View#addObserver}\n * method. This is usually done by the {@link module:clipboard/clipboard~Clipboard} plugin, but if for some reason it is not loaded,\n * the observer must be added manually.\n *\n * @see module:clipboard/clipboardobserver~ClipboardObserver\n *\n * @eventName module:engine/view/document~Document#cut\n * @param data The event data.\n */\nexport type ViewDocumentCutEvent = {\n\tname: 'cut';\n\targs: [ data: DomEventData<ClipboardEvent> & ClipboardEventData ];\n};\n\n/**\n * Fired as a continuation of the {@link module:engine/view/document~Document#event:dragover} event.\n *\n * It is a part of the {@glink framework/deep-dive/clipboard#input-pipeline clipboard input pipeline}.\n *\n * This event carries a `dataTransfer` object which comes from the clipboard and whose content should be processed\n * and inserted into the editor.\n *\n * **Note**: This event is not available by default. To make it available, {@link module:clipboard/clipboardobserver~ClipboardObserver}\n * needs to be added to the {@link module:engine/view/document~Document} by using the {@link module:engine/view/view~View#addObserver}\n * method. This is usually done by the {@link module:clipboard/clipboard~Clipboard} plugin, but if for some reason it is not loaded,\n * the observer must be added manually.\n *\n * @see module:clipboard/clipboardobserver~ClipboardObserver\n * @see module:clipboard/clipboard~Clipboard\n *\n * @eventName module:engine/view/document~Document#dragging\n * @param data The event data.\n */\nexport type ViewDocumentDraggingEvent = {\n\tname: 'dragging';\n\targs: [ data: DomEventData<DragEvent> & DraggingEventData ];\n};\n\nexport interface DraggingEventData {\n\n\t/**\n\t * The data transfer instance.\n\t */\n\tdataTransfer: DataTransfer;\n\n\t/**\n\t * Whether the event was triggered by a paste or a drop operation.\n\t */\n\tmethod: 'dragover';\n\n\t/**\n\t * The tree view element representing the target.\n\t */\n\ttarget: Element;\n\n\t/**\n\t * Ranges which are the target of the operation (usually – into which the content should be inserted).\n\t * It is the drop position (which can be different than the selection at the moment of drop).\n\t */\n\ttargetRanges: Array<ViewRange> | null;\n}\n\n/**\n * Fired when the user starts dragging the content in one of the editing roots of the editor.\n *\n * Introduced by {@link module:clipboard/clipboardobserver~ClipboardObserver}.\n *\n * **Note**: This event is not available by default. To make it available, {@link module:clipboard/clipboardobserver~ClipboardObserver}\n * needs to be added to the {@link module:engine/view/document~Document} by using the {@link module:engine/view/view~View#addObserver}\n * method. This is usually done by the {@link module:clipboard/clipboard~Clipboard} plugin, but if for some reason it is not loaded,\n * the observer must be added manually.\n *\n * @see module:engine/view/document~Document#event:clipboardInput\n *\n * @eventName module:engine/view/document~Document#dragstart\n * @param data The event data.\n */\nexport type ViewDocumentDragStartEvent = {\n\tname: 'dragstart';\n\targs: [ data: DomEventData<DragEvent> & ClipboardEventData ];\n};\n\n/**\n * Fired when the user ended dragging the content.\n *\n * Introduced by {@link module:clipboard/clipboardobserver~ClipboardObserver}.\n *\n * **Note**: This event is not available by default. To make it available, {@link module:clipboard/clipboardobserver~ClipboardObserver}\n * needs to be added to the {@link module:engine/view/document~Document} by using the {@link module:engine/view/view~View#addObserver}\n * method. This is usually done by the {@link module:clipboard/clipboard~Clipboard} plugin, but if for some reason it is not loaded,\n * the observer must be added manually.\n *\n * @see module:engine/view/document~Document#event:clipboardInput\n *\n * @eventName module:engine/view/document~Document#dragend\n * @param data The event data.\n */\nexport type ViewDocumentDragEndEvent = {\n\tname: 'dragend';\n\targs: [ data: DomEventData<DragEvent> & ClipboardEventData ];\n};\n\n/**\n * Fired when the user drags the content into one of the editing roots of the editor.\n *\n * Introduced by {@link module:clipboard/clipboardobserver~ClipboardObserver}.\n *\n * **Note**: This event is not available by default. To make it available, {@link module:clipboard/clipboardobserver~ClipboardObserver}\n * needs to be added to the {@link module:engine/view/document~Document} by using the {@link module:engine/view/view~View#addObserver}\n * method. This is usually done by the {@link module:clipboard/clipboard~Clipboard} plugin, but if for some reason it is not loaded,\n * the observer must be added manually.\n *\n * @see module:engine/view/document~Document#event:clipboardInput\n *\n * @eventName module:engine/view/document~Document#dragenter\n * @param data The event data.\n */\nexport type ViewDocumentDragEnterEvent = {\n\tname: 'dragenter';\n\targs: [ data: DomEventData<DragEvent> & ClipboardEventData ];\n};\n\n/**\n * Fired when the user drags the content out of one of the editing roots of the editor.\n *\n * Introduced by {@link module:clipboard/clipboardobserver~ClipboardObserver}.\n *\n * **Note**: This event is not available by default. To make it available, {@link module:clipboard/clipboardobserver~ClipboardObserver}\n * needs to be added to the {@link module:engine/view/document~Document} by using the {@link module:engine/view/view~View#addObserver}\n * method. This is usually done by the {@link module:clipboard/clipboard~Clipboard} plugin, but if for some reason it is not loaded,\n * the observer must be added manually.\n *\n * @see module:engine/view/document~Document#event:clipboardInput\n *\n * @eventName module:engine/view/document~Document#dragleave\n * @param data The event data.\n */\nexport type ViewDocumentDragLeaveEvent = {\n\tname: 'dragleave';\n\targs: [ data: DomEventData<DragEvent> & ClipboardEventData ];\n};\n","/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module clipboard/utils/plaintexttohtml\n */\n\n/**\n * Converts plain text to its HTML-ized version.\n *\n * @param text The plain text to convert.\n * @returns HTML generated from the plain text.\n */\nexport default function plainTextToHtml( text: string ): string {\n\ttext = text\n\t\t// Encode &.\n\t\t.replace( /&/g, '&amp;' )\n\t\t// Encode <>.\n\t\t.replace( /</g, '&lt;' )\n\t\t.replace( />/g, '&gt;' )\n\t\t// Creates a paragraph for each double line break.\n\t\t.replace( /\\r?\\n\\r?\\n/g, '</p><p>' )\n\t\t// Creates a line break for each single line break.\n\t\t.replace( /\\r?\\n/g, '<br>' )\n\t\t// Replace tabs with four spaces.\n\t\t.replace( /\\t/g, '&nbsp;&nbsp;&nbsp;&nbsp;' )\n\t\t// Preserve trailing spaces (only the first and last one – the rest is handled below).\n\t\t.replace( /^\\s/, '&nbsp;' )\n\t\t.replace( /\\s$/, '&nbsp;' )\n\t\t// Preserve other subsequent spaces now.\n\t\t.replace( /\\s\\s/g, ' &nbsp;' );\n\n\tif ( text.includes( '</p><p>' ) || text.includes( '<br>' ) ) {\n\t\t// If we created paragraphs above, add the trailing ones.\n\t\ttext = `<p>${ text }</p>`;\n\t}\n\n\t// TODO:\n\t// * What about '\\nfoo' vs ' foo'?\n\n\treturn text;\n}\n","/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module clipboard/utils/normalizeclipboarddata\n */\n\n/**\n * Removes some popular browser quirks out of the clipboard data (HTML).\n * Removes all HTML comments. These are considered an internal thing and it makes little sense if they leak into the editor data.\n *\n * @param data The HTML data to normalize.\n * @returns Normalized HTML.\n */\nexport default function normalizeClipboardData( data: string ): string {\n\treturn data\n\t\t.replace( /<span(?: class=\"Apple-converted-space\"|)>(\\s+)<\\/span>/g, ( fullMatch, spaces ) => {\n\t\t\t// Handle the most popular and problematic case when even a single space becomes an nbsp;.\n\t\t\t// Decode those to normal spaces. Read more in https://github.com/ckeditor/ckeditor5-clipboard/issues/2.\n\t\t\tif ( spaces.length == 1 ) {\n\t\t\t\treturn ' ';\n\t\t\t}\n\n\t\t\treturn spaces;\n\t\t} )\n\t\t// Remove all HTML comments.\n\t\t.replace( /<!--[\\s\\S]*?-->/g, '' );\n}\n","/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module clipboard/utils/viewtoplaintext\n */\n\nimport type { ViewDocumentFragment, ViewElement, ViewItem } from '@ckeditor/ckeditor5-engine';\n\n// Elements which should not have empty-line padding.\n// Most `view.ContainerElement` want to be separate by new-line, but some are creating one structure\n// together (like `<li>`) so it is better to separate them by only one \"\\n\".\nconst smallPaddingElements = [ 'figcaption', 'li' ];\n\nconst listElements = [ 'ol', 'ul' ];\n\n/**\n * Converts {@link module:engine/view/item~Item view item} and all of its children to plain text.\n *\n * @param viewItem View item to convert.\n * @returns Plain text representation of `viewItem`.\n */\nexport default function viewToPlainText( viewItem: ViewItem | ViewDocumentFragment ): string {\n\tif ( viewItem.is( '$text' ) || viewItem.is( '$textProxy' ) ) {\n\t\treturn viewItem.data;\n\t}\n\n\tif ( viewItem.is( 'element', 'img' ) && viewItem.hasAttribute( 'alt' ) ) {\n\t\treturn viewItem.getAttribute( 'alt' )!;\n\t}\n\n\tif ( viewItem.is( 'element', 'br' ) ) {\n\t\treturn '\\n'; // Convert soft breaks to single line break (#8045).\n\t}\n\n\t/**\n\t * Item is a document fragment, attribute element or container element. It doesn't\n\t * have it's own text value, so we need to convert its children elements.\n\t */\n\n\tlet text = '';\n\tlet prev: ViewElement | null = null;\n\n\tfor ( const child of ( viewItem as ViewElement | ViewDocumentFragment ).getChildren() ) {\n\t\ttext += newLinePadding( child as ViewElement, prev ) + viewToPlainText( child );\n\t\tprev = child as ViewElement;\n\t}\n\n\treturn text;\n}\n\n/**\n * Returns new line padding to prefix the given elements with.\n */\nfunction newLinePadding(\n\telement: ViewElement,\n\tprevious: ViewElement | null\n): string {\n\tif ( !previous ) {\n\t\t// Don't add padding to first elements in a level.\n\t\treturn '';\n\t}\n\n\tif ( element.is( 'element', 'li' ) && !element.isEmpty && element.getChild( 0 )!.is( 'containerElement' ) ) {\n\t\t// Separate document list items with empty lines.\n\t\treturn '\\n\\n';\n\t}\n\n\tif ( listElements.includes( element.name ) && listElements.includes( previous.name ) ) {\n\t\t/**\n\t\t * Because `<ul>` and `<ol>` are AttributeElements, two consecutive lists will not have any padding between\n\t\t * them (see the `if` statement below). To fix this, we need to make an exception for this case.\n\t\t */\n\t\treturn '\\n\\n';\n\t}\n\n\tif ( !element.is( 'containerElement' ) && !previous.is( 'containerElement' ) ) {\n\t\t// Don't add padding between non-container elements.\n\t\treturn '';\n\t}\n\n\tif ( smallPaddingElements.includes( element.name ) || smallPaddingElements.includes( previous.name ) ) {\n\t\t// Add small padding between selected container elements.\n\t\treturn '\\n';\n\t}\n\n\t// Do not add padding around the elements that won't be rendered.\n\tif (\n\t\telement.is( 'element' ) && element.getCustomProperty( 'dataPipeline:transparentRendering' ) ||\n\t\tprevious.is( 'element' ) && previous.getCustomProperty( 'dataPipeline:transparentRendering' )\n\t) {\n\t\treturn '';\n\t}\n\n\t// Add empty lines between container elements.\n\treturn '\\n\\n';\n}\n","/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module clipboard/clipboardmarkersutils\n */\nimport { mapValues } from 'lodash-es';\n\nimport { uid } from '@ckeditor/ckeditor5-utils';\nimport { Plugin, type NonEmptyArray } from '@ckeditor/ckeditor5-core';\n\nimport {\n\tRange,\n\ttype DocumentFragment,\n\ttype Position,\n\ttype Element,\n\ttype DocumentSelection,\n\ttype Selection,\n\ttype Writer,\n\ttype Marker\n} from '@ckeditor/ckeditor5-engine';\n\n/**\n * Part of the clipboard logic. Responsible for collecting markers from selected fragments\n * and restoring them with proper positions in pasted elements.\n *\n * @internal\n */\nexport default class ClipboardMarkersUtils extends Plugin {\n\t/**\n\t * Map of marker names that can be copied.\n\t *\n\t * @internal\n\t */\n\tprivate _markersToCopy: Map<string, ClipboardMarkerConfiguration> = new Map();\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static get pluginName() {\n\t\treturn 'ClipboardMarkersUtils' as const;\n\t}\n\n\t/**\n\t * Registers marker name as copyable in clipboard pipeline.\n\t *\n\t * @param markerName Name of marker that can be copied.\n\t * @param config Configuration that describes what can be performed on specified marker.\n\t * @internal\n\t */\n\tpublic _registerMarkerToCopy( markerName: string, config: ClipboardMarkerConfiguration ): void {\n\t\tthis._markersToCopy.set( markerName, config );\n\t}\n\n\t/**\n\t * Performs copy markers on provided selection and paste it to fragment returned from `getCopiedFragment`.\n\t *\n\t * \t1. Picks all markers in provided selection.\n\t * \t2. Inserts fake markers to document.\n\t * \t3. Gets copied selection fragment from document.\n\t * \t4. Removes fake elements from fragment and document.\n\t * \t5. Inserts markers in the place of removed fake markers.\n\t *\n\t * Due to selection modification, when inserting items, `getCopiedFragment` must *always* operate on `writer.model.document.selection'.\n\t * Do not use any other custom selection object within callback, as this will lead to out-of-bounds exceptions in rare scenarios.\n\t *\n\t * @param action Type of clipboard action.\n\t * @param writer An instance of the model writer.\n\t * @param selection Selection to be checked.\n\t * @param getCopiedFragment\tCallback that performs copy of selection and returns it as fragment.\n\t * @internal\n\t */\n\tpublic _copySelectedFragmentWithMarkers(\n\t\taction: ClipboardMarkerRestrictedAction,\n\t\tselection: Selection | DocumentSelection,\n\t\tgetCopiedFragment: ( writer: Writer ) => DocumentFragment = writer =>\n\t\t\twriter.model.getSelectedContent( writer.model.document.selection )\n\t): DocumentFragment {\n\t\treturn this.editor.model.change( writer => {\n\t\t\tconst oldSelection = writer.model.document.selection;\n\n\t\t\t// In some scenarios, such like in drag & drop, passed `selection` parameter is not actually\n\t\t\t// the same `selection` as the `writer.model.document.selection` which means that `_insertFakeMarkersToSelection`\n\t\t\t// is not affecting passed `selection` `start` and `end` positions but rather modifies `writer.model.document.selection`.\n\t\t\t//\n\t\t\t// It is critical due to fact that when we have selection that starts [ 0, 0 ] and ends at [ 1, 0 ]\n\t\t\t// and after inserting fake marker it will point to such marker instead of new widget position at start: [ 1, 0 ] end: [2, 0 ].\n\t\t\t// `writer.insert` modifies only original `writer.model.document.selection`.\n\t\t\twriter.setSelection( selection );\n\n\t\t\tconst sourceSelectionInsertedMarkers = this._insertFakeMarkersIntoSelection( writer, writer.model.document.selection, action );\n\t\t\tconst fragment = getCopiedFragment( writer );\n\t\t\tconst fakeMarkersRangesInsideRange = this._removeFakeMarkersInsideElement( writer, fragment );\n\n\t\t\t// <fake-marker> [Foo] Bar</fake-marker>\n\t\t\t//      ^                    ^\n\t\t\t// In `_insertFakeMarkersIntoSelection` call we inserted fake marker just before first element.\n\t\t\t// The problem is that the first element can be start position of selection so insertion fake-marker\n\t\t\t// before such element shifts selection (so selection that was at [0, 0] now is at [0, 1]).\n\t\t\t// It means that inserted fake-marker is no longer present inside such selection and is orphaned.\n\t\t\t// This function checks special case of such problem. Markers that are orphaned at the start position\n\t\t\t// and end position in the same time. Basically it means that they overlaps whole element.\n\t\t\tfor ( const [ markerName, elements ] of Object.entries( sourceSelectionInsertedMarkers ) ) {\n\t\t\t\tfakeMarkersRangesInsideRange[ markerName ] ||= writer.createRangeIn( fragment );\n\n\t\t\t\tfor ( const element of elements ) {\n\t\t\t\t\twriter.remove( element );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfragment.markers.clear();\n\n\t\t\tfor ( const [ markerName, range ] of Object.entries( fakeMarkersRangesInsideRange ) ) {\n\t\t\t\tfragment.markers.set( markerName, range );\n\t\t\t}\n\n\t\t\t// Revert back selection to previous one.\n\t\t\twriter.setSelection( oldSelection );\n\n\t\t\treturn fragment;\n\t\t} );\n\t}\n\n\t/**\n\t * Performs paste of markers on already pasted element.\n\t *\n\t * \t1. Inserts fake markers that are present in fragment element (such fragment will be processed in `getPastedDocumentElement`).\n\t * \t2. Calls `getPastedDocumentElement` and gets element that is inserted into root model.\n\t * \t3. Removes all fake markers present in transformed element.\n\t * \t4. Inserts new markers with removed fake markers ranges into pasted fragment.\n\t *\n\t * There are multiple edge cases that have to be considered before calling this function:\n\t *\n\t * \t* `markers` are inserted into the same element that must be later transformed inside `getPastedDocumentElement`.\n\t * \t* Fake marker elements inside `getPastedDocumentElement` can be cloned, but their ranges cannot overlap.\n\t * \t* If `duplicateOnPaste` is `true` in marker config then associated marker ID is regenerated before pasting.\n\t *\n\t * @param action Type of clipboard action.\n\t * @param markers Object that maps marker name to corresponding range.\n\t * @param getPastedDocumentElement Getter used to get target markers element.\n\t * @internal\n\t */\n\tpublic _pasteMarkersIntoTransformedElement(\n\t\tmarkers: Record<string, Range> | Map<string, Range>,\n\t\tgetPastedDocumentElement: ( writer: Writer ) => Element\n\t): Element {\n\t\tconst pasteMarkers = this._getPasteMarkersFromRangeMap( markers );\n\n\t\treturn this.editor.model.change( writer => {\n\t\t\t// Inserts fake markers into source fragment / element that is later transformed inside `getPastedDocumentElement`.\n\t\t\tconst sourceFragmentFakeMarkers = this._insertFakeMarkersElements( writer, pasteMarkers );\n\n\t\t\t// Modifies document fragment (for example, cloning table cells) and then inserts it into the document.\n\t\t\tconst transformedElement = getPastedDocumentElement( writer );\n\n\t\t\t// Removes markers in pasted and transformed fragment in root document.\n\t\t\tconst removedFakeMarkers = this._removeFakeMarkersInsideElement( writer, transformedElement );\n\n\t\t\t// Cleans up fake markers inserted into source fragment (that one before transformation which is not pasted).\n\t\t\tfor ( const element of Object.values( sourceFragmentFakeMarkers ).flat() ) {\n\t\t\t\twriter.remove( element );\n\t\t\t}\n\n\t\t\t// Inserts to root document fake markers.\n\t\t\tfor ( const [ markerName, range ] of Object.entries( removedFakeMarkers ) ) {\n\t\t\t\tif ( !writer.model.markers.has( markerName ) ) {\n\t\t\t\t\twriter.addMarker( markerName, {\n\t\t\t\t\t\tusingOperation: true,\n\t\t\t\t\t\taffectsData: true,\n\t\t\t\t\t\trange\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn transformedElement;\n\t\t} );\n\t}\n\n\t/**\n\t * Pastes document fragment with markers to document.\n\t * If `duplicateOnPaste` is `true` in marker config then associated markers IDs\n\t * are regenerated before pasting to avoid markers duplications in content.\n\t *\n\t * @param fragment Document fragment that should contain already processed by pipeline markers.\n\t * @internal\n\t */\n\tpublic _pasteFragmentWithMarkers( fragment: DocumentFragment ): Range {\n\t\tconst pasteMarkers = this._getPasteMarkersFromRangeMap( fragment.markers );\n\n\t\tfragment.markers.clear();\n\n\t\tfor ( const copyableMarker of pasteMarkers ) {\n\t\t\tfragment.markers.set( copyableMarker.name, copyableMarker.range );\n\t\t}\n\n\t\treturn this.editor.model.insertContent( fragment );\n\t}\n\n\t/**\n\t * In some situations we have to perform copy on selected fragment with certain markers. This function allows to temporarily bypass\n\t * restrictions on markers that we want to copy.\n\t *\n\t * This function executes `executor()` callback. For the duration of the callback, if the clipboard pipeline is used to copy\n\t * content, markers with the specified name will be copied to the clipboard as well.\n\t *\n\t * @param markerName Which markers should be copied.\n\t * @param executor Callback executed.\n\t * @param config Optional configuration flags used to copy (such like partial copy flag).\n\t * @internal\n\t */\n\tpublic _forceMarkersCopy(\n\t\tmarkerName: string,\n\t\texecutor: VoidFunction,\n\t\tconfig: ClipboardMarkerConfiguration = {\n\t\t\tallowedActions: 'all',\n\t\t\tcopyPartiallySelected: true,\n\t\t\tduplicateOnPaste: true\n\t\t}\n\t): void {\n\t\tconst before = this._markersToCopy.get( markerName );\n\n\t\tthis._markersToCopy.set( markerName, config );\n\n\t\texecutor();\n\n\t\tif ( before ) {\n\t\t\tthis._markersToCopy.set( markerName, before );\n\t\t} else {\n\t\t\tthis._markersToCopy.delete( markerName );\n\t\t}\n\t}\n\n\t/**\n\t * Checks if marker can be copied.\n\t *\n\t * @param markerName Name of checked marker.\n\t * @param action Type of clipboard action. If null then checks only if marker is registered as copyable.\n\t * @internal\n\t */\n\tpublic _isMarkerCopyable( markerName: string, action: ClipboardMarkerRestrictedAction | null ): boolean {\n\t\tconst config = this._getMarkerClipboardConfig( markerName );\n\n\t\tif ( !config ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// If there is no action provided then only presence of marker is checked.\n\t\tif ( !action ) {\n\t\t\treturn true;\n\t\t}\n\n\t\tconst { allowedActions } = config;\n\n\t\treturn allowedActions === 'all' || allowedActions.includes( action );\n\t}\n\n\t/**\n\t * Checks if marker has any clipboard copy behavior configuration.\n\t *\n\t * @param markerName Name of checked marker.\n\t */\n\tpublic _hasMarkerConfiguration( markerName: string ): boolean {\n\t\treturn !!this._getMarkerClipboardConfig( markerName );\n\t}\n\n\t/**\n\t * Returns marker's configuration flags passed during registration.\n\t *\n\t * @param markerName Name of marker that should be returned.\n\t * @internal\n\t */\n\tpublic _getMarkerClipboardConfig( markerName: string ): ClipboardMarkerConfiguration | null {\n\t\tconst [ markerNamePrefix ] = markerName.split( ':' );\n\n\t\treturn this._markersToCopy.get( markerNamePrefix ) || null;\n\t}\n\n\t/**\n\t * First step of copying markers. It looks for markers intersecting with given selection and inserts `$marker` elements\n\t * at positions where document markers start or end. This way `$marker` elements can be easily copied together with\n\t * the rest of the content of the selection.\n\t *\n\t * @param writer An instance of the model writer.\n\t * @param selection Selection to be checked.\n\t * @param action Type of clipboard action.\n\t */\n\tprivate _insertFakeMarkersIntoSelection(\n\t\twriter: Writer,\n\t\tselection: Selection | DocumentSelection,\n\t\taction: ClipboardMarkerRestrictedAction\n\t): Record<string, Array<Element>> {\n\t\tconst copyableMarkers = this._getCopyableMarkersFromSelection( writer, selection, action );\n\n\t\treturn this._insertFakeMarkersElements( writer, copyableMarkers );\n\t}\n\n\t/**\n\t * Returns array of markers that can be copied in specified selection.\n\t *\n\t * If marker cannot be copied partially (according to `copyPartiallySelected` configuration flag) and\n\t * is not present entirely in any selection range then it will be skipped.\n\t *\n\t * @param writer An instance of the model writer.\n\t * @param selection  Selection which will be checked.\n\t * @param action Type of clipboard action. If null then checks only if marker is registered as copyable.\n\t */\n\tprivate _getCopyableMarkersFromSelection(\n\t\twriter: Writer,\n\t\tselection: Selection | DocumentSelection,\n\t\taction: ClipboardMarkerRestrictedAction | null\n\t): Array<CopyableMarker> {\n\t\tconst selectionRanges = Array.from( selection.getRanges()! );\n\n\t\t// Picks all markers in provided ranges. Ensures that there are no duplications if\n\t\t// there are multiple ranges that intersects with the same marker.\n\t\tconst markersInRanges = new Set(\n\t\t\tselectionRanges.flatMap(\n\t\t\t\tselectionRange => Array.from( writer.model.markers.getMarkersIntersectingRange( selectionRange ) )\n\t\t\t)\n\t\t);\n\n\t\tconst isSelectionMarkerCopyable = ( marker: Marker ) => {\n\t\t\t// Check if marker exists in configuration and provided action can be performed on it.\n\t\t\tconst isCopyable = this._isMarkerCopyable( marker.name, action );\n\n\t\t\tif ( !isCopyable ) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// Checks if configuration disallows to copy marker only if part of its content is selected.\n\t\t\t//\n\t\t\t// Example:\n\t\t\t// \t<marker-a> Hello [ World ] </marker-a>\n\t\t\t//\t\t\t\t\t\t^ selection\n\t\t\t//\n\t\t\t// In this scenario `marker-a` won't be copied because selection doesn't overlap its content entirely.\n\t\t\tconst { copyPartiallySelected } = this._getMarkerClipboardConfig( marker.name )!;\n\n\t\t\tif ( !copyPartiallySelected ) {\n\t\t\t\tconst markerRange = marker.getRange();\n\n\t\t\t\treturn selectionRanges.some( selectionRange => selectionRange.containsRange( markerRange, true ) );\n\t\t\t}\n\n\t\t\treturn true;\n\t\t};\n\n\t\treturn Array\n\t\t\t.from( markersInRanges )\n\t\t\t.filter( isSelectionMarkerCopyable )\n\t\t\t.map( ( copyableMarker ): CopyableMarker => {\n\t\t\t\t// During `dragstart` event original marker is still present in tree.\n\t\t\t\t// It is removed after the clipboard drop event, so none of the copied markers are inserted at the end.\n\t\t\t\t// It happens because there already markers with specified `marker.name` when clipboard is trying to insert data\n\t\t\t\t// and it aborts inserting.\n\t\t\t\tconst name = action === 'dragstart' ? this._getUniqueMarkerName( copyableMarker.name ) : copyableMarker.name;\n\n\t\t\t\treturn {\n\t\t\t\t\tname,\n\t\t\t\t\trange: copyableMarker.getRange()\n\t\t\t\t};\n\t\t\t} );\n\t}\n\n\t/**\n\t * Picks all markers from markers map that can be pasted.\n\t * If `duplicateOnPaste` is `true`, it regenerates their IDs to ensure uniqueness.\n\t * If marker is not registered, it will be kept in the array anyway.\n\t *\n\t * @param markers Object that maps marker name to corresponding range.\n\t * @param action Type of clipboard action. If null then checks only if marker is registered as copyable.\n\t */\n\tprivate _getPasteMarkersFromRangeMap(\n\t\tmarkers: Record<string, Range> | Map<string, Range>,\n\t\taction: ClipboardMarkerRestrictedAction | null = null\n\t): Array<CopyableMarker> {\n\t\tconst { model } = this.editor;\n\t\tconst entries = markers instanceof Map ? Array.from( markers.entries() ) : Object.entries( markers );\n\n\t\treturn entries.flatMap( ( [ markerName, range ] ): Array<CopyableMarker> => {\n\t\t\tif ( !this._hasMarkerConfiguration( markerName ) ) {\n\t\t\t\treturn [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: markerName,\n\t\t\t\t\t\trange\n\t\t\t\t\t}\n\t\t\t\t];\n\t\t\t}\n\n\t\t\tif ( this._isMarkerCopyable( markerName, action ) ) {\n\t\t\t\tconst copyMarkerConfig = this._getMarkerClipboardConfig( markerName )!;\n\t\t\t\tconst isInGraveyard = model.markers.has( markerName ) &&\n\t\t\t\t\tmodel.markers.get( markerName )!.getRange().root.rootName === '$graveyard';\n\n\t\t\t\tif ( copyMarkerConfig.duplicateOnPaste || isInGraveyard ) {\n\t\t\t\t\tmarkerName = this._getUniqueMarkerName( markerName );\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: markerName,\n\t\t\t\t\t\trange\n\t\t\t\t\t}\n\t\t\t\t];\n\t\t\t}\n\n\t\t\treturn [];\n\t\t} );\n\t}\n\n\t/**\n\t * Inserts specified array of fake markers elements to document and assigns them `type` and `name` attributes.\n\t * Fake markers elements are used to calculate position of markers on pasted fragment that were transformed during\n\t * steps between copy and paste.\n\t *\n\t * @param writer An instance of the model writer.\n\t * @param markers Array of markers that will be inserted.\n\t */\n\tprivate _insertFakeMarkersElements( writer: Writer, markers: Array<CopyableMarker> ): Record<string, Array<Element>> {\n\t\tconst mappedMarkers: Record<string, Array<Element>> = {};\n\t\tconst sortedMarkers = markers\n\t\t\t.flatMap( marker => {\n\t\t\t\tconst { start, end } = marker.range;\n\n\t\t\t\treturn [\n\t\t\t\t\t{ position: start, marker, type: 'start' },\n\t\t\t\t\t{ position: end, marker, type: 'end' }\n\t\t\t\t];\n\t\t\t} )\n\t\t\t// Markers position is sorted backwards to ensure that the insertion of fake markers will not change\n\t\t\t// the position of the next markers.\n\t\t\t.sort( ( { position: posA }, { position: posB } ) => posA.isBefore( posB ) ? 1 : -1 );\n\n\t\tfor ( const { position, marker, type } of sortedMarkers ) {\n\t\t\tconst fakeMarker = writer.createElement( '$marker', {\n\t\t\t\t'data-name': marker.name,\n\t\t\t\t'data-type': type\n\t\t\t} );\n\n\t\t\tif ( !mappedMarkers[ marker.name ] ) {\n\t\t\t\tmappedMarkers[ marker.name ] = [];\n\t\t\t}\n\n\t\t\tmappedMarkers[ marker.name ]!.push( fakeMarker );\n\t\t\twriter.insert( fakeMarker, position );\n\t\t}\n\n\t\treturn mappedMarkers;\n\t}\n\n\t/**\n\t * Removes all `$marker` elements from the given document fragment.\n\t *\n\t * Returns an object where keys are marker names, and values are ranges corresponding to positions\n\t * where `$marker` elements were inserted.\n\t *\n\t * If the document fragment had only one `$marker` element for given marker (start or end) the other boundary is set automatically\n\t * (to the end or start of the document fragment, respectively).\n\t *\n\t * @param writer An instance of the model writer.\n\t * @param rootElement The element to be checked.\n\t */\n\tprivate _removeFakeMarkersInsideElement( writer: Writer, rootElement: Element | DocumentFragment ): Record<string, Range> {\n\t\tconst fakeMarkersElements = this._getAllFakeMarkersFromElement( writer, rootElement );\n\t\tconst fakeMarkersRanges = fakeMarkersElements.reduce<Record<string, FakeMarkerRangeConstruct>>( ( acc, fakeMarker ) => {\n\t\t\tconst position = fakeMarker.markerElement && writer.createPositionBefore( fakeMarker.markerElement );\n\t\t\tlet prevFakeMarker: FakeMarkerRangeConstruct | null = acc[ fakeMarker.name ];\n\n\t\t\t// Handle scenario when tables clone cells with the same fake node. Example:\n\t\t\t//\n\t\t\t// <cell><fake-marker-a></cell> <cell><fake-marker-a></cell> <cell><fake-marker-a></cell>\n\t\t\t//                                          ^ cloned                    ^ cloned\n\t\t\t//\n\t\t\t// The easiest way to bypass this issue is to rename already existing in map nodes and\n\t\t\t// set them new unique name.\n\t\t\tlet skipAssign = false;\n\n\t\t\tif ( prevFakeMarker && prevFakeMarker.start && prevFakeMarker.end ) {\n\t\t\t\tconst config = this._getMarkerClipboardConfig( fakeMarker.name )!;\n\n\t\t\t\tif ( config.duplicateOnPaste ) {\n\t\t\t\t\tacc[ this._getUniqueMarkerName( fakeMarker.name ) ] = acc[ fakeMarker.name ];\n\t\t\t\t} else {\n\t\t\t\t\tskipAssign = true;\n\t\t\t\t}\n\n\t\t\t\tprevFakeMarker = null;\n\t\t\t}\n\n\t\t\tif ( !skipAssign ) {\n\t\t\t\tacc[ fakeMarker.name ] = {\n\t\t\t\t\t...prevFakeMarker!,\n\t\t\t\t\t[ fakeMarker.type ]: position\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tif ( fakeMarker.markerElement ) {\n\t\t\t\twriter.remove( fakeMarker.markerElement );\n\t\t\t}\n\n\t\t\treturn acc;\n\t\t}, {} );\n\n\t\t// We cannot construct ranges directly in previous reduce because element ranges can overlap.\n\t\t// In other words lets assume we have such scenario:\n\n\t\t// <fake-marker-start /> <paragraph /> <fake-marker-2-start /> <fake-marker-end /> <fake-marker-2-end />\n\t\t//\n\t\t// We have to remove `fake-marker-start` firstly and then remove `fake-marker-2-start`.\n\t\t// Removal of `fake-marker-2-start` affects `fake-marker-end` position so we cannot create\n\t\t// connection between `fake-marker-start` and `fake-marker-end` without iterating whole set firstly.\n\t\treturn mapValues(\n\t\t\tfakeMarkersRanges,\n\t\t\trange => new Range(\n\t\t\t\trange.start || writer.createPositionFromPath( rootElement, [ 0 ] ),\n\t\t\t\trange.end || writer.createPositionAt( rootElement, 'end' )\n\t\t\t)\n\t\t);\n\t}\n\n\t/**\n\t * Returns array that contains list of fake markers with corresponding `$marker` elements.\n\t *\n\t * For each marker, there can be two `$marker` elements or only one (if the document fragment contained\n\t * only the beginning or only the end of a marker).\n\t *\n\t * @param writer An instance of the model writer.\n\t * @param rootElement The element to be checked.\n\t */\n\tprivate _getAllFakeMarkersFromElement( writer: Writer, rootElement: Element | DocumentFragment ): Array<FakeMarker> {\n\t\tconst foundFakeMarkers = Array\n\t\t\t.from( writer.createRangeIn( rootElement ) )\n\t\t\t.flatMap( ( { item } ): Array<FakeMarker> => {\n\t\t\t\tif ( !item.is( 'element', '$marker' ) ) {\n\t\t\t\t\treturn [];\n\t\t\t\t}\n\n\t\t\t\tconst name = item.getAttribute( 'data-name' ) as string;\n\t\t\t\tconst type = item.getAttribute( 'data-type' ) as 'start' | 'end';\n\n\t\t\t\treturn [\n\t\t\t\t\t{\n\t\t\t\t\t\tmarkerElement: item,\n\t\t\t\t\t\tname,\n\t\t\t\t\t\ttype\n\t\t\t\t\t}\n\t\t\t\t];\n\t\t\t} );\n\n\t\tconst prependFakeMarkers: Array<FakeMarker> = [];\n\t\tconst appendFakeMarkers: Array<FakeMarker> = [];\n\n\t\tfor ( const fakeMarker of foundFakeMarkers ) {\n\t\t\tif ( fakeMarker.type === 'end' ) {\n\t\t\t\t// <fake-marker> [ phrase</fake-marker> phrase ]\n\t\t\t\t//   ^\n\t\t\t\t// Handle case when marker is just before start of selection.\n\t\t\t\t// Only end marker is inside selection.\n\n\t\t\t\tconst hasMatchingStartMarker = foundFakeMarkers.some(\n\t\t\t\t\totherFakeMarker => otherFakeMarker.name === fakeMarker.name && otherFakeMarker.type === 'start'\n\t\t\t\t);\n\n\t\t\t\tif ( !hasMatchingStartMarker ) {\n\t\t\t\t\tprependFakeMarkers.push( {\n\t\t\t\t\t\tmarkerElement: null,\n\t\t\t\t\t\tname: fakeMarker.name,\n\t\t\t\t\t\ttype: 'start'\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( fakeMarker.type === 'start' ) {\n\t\t\t\t// [<fake-marker>phrase]</fake-marker>\n\t\t\t\t//                           ^\n\t\t\t\t// Handle case when fake marker is after selection.\n\t\t\t\t// Only start marker is inside selection.\n\n\t\t\t\tconst hasMatchingEndMarker = foundFakeMarkers.some(\n\t\t\t\t\totherFakeMarker => otherFakeMarker.name === fakeMarker.name && otherFakeMarker.type === 'end'\n\t\t\t\t);\n\n\t\t\t\tif ( !hasMatchingEndMarker ) {\n\t\t\t\t\tappendFakeMarkers.unshift( {\n\t\t\t\t\t\tmarkerElement: null,\n\t\t\t\t\t\tname: fakeMarker.name,\n\t\t\t\t\t\ttype: 'end'\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn [\n\t\t\t...prependFakeMarkers,\n\t\t\t...foundFakeMarkers,\n\t\t\t...appendFakeMarkers\n\t\t];\n\t}\n\n\t/**\n\t * When copy of markers occurs we have to make sure that pasted markers have different names\n\t * than source markers. This functions helps with assigning unique part to marker name to\n\t * prevent duplicated markers error.\n\t *\n\t * @param name Name of marker\n\t */\n\tprivate _getUniqueMarkerName( name: string ) {\n\t\tconst parts = name.split( ':' );\n\t\tconst newId = uid().substring( 1, 6 );\n\n\t\t// It looks like the marker already is UID marker so in this scenario just swap\n\t\t// last part of marker name and assign new UID.\n\t\t//\n\t\t// example: comment:{ threadId }:{ id } => comment:{ threadId }:{ newId }\n\t\tif ( parts.length === 3 ) {\n\t\t\treturn `${ parts.slice( 0, 2 ).join( ':' ) }:${ newId }`;\n\t\t}\n\n\t\t// Assign new segment to marker name with id.\n\t\t//\n\t\t// example: comment => comment:{ newId }\n\t\treturn `${ parts.join( ':' ) }:${ newId }`;\n\t}\n}\n\n/**\n * Specifies which action is performed during clipboard event.\n *\n * @internal\n */\nexport type ClipboardMarkerRestrictedAction = 'copy' | 'cut' | 'dragstart';\n\n/**\n * Specifies behavior of markers during clipboard actions.\n *\n * @internal\n */\nexport type ClipboardMarkerConfiguration = {\n\tallowedActions: NonEmptyArray<ClipboardMarkerRestrictedAction> | 'all';\n\n\t// If `false`, do not copy marker when only part of its content is selected.\n\tcopyPartiallySelected?: boolean;\n\n\t// If `true` then every marker that is present in clipboard document fragment element obtain new generated ID just before pasting.\n\t// It means that it is possible to perform copy once and then paste it multiple times wherever we want.\n\t//\n\t// On the other hand if it has false value the marker will be not pasted because ID already exists in the document.\n\t//\n\t// This flag is ignored in `cut` and `dragstart` actions because source marker is moved to graveyard and\n\t// it is still present in `model.markers`. Pasted marker id must be regenerated to avoid duplications.\n\tduplicateOnPaste?: boolean;\n};\n\n/**\n * Marker descriptor type used to revert markers into tree node.\n *\n * @internal\n */\ntype FakeMarker = {\n\ttype: 'start' | 'end';\n\tname: string;\n\tmarkerElement: Element | null;\n};\n\n/**\n * Range used to construct real markers from fake markers. Every property must be optional\n * because real marker range is constructed using iteration over markers that represent `start`\n * and then `end`. Usually `start` is set firstly then after few nodes `end` is set.\n *\n * @internal\n */\ntype FakeMarkerRangeConstruct = {\n\tstart: Position | null;\n\tend: Position | null;\n};\n\n/**\n * Structure used to describe marker that has to be copied.\n *\n * @internal\n */\ntype CopyableMarker = {\n\tname: string;\n\trange: Range;\n};\n","/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module clipboard/clipboardpipeline\n */\n\nimport { Plugin } from '@ckeditor/ckeditor5-core';\n\nimport { EventInfo } from '@ckeditor/ckeditor5-utils';\n\nimport type {\n\tDataTransfer,\n\tDocumentFragment,\n\tDomEventData,\n\tRange,\n\tViewDocumentFragment,\n\tViewRange,\n\tSelection,\n\tDocumentSelection\n} from '@ckeditor/ckeditor5-engine';\n\nimport ClipboardObserver, {\n\ttype ClipboardEventData,\n\ttype ViewDocumentCopyEvent,\n\ttype ViewDocumentCutEvent,\n\ttype ViewDocumentClipboardInputEvent\n} from './clipboardobserver.js';\n\nimport plainTextToHtml from './utils/plaintexttohtml.js';\nimport normalizeClipboardHtml from './utils/normalizeclipboarddata.js';\nimport viewToPlainText from './utils/viewtoplaintext.js';\nimport ClipboardMarkersUtils from './clipboardmarkersutils.js';\n\n// Input pipeline events overview:\n//\n//              ┌──────────────────────┐          ┌──────────────────────┐\n//              │     view.Document    │          │     view.Document    │\n//              │         paste        │          │         drop         │\n//              └───────────┬──────────┘          └───────────┬──────────┘\n//                          │                                 │\n//                          └────────────────┌────────────────┘\n//                                           │\n//                                 ┌─────────V────────┐\n//                                 │   view.Document  │   Retrieves text/html or text/plain from data.dataTransfer\n//                                 │  clipboardInput  │   and processes it to view.DocumentFragment.\n//                                 └─────────┬────────┘\n//                                           │\n//                               ┌───────────V───────────┐\n//                               │   ClipboardPipeline   │   Converts view.DocumentFragment to model.DocumentFragment.\n//                               │  inputTransformation  │\n//                               └───────────┬───────────┘\n//                                           │\n//                                ┌──────────V──────────┐\n//                                │  ClipboardPipeline  │   Calls model.insertContent().\n//                                │   contentInsertion  │\n//                                └─────────────────────┘\n//\n//\n// Output pipeline events overview:\n//\n//              ┌──────────────────────┐          ┌──────────────────────┐\n//              │     view.Document    │          │     view.Document    │   Retrieves the selected model.DocumentFragment\n//              │         copy         │          │          cut         │   and fires the `outputTransformation` event.\n//              └───────────┬──────────┘          └───────────┬──────────┘\n//                          │                                 │\n//                          └────────────────┌────────────────┘\n//                                           │\n//                               ┌───────────V───────────┐\n//                               │   ClipboardPipeline   │   Processes model.DocumentFragment and converts it to\n//                               │  outputTransformation │   view.DocumentFragment.\n//                               └───────────┬───────────┘\n//                                           │\n//                                 ┌─────────V────────┐\n//                                 │   view.Document  │   Processes view.DocumentFragment to text/html and text/plain\n//                                 │  clipboardOutput │   and stores the results in data.dataTransfer.\n//                                 └──────────────────┘\n//\n\n/**\n * The clipboard pipeline feature. It is responsible for intercepting the `paste` and `drop` events and\n * passing the pasted content through a series of events in order to insert it into the editor's content.\n * It also handles the `cut` and `copy` events to fill the native clipboard with the serialized editor's data.\n *\n * # Input pipeline\n *\n * The behavior of the default handlers (all at a `low` priority):\n *\n * ## Event: `paste` or `drop`\n *\n * 1. Translates the event data.\n * 2. Fires the {@link module:engine/view/document~Document#event:clipboardInput `view.Document#clipboardInput`} event.\n *\n * ## Event: `view.Document#clipboardInput`\n *\n * 1. If the `data.content` event field is already set (by some listener on a higher priority), it takes this content and fires the event\n *    from the last point.\n * 2. Otherwise, it retrieves `text/html` or `text/plain` from `data.dataTransfer`.\n * 3. Normalizes the raw data by applying simple filters on string data.\n * 4. Processes the raw data to {@link module:engine/view/documentfragment~DocumentFragment `view.DocumentFragment`} with the\n *    {@link module:engine/controller/datacontroller~DataController#htmlProcessor `DataController#htmlProcessor`}.\n * 5. Fires the {@link module:clipboard/clipboardpipeline~ClipboardPipeline#event:inputTransformation\n *   `ClipboardPipeline#inputTransformation`} event with the view document fragment in the `data.content` event field.\n *\n * ## Event: `ClipboardPipeline#inputTransformation`\n *\n * 1. Converts {@link module:engine/view/documentfragment~DocumentFragment `view.DocumentFragment`} from the `data.content` field to\n *    {@link module:engine/model/documentfragment~DocumentFragment `model.DocumentFragment`}.\n * 2. Fires the {@link module:clipboard/clipboardpipeline~ClipboardPipeline#event:contentInsertion `ClipboardPipeline#contentInsertion`}\n *    event with the model document fragment in the `data.content` event field.\n *    **Note**: The `ClipboardPipeline#contentInsertion` event is fired within a model change block to allow other handlers\n *    to run in the same block without post-fixers called in between (i.e., the selection post-fixer).\n *\n * ## Event: `ClipboardPipeline#contentInsertion`\n *\n * 1. Calls {@link module:engine/model/model~Model#insertContent `model.insertContent()`} to insert `data.content`\n *    at the current selection position.\n *\n * # Output pipeline\n *\n * The behavior of the default handlers (all at a `low` priority):\n *\n * ## Event: `copy`, `cut` or `dragstart`\n *\n * 1. Retrieves the selected {@link module:engine/model/documentfragment~DocumentFragment `model.DocumentFragment`} by calling\n *    {@link module:engine/model/model~Model#getSelectedContent `model#getSelectedContent()`}.\n * 2. Converts the model document fragment to {@link module:engine/view/documentfragment~DocumentFragment `view.DocumentFragment`}.\n * 3. Fires the {@link module:engine/view/document~Document#event:clipboardOutput `view.Document#clipboardOutput`} event\n *    with the view document fragment in the `data.content` event field.\n *\n * ## Event: `view.Document#clipboardOutput`\n *\n * 1. Processes `data.content` to HTML and plain text with the\n *    {@link module:engine/controller/datacontroller~DataController#htmlProcessor `DataController#htmlProcessor`}.\n * 2. Updates the `data.dataTransfer` data for `text/html` and `text/plain` with the processed data.\n * 3. For the `cut` method, calls {@link module:engine/model/model~Model#deleteContent `model.deleteContent()`}\n *    on the current selection.\n *\n * Read more about the clipboard integration in the {@glink framework/deep-dive/clipboard clipboard deep-dive} guide.\n */\nexport default class ClipboardPipeline extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static get pluginName() {\n\t\treturn 'ClipboardPipeline' as const;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static get requires() {\n\t\treturn [ ClipboardMarkersUtils ] as const;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic init(): void {\n\t\tconst editor = this.editor;\n\t\tconst view = editor.editing.view;\n\n\t\tview.addObserver( ClipboardObserver );\n\n\t\tthis._setupPasteDrop();\n\t\tthis._setupCopyCut();\n\t}\n\n\t/**\n\t * Fires Clipboard `'outputTransformation'` event for given parameters.\n\t *\n\t * @internal\n\t */\n\tpublic _fireOutputTransformationEvent(\n\t\tdataTransfer: DataTransfer,\n\t\tselection: Selection | DocumentSelection,\n\t\tmethod: 'copy' | 'cut' | 'dragstart'\n\t): void {\n\t\tconst clipboardMarkersUtils: ClipboardMarkersUtils = this.editor.plugins.get( 'ClipboardMarkersUtils' );\n\n\t\tthis.editor.model.enqueueChange( { isUndoable: method === 'cut' }, () => {\n\t\t\tconst documentFragment = clipboardMarkersUtils._copySelectedFragmentWithMarkers( method, selection );\n\n\t\t\tthis.fire<ClipboardOutputTransformationEvent>( 'outputTransformation', {\n\t\t\t\tdataTransfer,\n\t\t\t\tcontent: documentFragment,\n\t\t\t\tmethod\n\t\t\t} );\n\t\t} );\n\t}\n\n\t/**\n\t * The clipboard paste pipeline.\n\t */\n\tprivate _setupPasteDrop(): void {\n\t\tconst editor = this.editor;\n\t\tconst model = editor.model;\n\t\tconst view = editor.editing.view;\n\t\tconst viewDocument = view.document;\n\t\tconst clipboardMarkersUtils: ClipboardMarkersUtils = this.editor.plugins.get( 'ClipboardMarkersUtils' );\n\n\t\t// Pasting is disabled when selection is in non-editable place.\n\t\t// Dropping is disabled in drag and drop handler.\n\t\tthis.listenTo<ViewDocumentClipboardInputEvent>( viewDocument, 'clipboardInput', ( evt, data ) => {\n\t\t\tif ( data.method == 'paste' && !editor.model.canEditAt( editor.model.document.selection ) ) {\n\t\t\t\tevt.stop();\n\t\t\t}\n\t\t}, { priority: 'highest' } );\n\n\t\tthis.listenTo<ViewDocumentClipboardInputEvent>( viewDocument, 'clipboardInput', ( evt, data ) => {\n\t\t\tconst dataTransfer = data.dataTransfer;\n\t\t\tlet content: ViewDocumentFragment;\n\n\t\t\t// Some feature could already inject content in the higher priority event handler (i.e., codeBlock).\n\t\t\tif ( data.content ) {\n\t\t\t\tcontent = data.content;\n\t\t\t} else {\n\t\t\t\tlet contentData = '';\n\n\t\t\t\tif ( dataTransfer.getData( 'text/html' ) ) {\n\t\t\t\t\tcontentData = normalizeClipboardHtml( dataTransfer.getData( 'text/html' ) );\n\t\t\t\t} else if ( dataTransfer.getData( 'text/plain' ) ) {\n\t\t\t\t\tcontentData = plainTextToHtml( dataTransfer.getData( 'text/plain' ) );\n\t\t\t\t}\n\n\t\t\t\tcontent = this.editor.data.htmlProcessor.toView( contentData );\n\t\t\t}\n\n\t\t\tconst eventInfo = new EventInfo( this, 'inputTransformation' );\n\n\t\t\tthis.fire<ClipboardInputTransformationEvent>( eventInfo, {\n\t\t\t\tcontent,\n\t\t\t\tdataTransfer,\n\t\t\t\ttargetRanges: data.targetRanges,\n\t\t\t\tmethod: data.method as 'paste' | 'drop'\n\t\t\t} );\n\n\t\t\t// If CKEditor handled the input, do not bubble the original event any further.\n\t\t\t// This helps external integrations recognize this fact and act accordingly.\n\t\t\t// https://github.com/ckeditor/ckeditor5-upload/issues/92\n\t\t\tif ( eventInfo.stop.called ) {\n\t\t\t\tevt.stop();\n\t\t\t}\n\n\t\t\tview.scrollToTheSelection();\n\t\t}, { priority: 'low' } );\n\n\t\tthis.listenTo<ClipboardInputTransformationEvent>( this, 'inputTransformation', ( evt, data ) => {\n\t\t\tif ( data.content.isEmpty ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst dataController = this.editor.data;\n\n\t\t\t// Convert the pasted content into a model document fragment.\n\t\t\t// The conversion is contextual, but in this case an \"all allowed\" context is needed\n\t\t\t// and for that we use the $clipboardHolder item.\n\t\t\tconst modelFragment = dataController.toModel( data.content, '$clipboardHolder' );\n\n\t\t\tif ( modelFragment.childCount == 0 ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tevt.stop();\n\n\t\t\t// Fire content insertion event in a single change block to allow other handlers to run in the same block\n\t\t\t// without post-fixers called in between (i.e., the selection post-fixer).\n\t\t\tmodel.change( () => {\n\t\t\t\tthis.fire<ClipboardContentInsertionEvent>( 'contentInsertion', {\n\t\t\t\t\tcontent: modelFragment,\n\t\t\t\t\tmethod: data.method,\n\t\t\t\t\tdataTransfer: data.dataTransfer,\n\t\t\t\t\ttargetRanges: data.targetRanges\n\t\t\t\t} );\n\t\t\t} );\n\t\t}, { priority: 'low' } );\n\n\t\tthis.listenTo<ClipboardContentInsertionEvent>( this, 'contentInsertion', ( evt, data ) => {\n\t\t\tdata.resultRange = clipboardMarkersUtils._pasteFragmentWithMarkers( data.content );\n\t\t}, { priority: 'low' } );\n\t}\n\n\t/**\n\t * The clipboard copy/cut pipeline.\n\t */\n\tprivate _setupCopyCut(): void {\n\t\tconst editor = this.editor;\n\t\tconst modelDocument = editor.model.document;\n\t\tconst view = editor.editing.view;\n\t\tconst viewDocument = view.document;\n\n\t\tconst onCopyCut = ( evt: EventInfo<'copy' | 'cut'>, data: DomEventData<ClipboardEvent> & ClipboardEventData ) => {\n\t\t\tconst dataTransfer = data.dataTransfer;\n\n\t\t\tdata.preventDefault();\n\n\t\t\tthis._fireOutputTransformationEvent( dataTransfer, modelDocument.selection, evt.name );\n\t\t};\n\n\t\tthis.listenTo<ViewDocumentCopyEvent>( viewDocument, 'copy', onCopyCut, { priority: 'low' } );\n\t\tthis.listenTo<ViewDocumentCutEvent>( viewDocument, 'cut', ( evt, data ) => {\n\t\t\t// Cutting is disabled when selection is in non-editable place.\n\t\t\t// See: https://github.com/ckeditor/ckeditor5-clipboard/issues/26.\n\t\t\tif ( !editor.model.canEditAt( editor.model.document.selection ) ) {\n\t\t\t\tdata.preventDefault();\n\t\t\t} else {\n\t\t\t\tonCopyCut( evt, data );\n\t\t\t}\n\t\t}, { priority: 'low' } );\n\n\t\tthis.listenTo<ClipboardOutputTransformationEvent>( this, 'outputTransformation', ( evt, data ) => {\n\t\t\tconst content = editor.data.toView( data.content );\n\n\t\t\tviewDocument.fire<ViewDocumentClipboardOutputEvent>( 'clipboardOutput', {\n\t\t\t\tdataTransfer: data.dataTransfer,\n\t\t\t\tcontent,\n\t\t\t\tmethod: data.method\n\t\t\t} );\n\t\t}, { priority: 'low' } );\n\n\t\tthis.listenTo<ViewDocumentClipboardOutputEvent>( viewDocument, 'clipboardOutput', ( evt, data ) => {\n\t\t\tif ( !data.content.isEmpty ) {\n\t\t\t\tdata.dataTransfer.setData( 'text/html', this.editor.data.htmlProcessor.toData( data.content ) );\n\t\t\t\tdata.dataTransfer.setData( 'text/plain', viewToPlainText( data.content ) );\n\t\t\t}\n\n\t\t\tif ( data.method == 'cut' ) {\n\t\t\t\teditor.model.deleteContent( modelDocument.selection );\n\t\t\t}\n\t\t}, { priority: 'low' } );\n\t}\n}\n\n/**\n * Fired with the `content`, `dataTransfer`, `method`, and `targetRanges` properties:\n *\n * * The `content` which comes from the clipboard (it was pasted or dropped) should be processed in order to be inserted into the editor.\n * * The `dataTransfer` object is available in case the transformation functions need access to the raw clipboard data.\n * * The `method` indicates the original DOM event (for example `'drop'` or `'paste'`).\n * * The `targetRanges` property is an array of view ranges (it is available only for `'drop'`).\n *\n * It is a part of the {@glink framework/deep-dive/clipboard#input-pipeline clipboard input pipeline}.\n *\n * **Note**: You should not stop this event if you want to change the input data. You should modify the `content` property instead.\n *\n * @see module:clipboard/clipboardobserver~ClipboardObserver\n * @see module:clipboard/clipboardpipeline~ClipboardPipeline\n *\n * @eventName ~ClipboardPipeline#inputTransformation\n * @param data The event data.\n */\nexport type ClipboardInputTransformationEvent = {\n\tname: 'inputTransformation';\n\targs: [ data: ClipboardInputTransformationData ];\n};\n\n/**\n * The data of 'inputTransformation' event.\n */\nexport interface ClipboardInputTransformationData {\n\n\t/**\n\t * The event data.\n\t * The content to be inserted into the editor. It can be modified by event listeners. Read more about the clipboard pipelines in\n\t * the {@glink framework/deep-dive/clipboard clipboard deep-dive} guide.\n\t */\n\tcontent: ViewDocumentFragment;\n\n\t/**\n\t * The data transfer instance.\n\t */\n\tdataTransfer: DataTransfer;\n\n\t/**\n\t * The target drop ranges.\n\t */\n\ttargetRanges: Array<ViewRange> | null;\n\n\t/**\n\t * Whether the event was triggered by a paste or a drop operation.\n\t */\n\tmethod: 'paste' | 'drop';\n}\n\n/**\n * Fired with the `content`, `dataTransfer`, `method`, and `targetRanges` properties:\n *\n * * The `content` which comes from the clipboard (was pasted or dropped) should be processed in order to be inserted into the editor.\n * * The `dataTransfer` object is available in case the transformation functions need access to the raw clipboard data.\n * * The `method` indicates the original DOM event (for example `'drop'` or `'paste'`).\n * * The `targetRanges` property is an array of view ranges (it is available only for `'drop'`).\n *\n * Event handlers can modify the content according to the final insertion position.\n *\n * It is a part of the {@glink framework/deep-dive/clipboard#input-pipeline clipboard input pipeline}.\n *\n * **Note**: You should not stop this event if you want to change the input data. You should modify the `content` property instead.\n *\n * @see module:clipboard/clipboardobserver~ClipboardObserver\n * @see module:clipboard/clipboardpipeline~ClipboardPipeline\n * @see module:clipboard/clipboardpipeline~ClipboardPipeline#event:inputTransformation\n *\n * @eventName ~ClipboardPipeline#contentInsertion\n * @param data The event data.\n */\nexport type ClipboardContentInsertionEvent = {\n\tname: 'contentInsertion';\n\targs: [ data: ClipboardContentInsertionData ];\n};\n\n/**\n * The data of 'contentInsertion' event.\n */\nexport interface ClipboardContentInsertionData {\n\n\t/**\n\t * The content to be inserted into the editor.\n\t * Read more about the clipboard pipelines in the {@glink framework/deep-dive/clipboard clipboard deep-dive} guide.\n\t */\n\tcontent: DocumentFragment;\n\n\t/**\n\t * Whether the event was triggered by a paste or a drop operation.\n\t */\n\tmethod: 'paste' | 'drop';\n\n\t/**\n\t * The data transfer instance.\n\t */\n\n\tdataTransfer: DataTransfer;\n\n\t/**\n\t * The target drop ranges.\n\t */\n\ttargetRanges: Array<ViewRange> | null;\n\n\t/**\n\t * The result of the `model.insertContent()` call\n\t * (inserted by the event handler at a low priority).\n\t */\n\tresultRange?: Range;\n}\n\n/**\n * Fired on {@link module:engine/view/document~Document#event:copy} and {@link module:engine/view/document~Document#event:cut}\n * with a copy of the selected content. The content can be processed before it ends up in the clipboard.\n *\n * It is a part of the {@glink framework/deep-dive/clipboard#output-pipeline clipboard output pipeline}.\n *\n * @see module:clipboard/clipboardobserver~ClipboardObserver\n * @see module:clipboard/clipboardpipeline~ClipboardPipeline\n *\n * @eventName module:engine/view/document~Document#clipboardOutput\n * @param data The event data.\n */\nexport type ViewDocumentClipboardOutputEvent = {\n\tname: 'clipboardOutput';\n\targs: [ data: ViewDocumentClipboardOutputEventData ];\n};\n\n/**\n * The value of the 'clipboardOutput' event.\n */\nexport interface ViewDocumentClipboardOutputEventData {\n\n\t/**\n\t * The data transfer instance.\n\t *\n\t * @readonly\n\t */\n\tdataTransfer: DataTransfer;\n\n\t/**\n\t * Content to be put into the clipboard. It can be modified by the event listeners.\n\t * Read more about the clipboard pipelines in the {@glink framework/deep-dive/clipboard clipboard deep-dive} guide.\n\t */\n\tcontent: ViewDocumentFragment;\n\n\t/**\n\t * Whether the event was triggered by a copy or cut operation.\n\t */\n\tmethod: 'copy' | 'cut' | 'dragstart';\n}\n\n/**\n * Fired on {@link module:engine/view/document~Document#event:copy}, {@link module:engine/view/document~Document#event:cut}\n * and {@link module:engine/view/document~Document#event:dragstart}. The content can be processed before it ends up in the clipboard.\n *\n * It is a part of the {@glink framework/deep-dive/clipboard#output-pipeline clipboard output pipeline}.\n *\n * @eventName ~ClipboardPipeline#outputTransformation\n * @param data The event data.\n */\nexport type ClipboardOutputTransformationEvent = {\n\tname: 'outputTransformation';\n\targs: [ data: ClipboardOutputTransformationData ];\n};\n\n/**\n * The value of the 'outputTransformation' event.\n */\nexport interface ClipboardOutputTransformationData {\n\n\t/**\n\t * The data transfer instance.\n\t *\n\t * @readonly\n\t */\n\tdataTransfer: DataTransfer;\n\n\t/**\n\t * Content to be put into the clipboard. It can be modified by the event listeners.\n\t * Read more about the clipboard pipelines in the {@glink framework/deep-dive/clipboard clipboard deep-dive} guide.\n\t */\n\tcontent: DocumentFragment;\n\n\t/**\n\t * Whether the event was triggered by a copy or cut operation.\n\t */\n\tmethod: 'copy' | 'cut' | 'dragstart';\n}\n","/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module clipboard/lineview\n */\n\n/* istanbul ignore file -- @preserve */\n\nimport { View } from '@ckeditor/ckeditor5-ui';\nimport { toUnit } from '@ckeditor/ckeditor5-utils';\n\nconst toPx = /* #__PURE__ */ toUnit( 'px' );\n\n/**\n * The horizontal drop target line view.\n */\nexport default class LineView extends View {\n\t/**\n\t * Controls whether the line is visible.\n\t *\n\t * @observable\n\t * @default false\n\t */\n\tdeclare public isVisible: boolean;\n\n\t/**\n\t * Controls the line position x coordinate.\n\t *\n\t * @observable\n\t * @default null\n\t */\n\tdeclare public left: number | null;\n\n\t/**\n\t * Controls the line width.\n\t *\n\t * @observable\n\t * @default null\n\t */\n\tdeclare public width: number | null;\n\n\t/**\n\t * Controls the line position y coordinate.\n\t *\n\t * @observable\n\t * @default null\n\t */\n\tdeclare public top: number | null;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor() {\n\t\tsuper();\n\n\t\tconst bind = this.bindTemplate;\n\n\t\tthis.set( {\n\t\t\tisVisible: false,\n\t\t\tleft: null,\n\t\t\ttop: null,\n\t\t\twidth: null\n\t\t} );\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'div',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck',\n\t\t\t\t\t'ck-clipboard-drop-target-line',\n\t\t\t\t\tbind.if( 'isVisible', 'ck-hidden', value => !value )\n\t\t\t\t],\n\t\t\t\tstyle: {\n\t\t\t\t\tleft: bind.to( 'left', left => toPx( left! ) ),\n\t\t\t\t\ttop: bind.to( 'top', top => toPx( top! ) ),\n\t\t\t\t\twidth: bind.to( 'width', width => toPx( width! ) )\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module clipboard/dragdroptarget\n */\n\nimport {\n\tPlugin,\n\ttype Editor\n} from '@ckeditor/ckeditor5-core';\n\nimport {\n\ttype Node,\n\ttype Element,\n\ttype Range,\n\ttype LiveRange,\n\ttype ViewElement,\n\ttype ViewRange,\n\ttype DowncastWriter,\n\ttype ViewRootEditableElement\n} from '@ckeditor/ckeditor5-engine';\n\nimport {\n\tglobal,\n\tRect,\n\tDomEmitterMixin,\n\tdelay,\n\tResizeObserver,\n\ttype DomEmitter\n} from '@ckeditor/ckeditor5-utils';\n\nimport LineView from './lineview.js';\n\nimport { throttle } from 'lodash-es';\n\n/**\n * Part of the Drag and Drop handling. Responsible for finding and displaying the drop target.\n *\n * @internal\n */\nexport default class DragDropTarget extends Plugin {\n\t/**\n\t * A delayed callback removing the drop marker.\n\t *\n\t * @internal\n\t */\n\tpublic readonly removeDropMarkerDelayed = delay( () => this.removeDropMarker(), 40 );\n\n\t/**\n\t * A throttled callback updating the drop marker.\n\t */\n\tprivate readonly _updateDropMarkerThrottled = throttle(\n\t\ttargetRange => this._updateDropMarker( targetRange ), 40\n\t);\n\n\t/**\n\t * A throttled callback reconverting the drop parker.\n\t */\n\tprivate readonly _reconvertMarkerThrottled = throttle( () => {\n\t\tif ( this.editor.model.markers.has( 'drop-target' ) ) {\n\t\t\tthis.editor.editing.reconvertMarker( 'drop-target' );\n\t\t}\n\t}, 0 );\n\n\t/**\n\t * The horizontal drop target line view.\n\t */\n\tprivate _dropTargetLineView = new LineView();\n\n\t/**\n\t * DOM Emitter.\n\t */\n\tprivate _domEmitter: DomEmitter = new ( DomEmitterMixin() )();\n\n\t/**\n\t * Map of document scrollable elements.\n\t */\n\tprivate _scrollables = new Map<string, {\n\t\tdomElement: HTMLElement;\n\t\tresizeObserver: ResizeObserver;\n\t}>();\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static get pluginName() {\n\t\treturn 'DragDropTarget' as const;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic init(): void {\n\t\tthis._setupDropMarker();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic override destroy(): void {\n\t\tthis._domEmitter.stopListening();\n\n\t\tfor ( const { resizeObserver } of this._scrollables.values() ) {\n\t\t\tresizeObserver.destroy();\n\t\t}\n\n\t\tthis._updateDropMarkerThrottled.cancel();\n\t\tthis.removeDropMarkerDelayed.cancel();\n\t\tthis._reconvertMarkerThrottled.cancel();\n\n\t\treturn super.destroy();\n\t}\n\n\t/**\n\t * Finds the drop target range and updates the drop marker.\n\t *\n\t * @internal\n\t */\n\tpublic updateDropMarker(\n\t\ttargetViewElement: ViewElement,\n\t\ttargetViewRanges: Array<ViewRange> | null,\n\t\tclientX: number,\n\t\tclientY: number,\n\t\tblockMode: boolean,\n\t\tdraggedRange: LiveRange | null\n\t): void {\n\t\tthis.removeDropMarkerDelayed.cancel();\n\n\t\tconst targetRange = findDropTargetRange(\n\t\t\tthis.editor,\n\t\t\ttargetViewElement,\n\t\t\ttargetViewRanges,\n\t\t\tclientX,\n\t\t\tclientY,\n\t\t\tblockMode,\n\t\t\tdraggedRange\n\t\t);\n\n\t\t/* istanbul ignore next -- @preserve */\n\t\tif ( !targetRange ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( draggedRange && draggedRange.containsRange( targetRange ) ) {\n\t\t\t// Target range is inside the dragged range.\n\t\t\treturn this.removeDropMarker();\n\t\t}\n\n\t\tthis._updateDropMarkerThrottled( targetRange );\n\t}\n\n\t/**\n\t * Finds the final drop target range.\n\t *\n\t * @internal\n\t */\n\tpublic getFinalDropRange(\n\t\ttargetViewElement: ViewElement,\n\t\ttargetViewRanges: Array<ViewRange> | null,\n\t\tclientX: number,\n\t\tclientY: number,\n\t\tblockMode: boolean,\n\t\tdraggedRange: LiveRange | null\n\t): Range | null {\n\t\tconst targetRange = findDropTargetRange(\n\t\t\tthis.editor,\n\t\t\ttargetViewElement,\n\t\t\ttargetViewRanges,\n\t\t\tclientX,\n\t\t\tclientY,\n\t\t\tblockMode,\n\t\t\tdraggedRange\n\t\t);\n\t\t// The dragging markers must be removed after searching for the target range because sometimes\n\t\t// the target lands on the marker itself.\n\t\tthis.removeDropMarker();\n\n\t\treturn targetRange;\n\t}\n\n\t/**\n\t * Removes the drop target marker.\n\t *\n\t * @internal\n\t */\n\tpublic removeDropMarker(): void {\n\t\tconst model = this.editor.model;\n\n\t\tthis.removeDropMarkerDelayed.cancel();\n\t\tthis._updateDropMarkerThrottled.cancel();\n\t\tthis._dropTargetLineView.isVisible = false;\n\n\t\tif ( model.markers.has( 'drop-target' ) ) {\n\t\t\tmodel.change( writer => {\n\t\t\t\twriter.removeMarker( 'drop-target' );\n\t\t\t} );\n\t\t}\n\t}\n\n\t/**\n\t * Creates downcast conversion for the drop target marker.\n\t */\n\tprivate _setupDropMarker(): void {\n\t\tconst editor = this.editor;\n\n\t\teditor.ui.view.body.add( this._dropTargetLineView );\n\n\t\t// Drop marker conversion for hovering over widgets.\n\t\teditor.conversion.for( 'editingDowncast' ).markerToHighlight( {\n\t\t\tmodel: 'drop-target',\n\t\t\tview: {\n\t\t\t\tclasses: [ 'ck-clipboard-drop-target-range' ]\n\t\t\t}\n\t\t} );\n\n\t\t// Drop marker conversion for in text and block drop target.\n\t\teditor.conversion.for( 'editingDowncast' ).markerToElement( {\n\t\t\tmodel: 'drop-target',\n\t\t\tview: ( data, { writer } ) => {\n\t\t\t\t// Inline drop.\n\t\t\t\tif ( editor.model.schema.checkChild( data.markerRange.start, '$text' ) ) {\n\t\t\t\t\tthis._dropTargetLineView.isVisible = false;\n\n\t\t\t\t\treturn this._createDropTargetPosition( writer );\n\t\t\t\t}\n\t\t\t\t// Block drop.\n\t\t\t\telse {\n\t\t\t\t\tif ( data.markerRange.isCollapsed ) {\n\t\t\t\t\t\tthis._updateDropTargetLine( data.markerRange );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._dropTargetLineView.isVisible = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * Updates the drop target marker to the provided range.\n\t *\n\t * @param targetRange The range to set the marker to.\n\t */\n\tprivate _updateDropMarker( targetRange: Range ): void {\n\t\tconst editor = this.editor;\n\t\tconst markers = editor.model.markers;\n\n\t\teditor.model.change( writer => {\n\t\t\tif ( markers.has( 'drop-target' ) ) {\n\t\t\t\tif ( !markers.get( 'drop-target' )!.getRange().isEqual( targetRange ) ) {\n\t\t\t\t\twriter.updateMarker( 'drop-target', { range: targetRange } );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\twriter.addMarker( 'drop-target', {\n\t\t\t\t\trange: targetRange,\n\t\t\t\t\tusingOperation: false,\n\t\t\t\t\taffectsData: false\n\t\t\t\t} );\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * Creates the UI element for vertical (in-line) drop target.\n\t */\n\tprivate _createDropTargetPosition( writer: DowncastWriter ): ViewElement {\n\t\treturn writer.createUIElement( 'span', { class: 'ck ck-clipboard-drop-target-position' }, function( domDocument ) {\n\t\t\tconst domElement = this.toDomElement( domDocument );\n\n\t\t\t// Using word joiner to make this marker as high as text and also making text not break on marker.\n\t\t\tdomElement.append( '\\u2060', domDocument.createElement( 'span' ), '\\u2060' );\n\n\t\t\treturn domElement;\n\t\t} );\n\t}\n\n\t/**\n\t * Updates the horizontal drop target line.\n\t */\n\tprivate _updateDropTargetLine( range: Range ): void {\n\t\tconst editing = this.editor.editing;\n\n\t\tconst nodeBefore = range.start.nodeBefore as Element | null;\n\t\tconst nodeAfter = range.start.nodeAfter as Element | null;\n\t\tconst nodeParent = range.start.parent as Element;\n\n\t\tconst viewElementBefore = nodeBefore ? editing.mapper.toViewElement( nodeBefore ) : null;\n\t\tconst domElementBefore = viewElementBefore ? editing.view.domConverter.mapViewToDom( viewElementBefore ) : null;\n\n\t\tconst viewElementAfter = nodeAfter ? editing.mapper.toViewElement( nodeAfter )! : null;\n\t\tconst domElementAfter = viewElementAfter ? editing.view.domConverter.mapViewToDom( viewElementAfter ) : null;\n\n\t\tconst viewElementParent = editing.mapper.toViewElement( nodeParent )!;\n\n\t\tif ( !viewElementParent ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst domElementParent = editing.view.domConverter.mapViewToDom( viewElementParent )!;\n\n\t\tconst domScrollableRect = this._getScrollableRect( viewElementParent );\n\n\t\tconst { scrollX, scrollY } = global.window;\n\t\tconst rectBefore = domElementBefore ? new Rect( domElementBefore ) : null;\n\t\tconst rectAfter = domElementAfter ? new Rect( domElementAfter ) : null;\n\t\tconst rectParent = new Rect( domElementParent ).excludeScrollbarsAndBorders();\n\n\t\tconst above = rectBefore ? rectBefore.bottom : rectParent.top;\n\t\tconst below = rectAfter ? rectAfter.top : rectParent.bottom;\n\n\t\tconst parentStyle = global.window.getComputedStyle( domElementParent );\n\t\tconst top = ( above <= below ? ( above + below ) / 2 : below );\n\n\t\tif ( domScrollableRect.top < top && top < domScrollableRect.bottom ) {\n\t\t\tconst left = rectParent.left + parseFloat( parentStyle.paddingLeft );\n\t\t\tconst right = rectParent.right - parseFloat( parentStyle.paddingRight );\n\n\t\t\tconst leftClamped = Math.max( left + scrollX, domScrollableRect.left );\n\t\t\tconst rightClamped = Math.min( right + scrollX, domScrollableRect.right );\n\n\t\t\tthis._dropTargetLineView.set( {\n\t\t\t\tisVisible: true,\n\t\t\t\tleft: leftClamped,\n\t\t\t\ttop: top + scrollY,\n\t\t\t\twidth: rightClamped - leftClamped\n\t\t\t} );\n\t\t} else {\n\t\t\tthis._dropTargetLineView.isVisible = false;\n\t\t}\n\t}\n\n\t/**\n\t * Finds the closest scrollable element rect for the given view element.\n\t */\n\tprivate _getScrollableRect( viewElement: ViewElement ): Rect {\n\t\tconst rootName = ( viewElement.root as ViewRootEditableElement ).rootName;\n\n\t\tlet domScrollable;\n\n\t\tif ( this._scrollables.has( rootName ) ) {\n\t\t\tdomScrollable = this._scrollables.get( rootName )!.domElement;\n\t\t} else {\n\t\t\tconst domElement = this.editor.editing.view.domConverter.mapViewToDom( viewElement )!;\n\n\t\t\tdomScrollable = findScrollableElement( domElement );\n\n\t\t\tthis._domEmitter.listenTo( domScrollable, 'scroll', this._reconvertMarkerThrottled, { usePassive: true } );\n\t\t\tconst resizeObserver = new ResizeObserver( domScrollable, this._reconvertMarkerThrottled );\n\n\t\t\tthis._scrollables.set( rootName, {\n\t\t\t\tdomElement: domScrollable,\n\t\t\t\tresizeObserver\n\t\t\t} );\n\t\t}\n\n\t\treturn new Rect( domScrollable ).excludeScrollbarsAndBorders();\n\t}\n}\n\n/**\n * Returns fixed selection range for given position and target element.\n */\nfunction findDropTargetRange(\n\teditor: Editor,\n\ttargetViewElement: ViewElement,\n\ttargetViewRanges: Array<ViewRange> | null,\n\tclientX: number,\n\tclientY: number,\n\tblockMode: boolean,\n\tdraggedRange: LiveRange | null\n): Range | null {\n\tconst model = editor.model;\n\tconst mapper = editor.editing.mapper;\n\n\tconst targetModelElement = getClosestMappedModelElement( editor, targetViewElement );\n\tlet modelElement = targetModelElement;\n\n\twhile ( modelElement ) {\n\t\tif ( !blockMode ) {\n\t\t\tif ( model.schema.checkChild( modelElement, '$text' ) ) {\n\t\t\t\tif ( targetViewRanges ) {\n\t\t\t\t\tconst targetViewPosition = targetViewRanges[ 0 ].start;\n\t\t\t\t\tconst targetModelPosition = mapper.toModelPosition( targetViewPosition );\n\t\t\t\t\tconst canDropOnPosition = !draggedRange || Array\n\t\t\t\t\t\t.from( draggedRange.getItems() )\n\t\t\t\t\t\t.every( item => model.schema.checkChild( targetModelPosition, item as Node ) );\n\n\t\t\t\t\tif ( canDropOnPosition ) {\n\t\t\t\t\t\tif ( model.schema.checkChild( targetModelPosition, '$text' ) ) {\n\t\t\t\t\t\t\treturn model.createRange( targetModelPosition );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ( targetViewPosition ) {\n\t\t\t\t\t\t// This is the case of dropping inside a span wrapper of an inline image.\n\t\t\t\t\t\t\treturn findDropTargetRangeForElement(\n\t\t\t\t\t\t\t\teditor,\n\t\t\t\t\t\t\t\tgetClosestMappedModelElement( editor, targetViewPosition.parent as ViewElement ),\n\t\t\t\t\t\t\t\tclientX,\n\t\t\t\t\t\t\t\tclientY\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if ( model.schema.isInline( modelElement ) ) {\n\t\t\t\treturn findDropTargetRangeForElement( editor, modelElement, clientX, clientY );\n\t\t\t}\n\t\t}\n\n\t\tif ( model.schema.isBlock( modelElement ) ) {\n\t\t\treturn findDropTargetRangeForElement( editor, modelElement, clientX, clientY );\n\t\t}\n\t\telse if ( model.schema.checkChild( modelElement, '$block' ) ) {\n\t\t\tconst childNodes = Array.from( modelElement.getChildren() )\n\t\t\t\t.filter( ( node ): node is Element => node.is( 'element' ) && !shouldIgnoreElement( editor, node ) );\n\n\t\t\tlet startIndex = 0;\n\t\t\tlet endIndex = childNodes.length;\n\n\t\t\tif ( endIndex == 0 ) {\n\t\t\t\treturn model.createRange( model.createPositionAt( modelElement as Element, 'end' ) );\n\t\t\t}\n\n\t\t\twhile ( startIndex < endIndex - 1 ) {\n\t\t\t\tconst middleIndex = Math.floor( ( startIndex + endIndex ) / 2 );\n\t\t\t\tconst side = findElementSide( editor, childNodes[ middleIndex ], clientX, clientY );\n\n\t\t\t\tif ( side == 'before' ) {\n\t\t\t\t\tendIndex = middleIndex;\n\t\t\t\t} else {\n\t\t\t\t\tstartIndex = middleIndex;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn findDropTargetRangeForElement( editor, childNodes[ startIndex ], clientX, clientY );\n\t\t}\n\n\t\tmodelElement = modelElement.parent as Element;\n\t}\n\n\treturn null;\n}\n\n/**\n * Returns true for elements which should be ignored.\n */\nfunction shouldIgnoreElement( editor: Editor, modelElement: Element ): boolean {\n\tconst mapper = editor.editing.mapper;\n\tconst domConverter = editor.editing.view.domConverter;\n\n\tconst viewElement = mapper.toViewElement( modelElement )!;\n\n\tif ( !viewElement ) {\n\t\treturn true;\n\t}\n\n\tconst domElement = domConverter.mapViewToDom( viewElement )!;\n\n\treturn global.window.getComputedStyle( domElement ).float != 'none';\n}\n\n/**\n * Returns target range relative to the given element.\n */\nfunction findDropTargetRangeForElement( editor: Editor, modelElement: Element, clientX: number, clientY: number ): Range {\n\tconst model = editor.model;\n\n\treturn model.createRange(\n\t\tmodel.createPositionAt(\n\t\t\tmodelElement as Element,\n\t\t\tfindElementSide( editor, modelElement, clientX, clientY )\n\t\t)\n\t);\n}\n\n/**\n * Resolves whether drop marker should be before or after the given element.\n */\nfunction findElementSide( editor: Editor, modelElement: Element, clientX: number, clientY: number ): 'before' | 'after' {\n\tconst mapper = editor.editing.mapper;\n\tconst domConverter = editor.editing.view.domConverter;\n\n\tconst viewElement = mapper.toViewElement( modelElement )!;\n\tconst domElement = domConverter.mapViewToDom( viewElement )!;\n\tconst rect = new Rect( domElement );\n\n\tif ( editor.model.schema.isInline( modelElement ) ) {\n\t\treturn clientX < ( rect.left + rect.right ) / 2 ? 'before' : 'after';\n\t} else {\n\t\treturn clientY < ( rect.top + rect.bottom ) / 2 ? 'before' : 'after';\n\t}\n}\n\n/**\n * Returns the closest model element for the specified view element.\n */\nfunction getClosestMappedModelElement( editor: Editor, element: ViewElement ): Element {\n\tconst mapper = editor.editing.mapper;\n\tconst view = editor.editing.view;\n\n\tconst targetModelElement = mapper.toModelElement( element );\n\n\tif ( targetModelElement ) {\n\t\treturn targetModelElement;\n\t}\n\n\t// Find mapped ancestor if the target is inside not mapped element (for example inline code element).\n\tconst viewPosition = view.createPositionBefore( element );\n\tconst viewElement = mapper.findMappedViewAncestor( viewPosition );\n\n\treturn mapper.toModelElement( viewElement )!;\n}\n\n/**\n * Returns the closest scrollable ancestor DOM element.\n *\n * It is assumed that `domNode` is attached to the document.\n */\nfunction findScrollableElement( domNode: HTMLElement ): HTMLElement {\n\tlet domElement: HTMLElement = domNode;\n\n\tdo {\n\t\tdomElement = domElement.parentElement!;\n\n\t\tconst overflow = global.window.getComputedStyle( domElement ).overflowY;\n\n\t\tif ( overflow == 'auto' || overflow == 'scroll' ) {\n\t\t\tbreak;\n\t\t}\n\t} while ( domElement.tagName != 'BODY' );\n\n\treturn domElement;\n}\n","/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module clipboard/dragdropblocktoolbar\n */\n\nimport { Plugin } from '@ckeditor/ckeditor5-core';\n\nimport {\n\tenv,\n\tglobal,\n\tDomEmitterMixin,\n\ttype ObservableChangeEvent,\n\ttype DomEmitter\n} from '@ckeditor/ckeditor5-utils';\n\nimport type { BlockToolbar } from '@ckeditor/ckeditor5-ui';\n\nimport ClipboardObserver from './clipboardobserver.js';\n\n/**\n * Integration of a block Drag and Drop support with the block toolbar.\n *\n * @internal\n */\nexport default class DragDropBlockToolbar extends Plugin {\n\t/**\n\t * Whether current dragging is started by block toolbar button dragging.\n\t */\n\tprivate _isBlockDragging = false;\n\n\t/**\n\t * DOM Emitter.\n\t */\n\tprivate _domEmitter: DomEmitter = new ( DomEmitterMixin() )();\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static get pluginName() {\n\t\treturn 'DragDropBlockToolbar' as const;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic init(): void {\n\t\tconst editor = this.editor;\n\n\t\tthis.listenTo<ObservableChangeEvent<boolean>>( editor, 'change:isReadOnly', ( evt, name, isReadOnly ) => {\n\t\t\tif ( isReadOnly ) {\n\t\t\t\tthis.forceDisabled( 'readOnlyMode' );\n\t\t\t\tthis._isBlockDragging = false;\n\t\t\t} else {\n\t\t\t\tthis.clearForceDisabled( 'readOnlyMode' );\n\t\t\t}\n\t\t} );\n\n\t\tif ( env.isAndroid ) {\n\t\t\tthis.forceDisabled( 'noAndroidSupport' );\n\t\t}\n\n\t\tif ( editor.plugins.has( 'BlockToolbar' ) ) {\n\t\t\tconst blockToolbar: BlockToolbar = editor.plugins.get( 'BlockToolbar' );\n\t\t\tconst element = blockToolbar.buttonView.element!;\n\n\t\t\tthis._domEmitter.listenTo( element, 'dragstart', ( evt, data ) => this._handleBlockDragStart( data ) );\n\t\t\tthis._domEmitter.listenTo( global.document, 'dragover', ( evt, data ) => this._handleBlockDragging( data ) );\n\t\t\tthis._domEmitter.listenTo( global.document, 'drop', ( evt, data ) => this._handleBlockDragging( data ) );\n\t\t\tthis._domEmitter.listenTo( global.document, 'dragend', () => this._handleBlockDragEnd(), { useCapture: true } );\n\n\t\t\tif ( this.isEnabled ) {\n\t\t\t\telement.setAttribute( 'draggable', 'true' );\n\t\t\t}\n\n\t\t\tthis.on<ObservableChangeEvent<boolean>>( 'change:isEnabled', ( evt, name, isEnabled ) => {\n\t\t\t\telement.setAttribute( 'draggable', isEnabled ? 'true' : 'false' );\n\t\t\t} );\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic override destroy(): void {\n\t\tthis._domEmitter.stopListening();\n\n\t\treturn super.destroy();\n\t}\n\n\t/**\n\t * The `dragstart` event handler.\n\t */\n\tprivate _handleBlockDragStart( domEvent: DragEvent ): void {\n\t\tif ( !this.isEnabled ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst model = this.editor.model;\n\t\tconst selection = model.document.selection;\n\t\tconst view = this.editor.editing.view;\n\n\t\tconst blocks = Array.from( selection.getSelectedBlocks() );\n\t\tconst draggedRange = model.createRange(\n\t\t\tmodel.createPositionBefore( blocks[ 0 ] ),\n\t\t\tmodel.createPositionAfter( blocks[ blocks.length - 1 ] )\n\t\t);\n\n\t\tmodel.change( writer => writer.setSelection( draggedRange ) );\n\n\t\tthis._isBlockDragging = true;\n\n\t\tview.focus();\n\t\tview.getObserver( ClipboardObserver )!.onDomEvent( domEvent );\n\t}\n\n\t/**\n\t * The `dragover` and `drop` event handler.\n\t */\n\tprivate _handleBlockDragging( domEvent: DragEvent ): void {\n\t\tif ( !this.isEnabled || !this._isBlockDragging ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst clientX = domEvent.clientX + ( this.editor.locale.contentLanguageDirection == 'ltr' ? 100 : -100 );\n\t\tconst clientY = domEvent.clientY;\n\t\tconst target = document.elementFromPoint( clientX, clientY );\n\t\tconst view = this.editor.editing.view;\n\n\t\tif ( !target || !target.closest( '.ck-editor__editable' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tview.getObserver( ClipboardObserver )!.onDomEvent( {\n\t\t\t...domEvent,\n\t\t\ttype: domEvent.type,\n\t\t\tdataTransfer: domEvent.dataTransfer,\n\t\t\ttarget,\n\t\t\tclientX,\n\t\t\tclientY,\n\t\t\tpreventDefault: () => domEvent.preventDefault(),\n\t\t\tstopPropagation: () => domEvent.stopPropagation()\n\t\t} );\n\t}\n\n\t/**\n\t * The `dragend` event handler.\n\t */\n\tprivate _handleBlockDragEnd(): void {\n\t\tthis._isBlockDragging = false;\n\t}\n}\n","/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module clipboard/dragdrop\n */\n\nimport { Plugin } from '@ckeditor/ckeditor5-core';\n\nimport {\n\tLiveRange,\n\tMouseObserver,\n\ttype DataTransfer,\n\ttype Element,\n\ttype Model,\n\ttype Range,\n\ttype Position,\n\ttype ViewDocumentMouseDownEvent,\n\ttype ViewDocumentMouseUpEvent,\n\ttype ViewElement,\n\ttype DomEventData\n} from '@ckeditor/ckeditor5-engine';\n\nimport {\n\tWidget,\n\tisWidget,\n\ttype WidgetToolbarRepository\n} from '@ckeditor/ckeditor5-widget';\n\nimport {\n\tenv,\n\tuid,\n\tglobal,\n\tcreateElement,\n\tDomEmitterMixin,\n\tdelay,\n\tRect,\n\ttype DelayedFunc,\n\ttype ObservableChangeEvent,\n\ttype DomEmitter\n} from '@ckeditor/ckeditor5-utils';\n\nimport ClipboardPipeline, {\n\ttype ClipboardContentInsertionEvent\n} from './clipboardpipeline.js';\n\nimport ClipboardObserver, {\n\ttype ViewDocumentDragEndEvent,\n\ttype ViewDocumentDragEnterEvent,\n\ttype ViewDocumentDraggingEvent,\n\ttype ViewDocumentDragLeaveEvent,\n\ttype ViewDocumentDragStartEvent,\n\ttype ViewDocumentClipboardInputEvent\n} from './clipboardobserver.js';\n\nimport DragDropTarget from './dragdroptarget.js';\nimport DragDropBlockToolbar from './dragdropblocktoolbar.js';\n\nimport '../theme/clipboard.css';\n\n// Drag and drop events overview:\n//\n//                ┌──────────────────┐\n//                │     mousedown    │   Sets the draggable attribute.\n//                └─────────┬────────┘\n//                          │\n//                          └─────────────────────┐\n//                          │                     │\n//                          │           ┌─────────V────────┐\n//                          │           │      mouseup     │   Dragging did not start, removes the draggable attribute.\n//                          │           └──────────────────┘\n//                          │\n//                ┌─────────V────────┐   Retrieves the selected model.DocumentFragment\n//                │     dragstart    │   and converts it to view.DocumentFragment.\n//                └─────────┬────────┘\n//                          │\n//                ┌─────────V────────┐   Processes view.DocumentFragment to text/html and text/plain\n//                │  clipboardOutput │   and stores the results in data.dataTransfer.\n//                └─────────┬────────┘\n//                          │\n//                          │   DOM dragover\n//                          ┌────────────┐\n//                          │            │\n//                ┌─────────V────────┐   │\n//                │     dragging     │   │   Updates the drop target marker.\n//                └─────────┬────────┘   │\n//                          │            │\n//            ┌─────────────└────────────┘\n//            │             │            │\n//            │   ┌─────────V────────┐   │\n//            │   │     dragleave    │   │   Removes the drop target marker.\n//            │   └─────────┬────────┘   │\n//            │             │            │\n//        ┌───│─────────────┘            │\n//        │   │             │            │\n//        │   │   ┌─────────V────────┐   │\n//        │   │   │     dragenter    │   │   Focuses the editor view.\n//        │   │   └─────────┬────────┘   │\n//        │   │             │            │\n//        │   │             └────────────┘\n//        │   │\n//        │   └─────────────┐\n//        │   │             │\n//        │   │   ┌─────────V────────┐\n//        └───┐   │       drop       │   (The default handler of the clipboard pipeline).\n//            │   └─────────┬────────┘\n//            │             │\n//            │   ┌─────────V────────┐   Resolves the final data.targetRanges.\n//            │   │  clipboardInput  │   Aborts if dropping on dragged content.\n//            │   └─────────┬────────┘\n//            │             │\n//            │   ┌─────────V────────┐\n//            │   │  clipboardInput  │   (The default handler of the clipboard pipeline).\n//            │   └─────────┬────────┘\n//            │             │\n//            │ ┌───────────V───────────┐\n//            │ │  inputTransformation  │   (The default handler of the clipboard pipeline).\n//            │ └───────────┬───────────┘\n//            │             │\n//            │  ┌──────────V──────────┐\n//            │  │   contentInsertion  │   Updates the document selection to drop range.\n//            │  └──────────┬──────────┘\n//            │             │\n//            │  ┌──────────V──────────┐\n//            │  │   contentInsertion  │   (The default handler of the clipboard pipeline).\n//            │  └──────────┬──────────┘\n//            │             │\n//            │  ┌──────────V──────────┐\n//            │  │   contentInsertion  │   Removes the content from the original range if the insertion was successful.\n//            │  └──────────┬──────────┘\n//            │             │\n//            └─────────────┐\n//                          │\n//                ┌─────────V────────┐\n//                │      dragend     │   Removes the drop marker and cleans the state.\n//                └──────────────────┘\n//\n\n/**\n * The drag and drop feature. It works on top of the {@link module:clipboard/clipboardpipeline~ClipboardPipeline}.\n *\n * Read more about the clipboard integration in the {@glink framework/deep-dive/clipboard clipboard deep-dive} guide.\n *\n * @internal\n */\nexport default class DragDrop extends Plugin {\n\t/**\n\t * The live range over the original content that is being dragged.\n\t */\n\tprivate _draggedRange!: LiveRange | null;\n\n\t/**\n\t * The UID of current dragging that is used to verify if the drop started in the same editor as the drag start.\n\t *\n\t * **Note**: This is a workaround for broken 'dragend' events (they are not fired if the source text node got removed).\n\t */\n\tprivate _draggingUid!: string;\n\n\t/**\n\t * The reference to the model element that currently has a `draggable` attribute set (it is set while dragging).\n\t */\n\tprivate _draggableElement!: Element | null;\n\n\t/**\n\t * A delayed callback removing draggable attributes.\n\t */\n\tprivate _clearDraggableAttributesDelayed: DelayedFunc<() => void> = delay( () => this._clearDraggableAttributes(), 40 );\n\n\t/**\n\t * Whether the dragged content can be dropped only in block context.\n\t */\n\t// TODO handle drag from other editor instance\n\t// TODO configure to use block, inline or both\n\tprivate _blockMode: boolean = false;\n\n\t/**\n\t * DOM Emitter.\n\t */\n\tprivate _domEmitter: DomEmitter = new ( DomEmitterMixin() )();\n\n\t/**\n\t * The DOM element used to generate dragged preview image.\n\t */\n\tprivate _previewContainer?: HTMLElement;\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static get pluginName() {\n\t\treturn 'DragDrop' as const;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static get requires() {\n\t\treturn [ ClipboardPipeline, Widget, DragDropTarget, DragDropBlockToolbar ] as const;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic init(): void {\n\t\tconst editor = this.editor;\n\t\tconst view = editor.editing.view;\n\n\t\tthis._draggedRange = null;\n\t\tthis._draggingUid = '';\n\t\tthis._draggableElement = null;\n\n\t\tview.addObserver( ClipboardObserver );\n\t\tview.addObserver( MouseObserver );\n\n\t\tthis._setupDragging();\n\t\tthis._setupContentInsertionIntegration();\n\t\tthis._setupClipboardInputIntegration();\n\t\tthis._setupDraggableAttributeHandling();\n\n\t\tthis.listenTo<ObservableChangeEvent<boolean>>( editor, 'change:isReadOnly', ( evt, name, isReadOnly ) => {\n\t\t\tif ( isReadOnly ) {\n\t\t\t\tthis.forceDisabled( 'readOnlyMode' );\n\t\t\t} else {\n\t\t\t\tthis.clearForceDisabled( 'readOnlyMode' );\n\t\t\t}\n\t\t} );\n\n\t\tthis.on<ObservableChangeEvent<boolean>>( 'change:isEnabled', ( evt, name, isEnabled ) => {\n\t\t\tif ( !isEnabled ) {\n\t\t\t\tthis._finalizeDragging( false );\n\t\t\t}\n\t\t} );\n\n\t\tif ( env.isAndroid ) {\n\t\t\tthis.forceDisabled( 'noAndroidSupport' );\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic override destroy(): void {\n\t\tif ( this._draggedRange ) {\n\t\t\tthis._draggedRange.detach();\n\t\t\tthis._draggedRange = null;\n\t\t}\n\n\t\tif ( this._previewContainer ) {\n\t\t\tthis._previewContainer.remove();\n\t\t}\n\n\t\tthis._domEmitter.stopListening();\n\t\tthis._clearDraggableAttributesDelayed.cancel();\n\n\t\treturn super.destroy();\n\t}\n\n\t/**\n\t * Drag and drop events handling.\n\t */\n\tprivate _setupDragging(): void {\n\t\tconst editor = this.editor;\n\t\tconst model = editor.model;\n\t\tconst view = editor.editing.view;\n\t\tconst viewDocument = view.document;\n\t\tconst dragDropTarget = editor.plugins.get( DragDropTarget );\n\n\t\t// The handler for the drag start; it is responsible for setting data transfer object.\n\t\tthis.listenTo<ViewDocumentDragStartEvent>( viewDocument, 'dragstart', ( evt, data ) => {\n\t\t\t// Don't drag the editable element itself.\n\t\t\tif ( data.target && data.target.is( 'editableElement' ) ) {\n\t\t\t\tdata.preventDefault();\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._prepareDraggedRange( data.target );\n\n\t\t\tif ( !this._draggedRange ) {\n\t\t\t\tdata.preventDefault();\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._draggingUid = uid();\n\n\t\t\tdata.dataTransfer.effectAllowed = this.isEnabled ? 'copyMove' : 'copy';\n\t\t\tdata.dataTransfer.setData( 'application/ckeditor5-dragging-uid', this._draggingUid );\n\n\t\t\tconst draggedSelection = model.createSelection( this._draggedRange.toRange() );\n\t\t\tconst clipboardPipeline: ClipboardPipeline = this.editor.plugins.get( 'ClipboardPipeline' );\n\n\t\t\tclipboardPipeline._fireOutputTransformationEvent( data.dataTransfer, draggedSelection, 'dragstart' );\n\n\t\t\tconst { dataTransfer, domTarget, domEvent } = data;\n\t\t\tconst { clientX } = domEvent;\n\n\t\t\tthis._updatePreview( { dataTransfer, domTarget, clientX } );\n\n\t\t\tdata.stopPropagation();\n\n\t\t\tif ( !this.isEnabled ) {\n\t\t\t\tthis._draggedRange.detach();\n\t\t\t\tthis._draggedRange = null;\n\t\t\t\tthis._draggingUid = '';\n\t\t\t}\n\t\t}, { priority: 'low' } );\n\n\t\t// The handler for finalizing drag and drop. It should always be triggered after dragging completes\n\t\t// even if it was completed in a different application.\n\t\t// Note: This is not fired if source text node got removed while downcasting a marker.\n\t\tthis.listenTo<ViewDocumentDragEndEvent>( viewDocument, 'dragend', ( evt, data ) => {\n\t\t\tthis._finalizeDragging( !data.dataTransfer.isCanceled && data.dataTransfer.dropEffect == 'move' );\n\t\t}, { priority: 'low' } );\n\n\t\t// Reset block dragging mode even if dropped outside the editable.\n\t\tthis._domEmitter.listenTo( global.document, 'dragend', () => {\n\t\t\tthis._blockMode = false;\n\t\t}, { useCapture: true } );\n\n\t\t// Dragging over the editable.\n\t\tthis.listenTo<ViewDocumentDragEnterEvent>( viewDocument, 'dragenter', () => {\n\t\t\tif ( !this.isEnabled ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tview.focus();\n\t\t} );\n\n\t\t// Dragging out of the editable.\n\t\tthis.listenTo<ViewDocumentDragLeaveEvent>( viewDocument, 'dragleave', () => {\n\t\t\t// We do not know if the mouse left the editor or just some element in it, so let us wait a few milliseconds\n\t\t\t// to check if 'dragover' is not fired.\n\t\t\tdragDropTarget.removeDropMarkerDelayed();\n\t\t} );\n\n\t\t// Handler for moving dragged content over the target area.\n\t\tthis.listenTo<ViewDocumentDraggingEvent>( viewDocument, 'dragging', ( evt, data ) => {\n\t\t\tif ( !this.isEnabled ) {\n\t\t\t\tdata.dataTransfer.dropEffect = 'none';\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst { clientX, clientY } = ( data as DomEventData<DragEvent> ).domEvent;\n\n\t\t\tdragDropTarget.updateDropMarker(\n\t\t\t\tdata.target,\n\t\t\t\tdata.targetRanges,\n\t\t\t\tclientX,\n\t\t\t\tclientY,\n\t\t\t\tthis._blockMode,\n\t\t\t\tthis._draggedRange\n\t\t\t);\n\n\t\t\t// If this is content being dragged from another editor, moving out of current editor instance\n\t\t\t// is not possible until 'dragend' event case will be fixed.\n\t\t\tif ( !this._draggedRange ) {\n\t\t\t\tdata.dataTransfer.dropEffect = 'copy';\n\t\t\t}\n\n\t\t\t// In Firefox it is already set and effect allowed remains the same as originally set.\n\t\t\tif ( !env.isGecko ) {\n\t\t\t\tif ( data.dataTransfer.effectAllowed == 'copy' ) {\n\t\t\t\t\tdata.dataTransfer.dropEffect = 'copy';\n\t\t\t\t} else if ( [ 'all', 'copyMove' ].includes( data.dataTransfer.effectAllowed ) ) {\n\t\t\t\t\tdata.dataTransfer.dropEffect = 'move';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tevt.stop();\n\t\t}, { priority: 'low' } );\n\t}\n\n\t/**\n\t * Integration with the `clipboardInput` event.\n\t */\n\tprivate _setupClipboardInputIntegration(): void {\n\t\tconst editor = this.editor;\n\t\tconst view = editor.editing.view;\n\t\tconst viewDocument = view.document;\n\t\tconst dragDropTarget = editor.plugins.get( DragDropTarget );\n\n\t\t// Update the event target ranges and abort dropping if dropping over itself.\n\t\tthis.listenTo<ViewDocumentClipboardInputEvent>( viewDocument, 'clipboardInput', ( evt, data ) => {\n\t\t\tif ( data.method != 'drop' ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst { clientX, clientY } = ( data as DomEventData<DragEvent> ).domEvent;\n\t\t\tconst targetRange = dragDropTarget.getFinalDropRange(\n\t\t\t\tdata.target,\n\t\t\t\tdata.targetRanges,\n\t\t\t\tclientX,\n\t\t\t\tclientY,\n\t\t\t\tthis._blockMode,\n\t\t\t\tthis._draggedRange\n\t\t\t);\n\n\t\t\tif ( !targetRange ) {\n\t\t\t\tthis._finalizeDragging( false );\n\t\t\t\tevt.stop();\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Since we cannot rely on the drag end event, we must check if the local drag range is from the current drag and drop\n\t\t\t// or it is from some previous not cleared one.\n\t\t\tif ( this._draggedRange && this._draggingUid != data.dataTransfer.getData( 'application/ckeditor5-dragging-uid' ) ) {\n\t\t\t\tthis._draggedRange.detach();\n\t\t\t\tthis._draggedRange = null;\n\t\t\t\tthis._draggingUid = '';\n\t\t\t}\n\n\t\t\t// Do not do anything if some content was dragged within the same document to the same position.\n\t\t\tconst isMove = getFinalDropEffect( data.dataTransfer ) == 'move';\n\n\t\t\tif ( isMove && this._draggedRange && this._draggedRange.containsRange( targetRange, true ) ) {\n\t\t\t\tthis._finalizeDragging( false );\n\t\t\t\tevt.stop();\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Override the target ranges with the one adjusted to the best one for a drop.\n\t\t\tdata.targetRanges = [ editor.editing.mapper.toViewRange( targetRange ) ];\n\t\t}, { priority: 'high' } );\n\t}\n\n\t/**\n\t * Integration with the `contentInsertion` event of the clipboard pipeline.\n\t */\n\tprivate _setupContentInsertionIntegration(): void {\n\t\tconst clipboardPipeline = this.editor.plugins.get( ClipboardPipeline );\n\n\t\tclipboardPipeline.on<ClipboardContentInsertionEvent>( 'contentInsertion', ( evt, data ) => {\n\t\t\tif ( !this.isEnabled || data.method !== 'drop' ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Update the selection to the target range in the same change block to avoid selection post-fixing\n\t\t\t// and to be able to clone text attributes for plain text dropping.\n\t\t\tconst ranges = data.targetRanges!.map( viewRange => this.editor.editing.mapper.toModelRange( viewRange ) );\n\n\t\t\tthis.editor.model.change( writer => writer.setSelection( ranges ) );\n\t\t}, { priority: 'high' } );\n\n\t\tclipboardPipeline.on<ClipboardContentInsertionEvent>( 'contentInsertion', ( evt, data ) => {\n\t\t\tif ( !this.isEnabled || data.method !== 'drop' ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Remove dragged range content, remove markers, clean after dragging.\n\t\t\tconst isMove = getFinalDropEffect( data.dataTransfer ) == 'move';\n\n\t\t\t// Whether any content was inserted (insertion might fail if the schema is disallowing some elements\n\t\t\t// (for example an image caption allows only the content of a block but not blocks themselves.\n\t\t\t// Some integrations might not return valid range (i.e., table pasting).\n\t\t\tconst isSuccess = !data.resultRange || !data.resultRange.isCollapsed;\n\n\t\t\tthis._finalizeDragging( isSuccess && isMove );\n\t\t}, { priority: 'lowest' } );\n\t}\n\n\t/**\n\t * Adds listeners that add the `draggable` attribute to the elements while the mouse button is down so the dragging could start.\n\t */\n\tprivate _setupDraggableAttributeHandling(): void {\n\t\tconst editor = this.editor;\n\t\tconst view = editor.editing.view;\n\t\tconst viewDocument = view.document;\n\n\t\t// Add the 'draggable' attribute to the widget while pressing the selection handle.\n\t\t// This is required for widgets to be draggable. In Chrome it will enable dragging text nodes.\n\t\tthis.listenTo<ViewDocumentMouseDownEvent>( viewDocument, 'mousedown', ( evt, data ) => {\n\t\t\t// The lack of data can be caused by editor tests firing fake mouse events. This should not occur\n\t\t\t// in real-life scenarios but this greatly simplifies editor tests that would otherwise fail a lot.\n\t\t\tif ( env.isAndroid || !data ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._clearDraggableAttributesDelayed.cancel();\n\n\t\t\t// Check if this is a mousedown over the widget (but not a nested editable).\n\t\t\tlet draggableElement = findDraggableWidget( data.target );\n\n\t\t\t// Note: There is a limitation that if more than a widget is selected (a widget and some text)\n\t\t\t// and dragging starts on the widget, then only the widget is dragged.\n\n\t\t\t// If this was not a widget then we should check if we need to drag some text content.\n\t\t\t// In Chrome set a 'draggable' attribute on closest editable to allow immediate dragging of the selected text range.\n\t\t\t// In Firefox this is not needed. In Safari it makes the whole editable draggable (not just textual content).\n\t\t\t// Disabled in read-only mode because draggable=\"true\" + contenteditable=\"false\" results\n\t\t\t// in not firing selectionchange event ever, which makes the selection stuck in read-only mode.\n\t\t\tif ( env.isBlink && !editor.isReadOnly && !draggableElement && !viewDocument.selection.isCollapsed ) {\n\t\t\t\tconst selectedElement = viewDocument.selection.getSelectedElement();\n\n\t\t\t\tif ( !selectedElement || !isWidget( selectedElement ) ) {\n\t\t\t\t\tdraggableElement = viewDocument.selection.editableElement;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( draggableElement ) {\n\t\t\t\tview.change( writer => {\n\t\t\t\t\twriter.setAttribute( 'draggable', 'true', draggableElement! );\n\t\t\t\t} );\n\n\t\t\t\t// Keep the reference to the model element in case the view element gets removed while dragging.\n\t\t\t\tthis._draggableElement = editor.editing.mapper.toModelElement( draggableElement )!;\n\t\t\t}\n\t\t} );\n\n\t\t// Remove the draggable attribute in case no dragging started (only mousedown + mouseup).\n\t\tthis.listenTo<ViewDocumentMouseUpEvent>( viewDocument, 'mouseup', () => {\n\t\t\tif ( !env.isAndroid ) {\n\t\t\t\tthis._clearDraggableAttributesDelayed();\n\t\t\t}\n\t\t} );\n\t}\n\n\t/**\n\t * Removes the `draggable` attribute from the element that was used for dragging.\n\t */\n\tprivate _clearDraggableAttributes(): void {\n\t\tconst editing = this.editor.editing;\n\n\t\tediting.view.change( writer => {\n\t\t\t// Remove 'draggable' attribute.\n\t\t\tif ( this._draggableElement && this._draggableElement.root.rootName != '$graveyard' ) {\n\t\t\t\twriter.removeAttribute( 'draggable', editing.mapper.toViewElement( this._draggableElement )! );\n\t\t\t}\n\n\t\t\tthis._draggableElement = null;\n\t\t} );\n\t}\n\n\t/**\n\t * Deletes the dragged content from its original range and clears the dragging state.\n\t *\n\t * @param moved Whether the move succeeded.\n\t */\n\tprivate _finalizeDragging( moved: boolean ): void {\n\t\tconst editor = this.editor;\n\t\tconst model = editor.model;\n\t\tconst dragDropTarget = editor.plugins.get( DragDropTarget );\n\n\t\tdragDropTarget.removeDropMarker();\n\t\tthis._clearDraggableAttributes();\n\n\t\tif ( editor.plugins.has( 'WidgetToolbarRepository' ) ) {\n\t\t\tconst widgetToolbarRepository: WidgetToolbarRepository = editor.plugins.get( 'WidgetToolbarRepository' );\n\n\t\t\twidgetToolbarRepository.clearForceDisabled( 'dragDrop' );\n\t\t}\n\n\t\tthis._draggingUid = '';\n\n\t\tif ( this._previewContainer ) {\n\t\t\tthis._previewContainer.remove();\n\t\t\tthis._previewContainer = undefined;\n\t\t}\n\n\t\tif ( !this._draggedRange ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Delete moved content.\n\t\tif ( moved && this.isEnabled ) {\n\t\t\tmodel.change( writer => {\n\t\t\t\tconst selection = model.createSelection( this._draggedRange );\n\n\t\t\t\tmodel.deleteContent( selection, { doNotAutoparagraph: true } );\n\n\t\t\t\t// Check result selection if it does not require auto-paragraphing of empty container.\n\t\t\t\tconst selectionParent = selection.getFirstPosition()!.parent as Element;\n\n\t\t\t\tif (\n\t\t\t\t\tselectionParent.isEmpty &&\n\t\t\t\t\t!model.schema.checkChild( selectionParent, '$text' ) &&\n\t\t\t\t\tmodel.schema.checkChild( selectionParent, 'paragraph' )\n\t\t\t\t) {\n\t\t\t\t\twriter.insertElement( 'paragraph', selectionParent, 0 );\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\n\t\tthis._draggedRange.detach();\n\t\tthis._draggedRange = null;\n\t}\n\n\t/**\n\t * Sets the dragged source range based on event target and document selection.\n\t */\n\tprivate _prepareDraggedRange( target: ViewElement ): void {\n\t\tconst editor = this.editor;\n\t\tconst model = editor.model;\n\t\tconst selection = model.document.selection;\n\n\t\t// Check if this is dragstart over the widget (but not a nested editable).\n\t\tconst draggableWidget = target ? findDraggableWidget( target ) : null;\n\n\t\tif ( draggableWidget ) {\n\t\t\tconst modelElement = editor.editing.mapper.toModelElement( draggableWidget )!;\n\n\t\t\tthis._draggedRange = LiveRange.fromRange( model.createRangeOn( modelElement ) );\n\t\t\tthis._blockMode = model.schema.isBlock( modelElement );\n\n\t\t\t// Disable toolbars so they won't obscure the drop area.\n\t\t\tif ( editor.plugins.has( 'WidgetToolbarRepository' ) ) {\n\t\t\t\tconst widgetToolbarRepository: WidgetToolbarRepository = editor.plugins.get( 'WidgetToolbarRepository' );\n\n\t\t\t\twidgetToolbarRepository.forceDisabled( 'dragDrop' );\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\t// If this was not a widget we should check if we need to drag some text content.\n\t\tif ( selection.isCollapsed && !( selection.getFirstPosition()!.parent as Element ).isEmpty ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst blocks = Array.from( selection.getSelectedBlocks() );\n\t\tconst draggedRange = selection.getFirstRange()!;\n\n\t\tif ( blocks.length == 0 ) {\n\t\t\tthis._draggedRange = LiveRange.fromRange( draggedRange );\n\n\t\t\treturn;\n\t\t}\n\n\t\tconst blockRange = getRangeIncludingFullySelectedParents( model, blocks );\n\n\t\tif ( blocks.length > 1 ) {\n\t\t\tthis._draggedRange = LiveRange.fromRange( blockRange );\n\t\t\tthis._blockMode = true;\n\t\t\t// TODO block mode for dragging from outside editor? or inline? or both?\n\t\t} else if ( blocks.length == 1 ) {\n\t\t\tconst touchesBlockEdges = draggedRange.start.isTouching( blockRange.start ) &&\n\t\t\t\t\tdraggedRange.end.isTouching( blockRange.end );\n\n\t\t\tthis._draggedRange = LiveRange.fromRange( touchesBlockEdges ? blockRange : draggedRange );\n\t\t\tthis._blockMode = touchesBlockEdges;\n\t\t}\n\n\t\tmodel.change( writer => writer.setSelection( this._draggedRange!.toRange() ) );\n\t}\n\n\t/**\n\t * Updates the dragged preview image.\n\t */\n\tprivate _updatePreview( {\n\t\tdataTransfer,\n\t\tdomTarget,\n\t\tclientX\n\t}: {\n\t\tdataTransfer: DataTransfer;\n\t\tdomTarget: HTMLElement;\n\t\tclientX: number;\n\t} ): void {\n\t\tconst view = this.editor.editing.view;\n\t\tconst editable = view.document.selection.editableElement!;\n\t\tconst domEditable = view.domConverter.mapViewToDom( editable )!;\n\t\tconst computedStyle = global.window.getComputedStyle( domEditable );\n\n\t\tif ( !this._previewContainer ) {\n\t\t\tthis._previewContainer = createElement( global.document, 'div', {\n\t\t\t\tstyle: 'position: fixed; left: -999999px;'\n\t\t\t} );\n\n\t\t\tglobal.document.body.appendChild( this._previewContainer );\n\t\t} else if ( this._previewContainer.firstElementChild ) {\n\t\t\tthis._previewContainer.removeChild( this._previewContainer.firstElementChild );\n\t\t}\n\n\t\tconst domRect = new Rect( domEditable );\n\n\t\t// If domTarget is inside the editable root, browsers will display the preview correctly by themselves.\n\t\tif ( domEditable.contains( domTarget ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst domEditablePaddingLeft = parseFloat( computedStyle.paddingLeft );\n\t\tconst preview = createElement( global.document, 'div' );\n\n\t\tpreview.className = 'ck ck-content';\n\t\tpreview.style.width = computedStyle.width;\n\t\tpreview.style.paddingLeft = `${ domRect.left - clientX + domEditablePaddingLeft }px`;\n\n\t\t/**\n\t\t * Set white background in drag and drop preview if iOS.\n\t\t * Check: https://github.com/ckeditor/ckeditor5/issues/15085\n\t\t */\n\t\tif ( env.isiOS ) {\n\t\t\tpreview.style.backgroundColor = 'white';\n\t\t}\n\n\t\tpreview.innerHTML = dataTransfer.getData( 'text/html' );\n\n\t\tdataTransfer.setDragImage( preview, 0, 0 );\n\n\t\tthis._previewContainer.appendChild( preview );\n\t}\n}\n\n/**\n * Returns the drop effect that should be a result of dragging the content.\n * This function is handling a quirk when checking the effect in the 'drop' DOM event.\n */\nfunction getFinalDropEffect( dataTransfer: DataTransfer ): DataTransfer[ 'dropEffect' ] {\n\tif ( env.isGecko ) {\n\t\treturn dataTransfer.dropEffect;\n\t}\n\n\treturn [ 'all', 'copyMove' ].includes( dataTransfer.effectAllowed ) ? 'move' : 'copy';\n}\n\n/**\n * Returns a widget element that should be dragged.\n */\nfunction findDraggableWidget( target: ViewElement ): ViewElement | null {\n\t// This is directly an editable so not a widget for sure.\n\tif ( target.is( 'editableElement' ) ) {\n\t\treturn null;\n\t}\n\n\t// TODO: Let's have a isWidgetSelectionHandleDomElement() helper in ckeditor5-widget utils.\n\tif ( target.hasClass( 'ck-widget__selection-handle' ) ) {\n\t\treturn target.findAncestor( isWidget );\n\t}\n\n\t// Direct hit on a widget.\n\tif ( isWidget( target ) ) {\n\t\treturn target;\n\t}\n\n\t// Find closest ancestor that is either a widget or an editable element...\n\tconst ancestor = target.findAncestor( node => isWidget( node ) || node.is( 'editableElement' ) )!;\n\n\t// ...and if closer was the widget then enable dragging it.\n\tif ( isWidget( ancestor ) ) {\n\t\treturn ancestor;\n\t}\n\n\treturn null;\n}\n\n/**\n * Recursively checks if common parent of provided elements doesn't have any other children. If that's the case,\n * it returns range including this parent. Otherwise, it returns only the range from first to last element.\n *\n * Example:\n *\n * <blockQuote>\n *   <paragraph>[Test 1</paragraph>\n *   <paragraph>Test 2</paragraph>\n *   <paragraph>Test 3]</paragraph>\n * <blockQuote>\n *\n * Because all elements inside the `blockQuote` are selected, the range is extended to include the `blockQuote` too.\n * If only first and second paragraphs would be selected, the range would not include it.\n */\nfunction getRangeIncludingFullySelectedParents( model: Model, elements: Array<Element> ): Range {\n\tconst firstElement = elements[ 0 ];\n\tconst lastElement = elements[ elements.length - 1 ];\n\tconst parent = firstElement.getCommonAncestor( lastElement );\n\tconst startPosition: Position = model.createPositionBefore( firstElement );\n\tconst endPosition: Position = model.createPositionAfter( lastElement );\n\n\tif (\n\t\tparent &&\n\t\tparent.is( 'element' ) &&\n\t\t!model.schema.isLimit( parent )\n\t) {\n\t\tconst parentRange = model.createRangeOn( parent );\n\t\tconst touchesStart = startPosition.isTouching( parentRange.start );\n\t\tconst touchesEnd = endPosition.isTouching( parentRange.end );\n\n\t\tif ( touchesStart && touchesEnd ) {\n\t\t\t// Selection includes all elements in the parent.\n\t\t\treturn getRangeIncludingFullySelectedParents( model, [ parent ] );\n\t\t}\n\t}\n\n\treturn model.createRange( startPosition, endPosition );\n}\n","/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module clipboard/pasteplaintext\n */\n\nimport { Plugin } from '@ckeditor/ckeditor5-core';\n\nimport type { DocumentFragment, Model, Element } from '@ckeditor/ckeditor5-engine';\n\nimport ClipboardObserver from './clipboardobserver.js';\nimport ClipboardPipeline, { type ClipboardContentInsertionEvent } from './clipboardpipeline.js';\n\n/**\n * The plugin detects the user's intention to paste plain text.\n *\n * For example, it detects the <kbd>Ctrl/Cmd</kbd> + <kbd>Shift</kbd> + <kbd>V</kbd> keystroke.\n */\nexport default class PastePlainText extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static get pluginName() {\n\t\treturn 'PastePlainText' as const;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static get requires() {\n\t\treturn [ ClipboardPipeline ] as const;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic init(): void {\n\t\tconst editor = this.editor;\n\t\tconst model = editor.model;\n\t\tconst view = editor.editing.view;\n\t\tconst selection = model.document.selection;\n\n\t\tview.addObserver( ClipboardObserver );\n\n\t\teditor.plugins.get( ClipboardPipeline ).on<ClipboardContentInsertionEvent>( 'contentInsertion', ( evt, data ) => {\n\t\t\tif ( !isUnformattedInlineContent( data.content, model ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tmodel.change( writer => {\n\t\t\t\t// Formatting attributes should be preserved.\n\t\t\t\tconst textAttributes = Array.from( selection.getAttributes() )\n\t\t\t\t\t.filter( ( [ key ] ) => model.schema.getAttributeProperties( key ).isFormatting );\n\n\t\t\t\tif ( !selection.isCollapsed ) {\n\t\t\t\t\tmodel.deleteContent( selection, { doNotAutoparagraph: true } );\n\t\t\t\t}\n\n\t\t\t\t// Also preserve other attributes if they survived the content deletion (because they were not fully selected).\n\t\t\t\t// For example linkHref is not a formatting attribute but it should be preserved if pasted text was in the middle\n\t\t\t\t// of a link.\n\t\t\t\ttextAttributes.push( ...selection.getAttributes() );\n\n\t\t\t\tconst range = writer.createRangeIn( data.content );\n\n\t\t\t\tfor ( const item of range.getItems() ) {\n\t\t\t\t\tfor ( const attribute of textAttributes ) {\n\t\t\t\t\t\tif ( model.schema.checkAttribute( item, attribute[ 0 ] ) ) {\n\t\t\t\t\t\t\twriter.setAttribute( attribute[ 0 ], attribute[ 1 ], item );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\t\t} );\n\t}\n}\n\n/**\n * Returns true if specified `documentFragment` represents the unformatted inline content.\n */\nfunction isUnformattedInlineContent( documentFragment: DocumentFragment, model: Model ): boolean {\n\tlet range = model.createRangeIn( documentFragment );\n\n\t// We consider three scenarios here. The document fragment may include:\n\t//\n\t// 1. Only text and inline objects. Then it could be unformatted inline content.\n\t// 2. Exactly one block element on top-level, eg. <p>Foobar</p> or <h2>Title</h2>.\n\t//    In this case, check this element content, it could be treated as unformatted inline content.\n\t// 3. More block elements or block objects, then it is not unformatted inline content.\n\t//\n\t// We will check for scenario 2. specifically, and if it happens, we will unwrap it and follow with the regular algorithm.\n\t//\n\tif ( documentFragment.childCount == 1 ) {\n\t\tconst child = documentFragment.getChild( 0 )!;\n\n\t\tif ( child.is( 'element' ) && model.schema.isBlock( child ) && !model.schema.isObject( child ) && !model.schema.isLimit( child ) ) {\n\t\t\t// Scenario 2. as described above.\n\t\t\trange = model.createRangeIn( child as Element );\n\t\t}\n\t}\n\n\tfor ( const child of range.getItems() ) {\n\t\tif ( !model.schema.isInline( child ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst attributeKeys = Array.from( child.getAttributeKeys() );\n\n\t\tif ( attributeKeys.find( key => model.schema.getAttributeProperties( key ).isFormatting ) ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n","/**\n * @license Copyright (c) 2003-2024, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module clipboard/clipboard\n */\n\nimport { Plugin } from '@ckeditor/ckeditor5-core';\n\nimport ClipboardPipeline from './clipboardpipeline.js';\nimport DragDrop from './dragdrop.js';\nimport PastePlainText from './pasteplaintext.js';\nimport ClipboardMarkersUtils from './clipboardmarkersutils.js';\n\n/**\n * The clipboard feature.\n *\n * Read more about the clipboard integration in the {@glink framework/deep-dive/clipboard clipboard deep-dive} guide.\n *\n * This is a \"glue\" plugin which loads the following plugins:\n * * {@link module:clipboard/clipboardpipeline~ClipboardPipeline}\n * * {@link module:clipboard/dragdrop~DragDrop}\n * * {@link module:clipboard/pasteplaintext~PastePlainText}\n */\nexport default class Clipboard extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static get pluginName() {\n\t\treturn 'Clipboard' as const;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic static get requires() {\n\t\treturn [ ClipboardMarkersUtils, ClipboardPipeline, DragDrop, PastePlainText ] as const;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic init(): void {\n\t\tconst editor = this.editor;\n\t\tconst t = this.editor.t;\n\n\t\t// Add the information about the keystrokes to the accessibility database.\n\t\teditor.accessibility.addKeystrokeInfos( {\n\t\t\tkeystrokes: [\n\t\t\t\t{\n\t\t\t\t\tlabel: t( 'Copy selected content' ),\n\t\t\t\t\tkeystroke: 'CTRL+C'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: t( 'Paste content' ),\n\t\t\t\t\tkeystroke: 'CTRL+V'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: t( 'Paste content as plain text' ),\n\t\t\t\t\tkeystroke: 'CTRL+SHIFT+V'\n\t\t\t\t}\n\t\t\t]\n\t\t} );\n\t}\n}\n"]}